%PDF-1.3
%“Œ‹ž ReportLab Generated PDF document http://www.reportlab.com
% 'BasicFonts': class PDFDictionary 
1 0 obj
% The standard fonts dictionary
<< /F1 2 0 R
 /F2 3 0 R
 /F3 4 0 R
 /F4 8 0 R
 /F5 9 0 R
 /F6 22 0 R >>
endobj
% 'F1': class PDFType1Font 
2 0 obj
% Font Helvetica
<< /BaseFont /Helvetica
 /Encoding /WinAnsiEncoding
 /Name /F1
 /Subtype /Type1
 /Type /Font >>
endobj
% 'F2': class PDFType1Font 
3 0 obj
% Font Helvetica-Bold
<< /BaseFont /Helvetica-Bold
 /Encoding /WinAnsiEncoding
 /Name /F2
 /Subtype /Type1
 /Type /Font >>
endobj
% 'F3': class PDFType1Font 
4 0 obj
% Font Times-Roman
<< /BaseFont /Times-Roman
 /Encoding /WinAnsiEncoding
 /Name /F3
 /Subtype /Type1
 /Type /Font >>
endobj
% 'Annot.NUMBER1': class PDFDictionary 
5 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (mailto:michele.simionato@gmail.com) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 153.7323
 707.5936
 526.5827
 719.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER2': class PDFDictionary 
6 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://pypi.python.org/pypi/plac) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 153.7323
 677.5936
 526.5827
 689.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER3': class PDFDictionary 
7 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://micheles.googlecode.com/hg/plac/doc/plac.html) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 153.7323
 650.5936
 526.5827
 662.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'F4': class PDFType1Font 
8 0 obj
% Font Courier
<< /BaseFont /Courier
 /Encoding /WinAnsiEncoding
 /Name /F4
 /Subtype /Type1
 /Type /Font >>
endobj
% 'F5': class PDFType1Font 
9 0 obj
% Font Helvetica-Oblique
<< /BaseFont /Helvetica-Oblique
 /Encoding /WinAnsiEncoding
 /Name /F5
 /Subtype /Type1
 /Type /Font >>
endobj
% 'Annot.NUMBER4': class LinkAnnotation 
10 0 obj
<< /Border [ 0
 0
 0 ]
 /Contents ()
 /Dest [ 42 0 R
 /XYZ
 62.69291
 302.0236
 0 ]
 /Rect [ 62.69291
 518.5936
 121.0229
 530.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER5': class LinkAnnotation 
11 0 obj
<< /Border [ 0
 0
 0 ]
 /Contents ()
 /Dest [ 42 0 R
 /XYZ
 62.69291
 302.0236
 0 ]
 /Rect [ 527.0227
 518.5936
 532.5827
 530.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER6': class LinkAnnotation 
12 0 obj
<< /Border [ 0
 0
 0 ]
 /Contents ()
 /Dest [ 44 0 R
 /XYZ
 62.69291
 765.0236
 0 ]
 /Rect [ 62.69291
 500.5936
 249.4129
 512.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER7': class LinkAnnotation 
13 0 obj
<< /Border [ 0
 0
 0 ]
 /Contents ()
 /Dest [ 44 0 R
 /XYZ
 62.69291
 765.0236
 0 ]
 /Rect [ 527.0227
 500.5936
 532.5827
 512.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER8': class LinkAnnotation 
14 0 obj
<< /Border [ 0
 0
 0 ]
 /Contents ()
 /Dest [ 47 0 R
 /XYZ
 62.69291
 306.6236
 0 ]
 /Rect [ 62.69291
 482.5936
 184.9529
 494.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER9': class LinkAnnotation 
15 0 obj
<< /Border [ 0
 0
 0 ]
 /Contents ()
 /Dest [ 47 0 R
 /XYZ
 62.69291
 306.6236
 0 ]
 /Rect [ 527.0227
 482.5936
 532.5827
 494.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER10': class LinkAnnotation 
16 0 obj
<< /Border [ 0
 0
 0 ]
 /Contents ()
 /Dest [ 48 0 R
 /XYZ
 62.69291
 297.8236
 0 ]
 /Rect [ 62.69291
 464.5936
 134.4029
 476.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER11': class LinkAnnotation 
17 0 obj
<< /Border [ 0
 0
 0 ]
 /Contents ()
 /Dest [ 48 0 R
 /XYZ
 62.69291
 297.8236
 0 ]
 /Rect [ 527.0227
 464.5936
 532.5827
 476.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER12': class LinkAnnotation 
18 0 obj
<< /Border [ 0
 0
 0 ]
 /Contents ()
 /Dest [ 61 0 R
 /XYZ
 62.69291
 681.0236
 0 ]
 /Rect [ 62.69291
 446.5936
 148.2829
 458.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER13': class LinkAnnotation 
19 0 obj
<< /Border [ 0
 0
 0 ]
 /Contents ()
 /Dest [ 61 0 R
 /XYZ
 62.69291
 681.0236
 0 ]
 /Rect [ 527.0227
 446.5936
 532.5827
 458.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER14': class LinkAnnotation 
20 0 obj
<< /Border [ 0
 0
 0 ]
 /Contents ()
 /Dest [ 65 0 R
 /XYZ
 62.69291
 765.0236
 0 ]
 /Rect [ 62.69291
 428.5936
 182.7129
 440.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER15': class LinkAnnotation 
21 0 obj
<< /Border [ 0
 0
 0 ]
 /Contents ()
 /Dest [ 65 0 R
 /XYZ
 62.69291
 765.0236
 0 ]
 /Rect [ 527.0227
 428.5936
 532.5827
 440.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'F6': class PDFType1Font 
22 0 obj
% Font Courier-Bold
<< /BaseFont /Courier-Bold
 /Encoding /WinAnsiEncoding
 /Name /F6
 /Subtype /Type1
 /Type /Font >>
endobj
% 'Annot.NUMBER16': class LinkAnnotation 
23 0 obj
<< /Border [ 0
 0
 0 ]
 /Contents ()
 /Dest [ 85 0 R
 /XYZ
 62.69291
 765.0236
 0 ]
 /Rect [ 62.69291
 410.5936
 135.0429
 422.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER17': class LinkAnnotation 
24 0 obj
<< /Border [ 0
 0
 0 ]
 /Contents ()
 /Dest [ 85 0 R
 /XYZ
 62.69291
 765.0236
 0 ]
 /Rect [ 527.0227
 410.5936
 532.5827
 422.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER18': class LinkAnnotation 
25 0 obj
<< /Border [ 0
 0
 0 ]
 /Contents ()
 /Dest [ 85 0 R
 /XYZ
 62.69291
 181.6236
 0 ]
 /Rect [ 62.69291
 392.5936
 137.7129
 404.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER19': class LinkAnnotation 
26 0 obj
<< /Border [ 0
 0
 0 ]
 /Contents ()
 /Dest [ 85 0 R
 /XYZ
 62.69291
 181.6236
 0 ]
 /Rect [ 527.0227
 392.5936
 532.5827
 404.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER20': class LinkAnnotation 
27 0 obj
<< /Border [ 0
 0
 0 ]
 /Contents ()
 /Dest [ 89 0 R
 /XYZ
 62.69291
 371.4236
 0 ]
 /Rect [ 62.69291
 374.5936
 193.8529
 386.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER21': class LinkAnnotation 
28 0 obj
<< /Border [ 0
 0
 0 ]
 /Contents ()
 /Dest [ 89 0 R
 /XYZ
 62.69291
 371.4236
 0 ]
 /Rect [ 521.4627
 374.5936
 532.5827
 386.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER22': class LinkAnnotation 
29 0 obj
<< /Border [ 0
 0
 0 ]
 /Contents ()
 /Dest [ 92 0 R
 /XYZ
 62.69291
 384.6236
 0 ]
 /Rect [ 62.69291
 356.5936
 201.6029
 368.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER23': class LinkAnnotation 
30 0 obj
<< /Border [ 0
 0
 0 ]
 /Contents ()
 /Dest [ 92 0 R
 /XYZ
 62.69291
 384.6236
 0 ]
 /Rect [ 521.4627
 356.5936
 532.5827
 368.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER24': class LinkAnnotation 
31 0 obj
<< /Border [ 0
 0
 0 ]
 /Contents ()
 /Dest [ 95 0 R
 /XYZ
 62.69291
 241.4236
 0 ]
 /Rect [ 62.69291
 338.5936
 108.2629
 350.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER25': class LinkAnnotation 
32 0 obj
<< /Border [ 0
 0
 0 ]
 /Contents ()
 /Dest [ 95 0 R
 /XYZ
 62.69291
 241.4236
 0 ]
 /Rect [ 521.4627
 338.5936
 532.5827
 350.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER26': class LinkAnnotation 
33 0 obj
<< /Border [ 0
 0
 0 ]
 /Contents ()
 /Dest [ 97 0 R
 /XYZ
 62.69291
 687.0236
 0 ]
 /Rect [ 62.69291
 320.5936
 241.6029
 332.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER27': class LinkAnnotation 
34 0 obj
<< /Border [ 0
 0
 0 ]
 /Contents ()
 /Dest [ 97 0 R
 /XYZ
 62.69291
 687.0236
 0 ]
 /Rect [ 521.4627
 320.5936
 532.5827
 332.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER28': class PDFDictionary 
35 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://pypi.python.org/pypi/plac) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 185.4471
 266.5936
 207.1062
 278.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER29': class PDFDictionary 
36 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://pypi.python.org/pypi/plac) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 177.6784
 254.5936
 199.6123
 266.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER30': class PDFDictionary 
37 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://pypi.python.org/pypi/plac) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 62.69291
 200.5936
 83.81291
 212.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER31': class PDFDictionary 
38 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://pypi.python.org/pypi/plac) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 278.4678
 182.5936
 300.0328
 194.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER32': class PDFDictionary 
39 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://pypi.python.org/pypi/plac) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 117.3573
 170.5936
 138.5845
 182.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER33': class PDFDictionary 
40 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://twill.idyll.org/) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 83.20457
 128.5936
 105.3762
 140.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER34': class PDFDictionary 
41 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://pypi.python.org/pypi/plac) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 128.6679
 128.5936
 147.0079
 140.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Page1': class PDFPage 
42 0 obj
% Page dictionary
<< /Annots [ 5 0 R
 6 0 R
 7 0 R
 10 0 R
 11 0 R
 12 0 R
 13 0 R
 14 0 R
 15 0 R
 16 0 R
 17 0 R
 18 0 R
 19 0 R
 20 0 R
 21 0 R
 23 0 R
 24 0 R
 25 0 R
 26 0 R
 27 0 R
 28 0 R
 29 0 R
 30 0 R
 31 0 R
 32 0 R
 33 0 R
 34 0 R
 35 0 R
 36 0 R
 37 0 R
 38 0 R
 39 0 R
 40 0 R
 41 0 R ]
 /Contents 115 0 R
 /MediaBox [ 0
 0
 595.2756
 841.8898 ]
 /Parent 114 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Annot.NUMBER35': class PDFDictionary 
43 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://micheles.googlecode.com/hg/plac/doc/plac.html) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 62.69291
 633.5936
 157.1829
 645.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Page2': class PDFPage 
44 0 obj
% Page dictionary
<< /Annots [ 43 0 R ]
 /Contents 116 0 R
 /MediaBox [ 0
 0
 595.2756
 841.8898 ]
 /Parent 114 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Annot.NUMBER36': class PDFDictionary 
45 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://freshmeat.net/projects/rlwrap/) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 223.0988
 711.3936
 255.7481
 723.3936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER37': class PDFDictionary 
46 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://freshmeat.net/projects/rlwrap/) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 390.8554
 711.3936
 423.5047
 723.3936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Page3': class PDFPage 
47 0 obj
% Page dictionary
<< /Annots [ 45 0 R
 46 0 R ]
 /Contents 117 0 R
 /MediaBox [ 0
 0
 595.2756
 841.8898 ]
 /Parent 114 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Page4': class PDFPage 
48 0 obj
% Page dictionary
<< /Contents 118 0 R
 /MediaBox [ 0
 0
 595.2756
 841.8898 ]
 /Parent 114 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Annot.NUMBER38': class PDFDictionary 
49 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://pypi.python.org/pypi/plac) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 370.6785
 651.3936
 392.4956
 663.3936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER39': class PDFDictionary 
50 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://pypi.python.org/pypi/plac) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 455.8742
 651.3936
 477.6913
 663.3936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER40': class PDFDictionary 
51 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://pypi.python.org/pypi/plac) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 185.9351
 454.6093
 207.4695
 466.6093 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER41': class PDFDictionary 
52 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://docs.python.org/library/shlex.html) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 369.8905
 454.6093
 396.425
 466.6093 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER42': class PDFDictionary 
53 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://pypi.python.org/pypi/plac) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 408.8916
 442.6093
 427.2316
 454.6093 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER43': class PDFDictionary 
54 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://docs.python.org/library/shlex.html) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 62.69291
 430.6093
 86.03291
 442.6093 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER44': class PDFDictionary 
55 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://pypi.python.org/pypi/plac) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 91.65423
 430.6093
 112.8355
 442.6093 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER45': class PDFDictionary 
56 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://docs.python.org/library/shlex.html) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 223.1366
 418.6093
 250.7972
 430.6093 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER46': class PDFDictionary 
57 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://pypi.python.org/pypi/plac) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 201.0929
 322.6093
 222.2129
 334.6093 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Page5': class PDFPage 
58 0 obj
% Page dictionary
<< /Annots [ 49 0 R
 50 0 R
 51 0 R
 52 0 R
 53 0 R
 54 0 R
 55 0 R
 56 0 R
 57 0 R ]
 /Contents 119 0 R
 /MediaBox [ 0
 0
 595.2756
 841.8898 ]
 /Parent 114 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Annot.NUMBER47': class PDFDictionary 
59 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://pypi.python.org/pypi/plac) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 460.388
 633.5936
 482.0127
 645.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER48': class PDFDictionary 
60 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://pypi.python.org/pypi/plac) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 95.32996
 567.5936
 116.857
 579.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Page6': class PDFPage 
61 0 obj
% Page dictionary
<< /Annots [ 59 0 R
 60 0 R ]
 /Contents 120 0 R
 /MediaBox [ 0
 0
 595.2756
 841.8898 ]
 /Parent 114 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Annot.NUMBER49': class PDFDictionary 
62 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://micheles.googlecode.com/hg/plac/doc/plac.html) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 316.3528
 729.5936
 409.2453
 741.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER50': class PDFDictionary 
63 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://pypi.python.org/pypi/plac) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 441.0467
 717.5936
 463.6507
 729.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER51': class PDFDictionary 
64 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://pypi.python.org/pypi/plac) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 62.69291
 687.5936
 84.70395
 699.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Page7': class PDFPage 
65 0 obj
% Page dictionary
<< /Annots [ 62 0 R
 63 0 R
 64 0 R ]
 /Contents 121 0 R
 /MediaBox [ 0
 0
 595.2756
 841.8898 ]
 /Parent 114 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Annot.NUMBER52': class PDFDictionary 
66 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://pypi.python.org/pypi/plac) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 431.7904
 639.3936
 453.7245
 651.3936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER53': class PDFDictionary 
67 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://freshmeat.net/projects/rlwrap/) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 465.1151
 226.1936
 495.7839
 238.1936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER54': class PDFDictionary 
68 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://pypi.python.org/pypi/plac) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 206.6529
 184.1936
 227.7729
 196.1936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Page8': class PDFPage 
69 0 obj
% Page dictionary
<< /Annots [ 66 0 R
 67 0 R
 68 0 R ]
 /Contents 122 0 R
 /MediaBox [ 0
 0
 595.2756
 841.8898 ]
 /Parent 114 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Annot.NUMBER55': class PDFDictionary 
70 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://docs.python.org/library/cmd.html) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 163.0507
 729.5936
 185.1123
 741.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER56': class PDFDictionary 
71 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://pypi.python.org/pypi/plac) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 514.6827
 717.5936
 533.0227
 729.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER57': class PDFDictionary 
72 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://pypi.python.org/pypi/plac) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 127.0179
 705.5936
 148.2762
 717.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER58': class PDFDictionary 
73 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://docs.python.org/library/cmd.html) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 197.4628
 705.5936
 219.2712
 717.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER59': class PDFDictionary 
74 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://docs.python.org/library/cmd.html) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 62.69291
 693.5936
 81.58291
 705.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER60': class PDFDictionary 
75 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://pypi.python.org/pypi/plac) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 158.1049
 693.5936
 180.2789
 705.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER61': class PDFDictionary 
76 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://freshmeat.net/projects/rlwrap/) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 483.7387
 693.5936
 510.9587
 705.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER62': class PDFDictionary 
77 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://pypi.python.org/pypi/plac) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 244.5366
 681.5936
 266.7822
 693.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER63': class PDFDictionary 
78 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://docs.python.org/library/cmd.html) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 287.3678
 681.5936
 306.2578
 693.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER64': class PDFDictionary 
79 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://docs.python.org/library/cmd.html) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 452.6357
 669.5936
 474.6447
 681.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER65': class PDFDictionary 
80 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://pypi.python.org/pypi/plac) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 494.4437
 669.5936
 512.7837
 681.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER66': class PDFDictionary 
81 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://pypi.python.org/pypi/plac) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 193.5645
 209.1936
 215.6228
 221.1936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER67': class PDFDictionary 
82 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://pypi.python.org/pypi/plac) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 114.3829
 197.1936
 132.7229
 209.1936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER68': class PDFDictionary 
83 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://pypi.python.org/pypi/plac) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 149.5469
 146.1936
 172.1982
 158.1936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER69': class PDFDictionary 
84 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://docs.python.org/distutils/) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 224.3178
 134.1936
 260.8853
 146.1936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Page9': class PDFPage 
85 0 obj
% Page dictionary
<< /Annots [ 70 0 R
 71 0 R
 72 0 R
 73 0 R
 74 0 R
 75 0 R
 76 0 R
 77 0 R
 78 0 R
 79 0 R
 80 0 R
 81 0 R
 82 0 R
 83 0 R
 84 0 R ]
 /Contents 123 0 R
 /MediaBox [ 0
 0
 595.2756
 841.8898 ]
 /Parent 114 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Page10': class PDFPage 
86 0 obj
% Page dictionary
<< /Contents 124 0 R
 /MediaBox [ 0
 0
 595.2756
 841.8898 ]
 /Parent 114 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Annot.NUMBER70': class PDFDictionary 
87 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://argparse.googlecode.com) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 381.1529
 744.5936
 423.3929
 756.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER71': class PDFDictionary 
88 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://pypi.python.org/pypi/plac) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 62.69291
 335.9936
 84.72012
 347.9936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Page11': class PDFPage 
89 0 obj
% Page dictionary
<< /Annots [ 87 0 R
 88 0 R ]
 /Contents 125 0 R
 /MediaBox [ 0
 0
 595.2756
 841.8898 ]
 /Parent 114 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Page12': class PDFPage 
90 0 obj
% Page dictionary
<< /Contents 126 0 R
 /MediaBox [ 0
 0
 595.2756
 841.8898 ]
 /Parent 114 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Annot.NUMBER72': class PDFDictionary 
91 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://pypi.python.org/pypi/plac) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 182.479
 349.1936
 203.7662
 361.1936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Page13': class PDFPage 
92 0 obj
% Page dictionary
<< /Annots [ 91 0 R ]
 /Contents 127 0 R
 /MediaBox [ 0
 0
 595.2756
 841.8898 ]
 /Parent 114 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Annot.NUMBER73': class PDFDictionary 
93 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://docs.python.org/library/multiprocessing.html) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 295.0229
 256.9936
 367.2629
 268.9936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER74': class PDFDictionary 
94 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://pypi.python.org/pypi/plac) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 91.57623
 205.9936
 114.8995
 217.9936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Page14': class PDFPage 
95 0 obj
% Page dictionary
<< /Annots [ 93 0 R
 94 0 R ]
 /Contents 128 0 R
 /MediaBox [ 0
 0
 595.2756
 841.8898 ]
 /Parent 114 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Annot.NUMBER75': class PDFDictionary 
96 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://pypi.python.org/pypi/plac) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 106.6216
 651.5936
 128.3202
 663.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Page15': class PDFPage 
97 0 obj
% Page dictionary
<< /Annots [ 96 0 R ]
 /Contents 129 0 R
 /MediaBox [ 0
 0
 595.2756
 841.8898 ]
 /Parent 114 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Page16': class PDFPage 
98 0 obj
% Page dictionary
<< /Contents 130 0 R
 /MediaBox [ 0
 0
 595.2756
 841.8898 ]
 /Parent 114 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'R99': class PDFCatalog 
99 0 obj
% Document Root
<< /Outlines 101 0 R
 /PageLabels 131 0 R
 /PageMode /UseNone
 /Pages 114 0 R
 /Type /Catalog >>
endobj
% 'R100': class PDFInfo 
100 0 obj
<< /Author (Michele Simionato)
 /CreationDate (D:20100621062523-01'00')
 /Keywords ()
 /Producer (ReportLab http://www.reportlab.com)
 /Subject (\(unspecified\))
 /Title (Testing and scripting your applications with plac) >>
endobj
% 'R101': class PDFOutlines 
101 0 obj
<< /Count 12
 /First 102 0 R
 /Last 113 0 R
 /Type /Outlines >>
endobj
% 'Outline.0': class OutlineEntryObject 
102 0 obj
<< /Dest [ 42 0 R
 /XYZ
 62.69291
 302.0236
 0 ]
 /Next 103 0 R
 /Parent 101 0 R
 /Title (Introduction) >>
endobj
% 'Outline.1': class OutlineEntryObject 
103 0 obj
<< /Dest [ 44 0 R
 /XYZ
 62.69291
 765.0236
 0 ]
 /Next 104 0 R
 /Parent 101 0 R
 /Prev 102 0 R
 /Title (From scripts to interactive applications) >>
endobj
% 'Outline.2': class OutlineEntryObject 
104 0 obj
<< /Dest [ 47 0 R
 /XYZ
 62.69291
 306.6236
 0 ]
 /Next 105 0 R
 /Parent 101 0 R
 /Prev 103 0 R
 /Title (Testing a plac application) >>
endobj
% 'Outline.3': class OutlineEntryObject 
105 0 obj
<< /Dest [ 48 0 R
 /XYZ
 62.69291
 297.8236
 0 ]
 /Next 106 0 R
 /Parent 101 0 R
 /Prev 104 0 R
 /Title (Plac easy tests) >>
endobj
% 'Outline.4': class OutlineEntryObject 
106 0 obj
<< /Dest [ 61 0 R
 /XYZ
 62.69291
 681.0236
 0 ]
 /Next 107 0 R
 /Parent 101 0 R
 /Prev 105 0 R
 /Title (Plac batch scripts) >>
endobj
% 'Outline.5': class OutlineEntryObject 
107 0 obj
<< /Dest [ 65 0 R
 /XYZ
 62.69291
 765.0236
 0 ]
 /Next 108 0 R
 /Parent 101 0 R
 /Prev 106 0 R
 /Title (Containers of commands) >>
endobj
% 'Outline.6': class OutlineEntryObject 
108 0 obj
<< /Dest [ 85 0 R
 /XYZ
 62.69291
 765.0236
 0 ]
 /Next 109 0 R
 /Parent 101 0 R
 /Prev 107 0 R
 /Title (For cmd lovers) >>
endobj
% 'Outline.7': class OutlineEntryObject 
109 0 obj
<< /Dest [ 85 0 R
 /XYZ
 62.69291
 181.6236
 0 ]
 /Next 110 0 R
 /Parent 101 0 R
 /Prev 108 0 R
 /Title (The plac runner) >>
endobj
% 'Outline.8': class OutlineEntryObject 
110 0 obj
<< /Dest [ 89 0 R
 /XYZ
 62.69291
 371.4236
 0 ]
 /Next 111 0 R
 /Parent 101 0 R
 /Prev 109 0 R
 /Title (A non class-based example) >>
endobj
% 'Outline.9': class OutlineEntryObject 
111 0 obj
<< /Dest [ 92 0 R
 /XYZ
 62.69291
 384.6236
 0 ]
 /Next 112 0 R
 /Parent 101 0 R
 /Prev 110 0 R
 /Title (Writing your own plac runner) >>
endobj
% 'Outline.10': class OutlineEntryObject 
112 0 obj
<< /Dest [ 95 0 R
 /XYZ
 62.69291
 241.4236
 0 ]
 /Next 113 0 R
 /Parent 101 0 R
 /Prev 111 0 R
 /Title (Summary) >>
endobj
% 'Outline.11': class OutlineEntryObject 
113 0 obj
<< /Dest [ 97 0 R
 /XYZ
 62.69291
 687.0236
 0 ]
 /Parent 101 0 R
 /Prev 112 0 R
 /Title (Appendix: custom annotation objects) >>
endobj
% 'R114': class PDFPages 
114 0 obj
% page tree
<< /Count 16
 /Kids [ 42 0 R
 44 0 R
 47 0 R
 48 0 R
 58 0 R
 61 0 R
 65 0 R
 69 0 R
 85 0 R
 86 0 R
 89 0 R
 90 0 R
 92 0 R
 95 0 R
 97 0 R
 98 0 R ]
 /Type /Pages >>
endobj
% 'R115': class PDFStream 
115 0 obj
% page stream
<< /Length 8624 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 741.0236 cm
q
BT 1 0 0 1 0 9.64 Tm 2.664882 0 Td 24 TL /F2 20 Tf 0 0 0 rg (Testing and scripting your applications with plac) Tj T* -2.664882 0 Td ET
Q
Q
q
1 0 0 1 62.69291 716.0236 cm
0 0 0 rg
BT /F3 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 4.82 Tm /F2 10 Tf 12 TL 36.93937 0 Td (Author:) Tj T* -36.93937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 4.82 Tm /F1 10 Tf 12 TL (Michele Simionato) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 701.0236 cm
0 0 0 rg
BT /F3 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 4.82 Tm /F2 10 Tf 12 TL 39.69937 0 Td (E-mail:) Tj T* -39.69937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 4.82 Tm /F1 10 Tf 12 TL (michele.simionato@gmail.com) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 686.0236 cm
0 0 0 rg
BT /F3 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 4.82 Tm /F2 10 Tf 12 TL 48.03937 0 Td (Date:) Tj T* -48.03937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 4.82 Tm /F1 10 Tf 12 TL (June 2010) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 659.0236 cm
0 0 0 rg
BT /F3 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 16.82 Tm /F2 10 Tf 12 TL 25.25937 0 Td (Download) Tj T* 21.11 0 Td (page:) Tj T* -46.36937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 15 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 4.82 Tm /F1 10 Tf 12 TL (http://pypi.python.org/pypi/plac) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 644.0236 cm
0 0 0 rg
BT /F3 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 4.82 Tm /F2 10 Tf 12 TL 9.68937 0 Td (Project page:) Tj T* -9.68937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 4.82 Tm /F1 10 Tf 12 TL (http://micheles.googlecode.com/hg/plac/doc/plac.html) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 629.0236 cm
0 0 0 rg
BT /F3 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 4.82 Tm /F2 10 Tf 12 TL 16.91937 0 Td (Installation:) Tj T* -16.91937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 5.71 Tm /F4 10 Tf 12 TL (easy_install -U plac) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 614.0236 cm
0 0 0 rg
BT /F3 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 4.82 Tm /F2 10 Tf 12 TL 32.46937 0 Td (License:) Tj T* -32.46937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 4.82 Tm /F1 10 Tf 12 TL (BSD license) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 599.0236 cm
0 0 0 rg
BT /F3 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 4.82 Tm /F2 10 Tf 12 TL 26.91937 0 Td (Requires:) Tj T* -26.91937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 4.82 Tm /F1 10 Tf 12 TL (Python 2.5+) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 569.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 16.82 Tm /F5 10 Tf 12 TL .372339 Tw (The present document discusses a few of the advanced use cases for plac. It assumes you have already) Tj T* 0 Tw (read an understood the basic documentation.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 536.0236 cm
q
BT 1 0 0 1 0 8.435 Tm 21 TL /F2 17.5 Tf 0 0 0 rg (Contents) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 314.0236 cm
0 0 0 rg
BT /F3 10 Tf 12 TL ET
q
1 0 0 1 0 201 cm
q
BT 1 0 0 1 0 4.82 Tm 12 TL /F2 10 Tf 0 0 .501961 rg (Introduction) Tj T* ET
Q
Q
q
1 0 0 1 397.8898 201 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 4.82 Tm /F2 10 Tf 12 TL 66.44 0 Td (1) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 183 cm
q
BT 1 0 0 1 0 4.82 Tm 12 TL /F2 10 Tf 0 0 .501961 rg (From scripts to interactive applications) Tj T* ET
Q
Q
q
1 0 0 1 397.8898 183 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 4.82 Tm /F2 10 Tf 12 TL 66.44 0 Td (2) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 165 cm
q
BT 1 0 0 1 0 4.82 Tm 12 TL /F2 10 Tf 0 0 .501961 rg (Testing a plac application) Tj T* ET
Q
Q
q
1 0 0 1 397.8898 165 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 4.82 Tm /F2 10 Tf 12 TL 66.44 0 Td (3) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 147 cm
q
BT 1 0 0 1 0 4.82 Tm 12 TL /F2 10 Tf 0 0 .501961 rg (Plac easy tests) Tj T* ET
Q
Q
q
1 0 0 1 397.8898 147 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 4.82 Tm /F2 10 Tf 12 TL 66.44 0 Td (4) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 129 cm
q
BT 1 0 0 1 0 4.82 Tm 12 TL /F2 10 Tf 0 0 .501961 rg (Plac batch scripts) Tj T* ET
Q
Q
q
1 0 0 1 397.8898 129 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 4.82 Tm /F2 10 Tf 12 TL 66.44 0 Td (6) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 111 cm
q
BT 1 0 0 1 0 4.82 Tm 12 TL /F2 10 Tf 0 0 .501961 rg (Containers of commands) Tj T* ET
Q
Q
q
1 0 0 1 397.8898 111 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 4.82 Tm /F2 10 Tf 12 TL 66.44 0 Td (7) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 93 cm
q
BT 1 0 0 1 0 4.82 Tm 12 TL /F2 10 Tf 0 0 .501961 rg (For ) Tj /F6 10 Tf (cmd ) Tj /F2 10 Tf (lovers) Tj T* ET
Q
Q
q
1 0 0 1 397.8898 93 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 4.82 Tm /F2 10 Tf 12 TL 66.44 0 Td (9) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 75 cm
q
BT 1 0 0 1 0 4.82 Tm 12 TL /F2 10 Tf 0 0 .501961 rg (The plac runner) Tj T* ET
Q
Q
q
1 0 0 1 397.8898 75 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 4.82 Tm /F2 10 Tf 12 TL 66.44 0 Td (9) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 57 cm
q
BT 1 0 0 1 0 4.82 Tm 12 TL /F2 10 Tf 0 0 .501961 rg (A non class-based example) Tj T* ET
Q
Q
q
1 0 0 1 397.8898 57 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 4.82 Tm /F2 10 Tf 12 TL 60.88 0 Td (11) Tj T* -60.88 0 Td ET
Q
Q
q
1 0 0 1 0 39 cm
q
BT 1 0 0 1 0 4.82 Tm 12 TL /F2 10 Tf 0 0 .501961 rg (Writing your own plac runner) Tj T* ET
Q
Q
q
1 0 0 1 397.8898 39 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 4.82 Tm /F2 10 Tf 12 TL 60.88 0 Td (13) Tj T* -60.88 0 Td ET
Q
Q
q
1 0 0 1 0 21 cm
q
BT 1 0 0 1 0 4.82 Tm 12 TL /F2 10 Tf 0 0 .501961 rg (Summary) Tj T* ET
Q
Q
q
1 0 0 1 397.8898 21 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 4.82 Tm /F2 10 Tf 12 TL 60.88 0 Td (14) Tj T* -60.88 0 Td ET
Q
Q
q
1 0 0 1 0 3 cm
q
BT 1 0 0 1 0 4.82 Tm 12 TL /F2 10 Tf 0 0 .501961 rg (Appendix: custom annotation objects) Tj T* ET
Q
Q
q
1 0 0 1 397.8898 3 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 4.82 Tm /F2 10 Tf 12 TL 60.88 0 Td (15) Tj T* -60.88 0 Td ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 281.0236 cm
q
BT 1 0 0 1 0 8.435 Tm 21 TL /F2 17.5 Tf 0 0 0 rg (Introduction) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 239.0236 cm
q
BT 1 0 0 1 0 28.82 Tm .539036 Tw 12 TL /F1 10 Tf 0 0 0 rg (One of the design goals of ) Tj 0 0 .501961 rg (plac ) Tj 0 0 0 rg (is to make it dead easy to write a scriptable and testable interface for an) Tj T* 0 Tw .813876 Tw (application. You can use ) Tj 0 0 .501961 rg (plac ) Tj 0 0 0 rg (whenever you have an API with strings in input and strings in output, and) Tj T* 0 Tw (that includes a ) Tj /F5 10 Tf (huge ) Tj /F1 10 Tf (domain of applications.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 197.0236 cm
q
BT 1 0 0 1 0 28.82 Tm 1.756651 Tw 12 TL /F1 10 Tf 0 0 0 rg (A string-oriented interface is a scriptable interface by construction. That means that you can define a) Tj T* 0 Tw .918735 Tw (command language for your application and that it is possible to write scripts which are interpretable by) Tj T* 0 Tw 0 0 .501961 rg (plac ) Tj 0 0 0 rg (and can be run as batch scripts.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 155.0236 cm
q
BT 1 0 0 1 0 28.82 Tm .444987 Tw 12 TL /F1 10 Tf 0 0 0 rg (Actually, at the most general level, you can see ) Tj 0 0 .501961 rg (plac ) Tj 0 0 0 rg (as a generic tool to write domain specific languages) Tj T* 0 Tw .107209 Tw (\(DSL\). With ) Tj 0 0 .501961 rg (plac ) Tj 0 0 0 rg (you can test your application interactively as well as with batch scripts, and even with the) Tj T* 0 Tw (analogous of Python doctests for your defined language.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 113.0236 cm
q
BT 1 0 0 1 0 28.82 Tm .694104 Tw 12 TL /F1 10 Tf 0 0 0 rg (You can easily replace the ) Tj /F4 10 Tf (cmd ) Tj /F1 10 Tf (module of the standard library and you could easily write an application) Tj T* 0 Tw 2.731654 Tw (like ) Tj 0 0 .501961 rg (twill ) Tj 0 0 0 rg (with ) Tj 0 0 .501961 rg (plac) Tj 0 0 0 rg (. Or you could use it to script your building procedure. Or any other thing, your) Tj T* 0 Tw (imagination is the only limit!) Tj T* ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
0 0 0 rg
BT 1 0 0 1 0 4.82 Tm /F1 10 Tf 12 TL 238.1649 0 Td (1) Tj T* -238.1649 0 Td ET
Q
Q
 
endstream

endobj
% 'R116': class PDFStream 
116 0 obj
% page stream
<< /Length 4233 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 744.0236 cm
q
BT 1 0 0 1 0 8.435 Tm 21 TL /F2 17.5 Tf 0 0 0 rg (From scripts to interactive applications) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 690.0236 cm
q
BT 1 0 0 1 0 40.82 Tm 3.215814 Tw 12 TL /F1 10 Tf 0 0 0 rg (Command-line scripts have many advantages, but are no substitute for interactive applications. In) Tj T* 0 Tw .088171 Tw (particular, if you have a script with a large startup time which must be run multiple times, it is best to turn it) Tj T* 0 Tw 4.582126 Tw (into an interactive application, so that the startup is performed only once. ) Tj /F4 10 Tf (plac ) Tj /F1 10 Tf (provides an) Tj T* 0 Tw /F4 10 Tf (Interpreter ) Tj /F1 10 Tf (class just for this purpose.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 660.0236 cm
q
BT 1 0 0 1 0 16.82 Tm 1.293984 Tw 12 TL /F1 10 Tf 0 0 0 rg (The ) Tj /F4 10 Tf (Interpreter ) Tj /F1 10 Tf (class wraps the main function of a script and provides an ) Tj /F4 10 Tf (.interact ) Tj /F1 10 Tf (method to) Tj T* 0 Tw (start an interactive interpreter reading commands from the console.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 630.0236 cm
q
BT 1 0 0 1 0 16.82 Tm 1.49436 Tw 12 TL /F1 10 Tf 0 0 0 rg (For instance, you can define an interactive interpreter on top of the ) Tj /F4 10 Tf (ishelve ) Tj /F1 10 Tf (script introduced in the) Tj T* 0 Tw 0 0 .501961 rg (basic documentation ) Tj 0 0 0 rg (as follows:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 380.8236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 240 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 221.71 Tm /F4 10 Tf 12 TL (# shelve_interpreter.py) Tj T* (import plac, ishelve) Tj T*  T* (@plac.annotations\() Tj T* (    interactive=\('start interactive interface', 'flag'\),) Tj T* (    subcommands='the commands of the underlying ishelve interpreter'\)) Tj T* (def main\(interactive, *subcommands\):) Tj T* (    """) Tj T* (    This script works both interactively and non-interactively.) Tj T* (    Use .help to see the internal commands.) Tj T* (    """) Tj T* (    if interactive:) Tj T* (        plac.Interpreter\(ishelve.main\).interact\(\)) Tj T* (    else:) Tj T* (        for out in plac.call\(ishelve.main, subcommands\):) Tj T* (            print\(out\)) Tj T*  T* (if __name__ == '__main__':) Tj T* (    plac.call\(main\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 336.8236 cm
q
BT 1 0 0 1 0 28.82 Tm 2.200651 Tw 12 TL /F1 10 Tf 0 0 0 rg (A trick has been used here: the ishelve command-line interface has been hidden inside an external) Tj T* 0 Tw .917674 Tw (interface. They are distinct: for instance the external interface recognizes the ) Tj /F4 10 Tf (-h/--help ) Tj /F1 10 Tf (flag whereas) Tj T* 0 Tw (the internal interface only recognizes the ) Tj /F4 10 Tf (.help ) Tj /F1 10 Tf (command:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 303.6236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 24 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 5.71 Tm /F4 10 Tf 12 TL ($ python shelve_interpreter.py -h) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 138.4236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 156 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 137.71 Tm /F4 10 Tf 12 TL (usage: shelve_interpreter.py [-h] [-interactive]) Tj T* (                             [subcommands [subcommands ...]]) Tj T*  T* (This script works both interactively and non-interactively. Use .help to see) Tj T* (the internal commands.) Tj T*  T* (positional arguments:) Tj T* (  subcommands   the commands of the underlying ishelve interpreter) Tj T*  T* (optional arguments:) Tj T* (  -h, --help    show this help message and exit) Tj T* (  -interactive  start interactive interface) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 118.4236 cm
q
0 0 0 rg
BT 1 0 0 1 0 4.82 Tm /F1 10 Tf 12 TL (Thanks to this ingenuous trick, the script can be run both interactively and non-interactively:) Tj T* ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
0 0 0 rg
BT 1 0 0 1 0 4.82 Tm /F1 10 Tf 12 TL 238.1649 0 Td (2) Tj T* -238.1649 0 Td ET
Q
Q
 
endstream

endobj
% 'R117': class PDFStream 
117 0 obj
% page stream
<< /Length 4141 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 727.8236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 36 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 17.71 Tm /F4 10 Tf 12 TL ($ python shelve_interpreter.py .clear # non-interactive use) Tj T* (cleared the shelve) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 695.8236 cm
q
BT 1 0 0 1 0 16.82 Tm 2.649318 Tw 12 TL /F1 10 Tf 0 0 0 rg (Here is an usage session, using ) Tj 0 0 .501961 rg (rlwrap ) Tj 0 0 0 rg (to enable readline features \() Tj 0 0 .501961 rg (rlwrap ) Tj 0 0 0 rg (is available in Unix-like) Tj T* 0 Tw (systems\):) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 434.6236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 252 re B*
Q
q
BT 1 0 0 1 0 233.71 Tm 12 TL /F4 10 Tf 0 0 0 rg ($ rlwrap python shelve_interpreter.py -i # interactive use) Tj T* (usage: shelve_interpreter.py [.help] [.showall] [.clear] [.delete DELETE]) Tj T* (                             [.filename /home/micheles/conf.shelve]) Tj T* (                             [params [params ...]] [setters [setters ...]]) Tj T* (i) Tj (>) Tj ( a=1) Tj T* (setting a=1) Tj T* (i) Tj (>) Tj ( a) Tj T* (1) Tj T* (i) Tj (>) Tj ( b=2) Tj T* (setting b=2) Tj T* (i) Tj (>) Tj ( a b) Tj T* (1) Tj T* (2) Tj T* (i) Tj (>) Tj ( .del a) Tj T* (deleted a) Tj T* (i) Tj (>) Tj ( a) Tj T* (a: not found) Tj T* (i) Tj (>) Tj ( .show) Tj T* (b=2) Tj T* (i) Tj (>) Tj ( [CTRL-D]) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 378.6236 cm
q
BT 1 0 0 1 0 40.82 Tm .256412 Tw 12 TL /F1 10 Tf 0 0 0 rg (The ) Tj /F4 10 Tf (.interact ) Tj /F1 10 Tf (method reads commands from the console and send them to the underlying interpreter,) Tj T* 0 Tw .065984 Tw (until the user send a CTRL-D command \(CTRL-Z in Windows\). There is a default argument ) Tj /F4 10 Tf (prompt='i) Tj (>) Tj T* 0 Tw .81936 Tw (' ) Tj /F1 10 Tf (which can be used to change the prompt. The message displayed by default is the argparse-provided) Tj T* 0 Tw (usage message, but can be customized by setting an ) Tj /F4 10 Tf (.intro ) Tj /F1 10 Tf (attribute on the main function.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 348.6236 cm
q
BT 1 0 0 1 0 16.82 Tm 1.03811 Tw 12 TL /F1 10 Tf 0 0 0 rg (Notice that ) Tj /F4 10 Tf (plac.Interpreter ) Tj /F1 10 Tf (is available only if you are using a recent version of Python \() Tj (>) Tj (= 2.5\),) Tj T* 0 Tw (because it is a context manager object which uses extended generators internally.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 318.6236 cm
q
0 0 0 rg
BT 1 0 0 1 0 16.82 Tm /F1 10 Tf 12 TL 3.034269 Tw (You can conveniently test your application in interactive mode. However manual testing is a poor) Tj T* 0 Tw (substitute for automatic testing.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 285.6236 cm
q
BT 1 0 0 1 0 8.435 Tm 21 TL /F2 17.5 Tf 0 0 0 rg (Testing a plac application) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 267.6236 cm
q
BT 1 0 0 1 0 4.82 Tm 12 TL /F1 10 Tf 0 0 0 rg (In principle, one could write automatic tests for the ) Tj /F4 10 Tf (ishelve ) Tj /F1 10 Tf (application by using ) Tj /F4 10 Tf (plac.call ) Tj /F1 10 Tf (directly:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 102.4236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 156 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 137.71 Tm /F4 10 Tf 12 TL (# test_ishelve.py) Tj T* (import plac, ishelve) Tj T*  T* (def test\(\):) Tj T* (    assert plac.call\(ishelve.main, ['.clear']\) == ['cleared the shelve']) Tj T* (    assert plac.call\(ishelve.main, ['a=1']\) == ['setting a=1']) Tj T* (    assert plac.call\(ishelve.main, ['a']\) == ['1']) Tj T* (    assert plac.call\(ishelve.main, ['.delete=a']\) == ['deleted a']) Tj T* (    assert plac.call\(ishelve.main, ['a']\) == ['a: not found']) Tj T*  T* (if __name__ == '__main__':) Tj T* (    test\(\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
0 0 0 rg
BT 1 0 0 1 0 4.82 Tm /F1 10 Tf 12 TL 238.1649 0 Td (3) Tj T* -238.1649 0 Td ET
Q
Q
 
endstream

endobj
% 'R118': class PDFStream 
118 0 obj
% page stream
<< /Length 6129 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 729.0236 cm
q
BT 1 0 0 1 0 28.82 Tm .390651 Tw 12 TL /F1 10 Tf 0 0 0 rg (However, using ) Tj /F4 10 Tf (plac.call ) Tj /F1 10 Tf (is not especially nice. The big issue is that ) Tj /F4 10 Tf (plac.call ) Tj /F1 10 Tf (responds to invalid) Tj T* 0 Tw 1.249987 Tw (input by printing an error message on stderr and by raising a ) Tj /F4 10 Tf (SystemExit) Tj /F1 10 Tf (: this is certainly not a nice) Tj T* 0 Tw (thing to do in a test.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 687.0236 cm
q
BT 1 0 0 1 0 28.82 Tm 1.616457 Tw 12 TL /F1 10 Tf 0 0 0 rg (As a consequence of this behavior it is impossible to test for invalid commands, unless you wrap the) Tj T* 0 Tw .259985 Tw /F4 10 Tf (SystemExit ) Tj /F1 10 Tf (exception by hand each time \(a possibly you do something with the error message in stderr) Tj T* 0 Tw (too\). Luckily, ) Tj /F4 10 Tf (plac ) Tj /F1 10 Tf (offers a better testing support through the ) Tj /F4 10 Tf (check ) Tj /F1 10 Tf (method of ) Tj /F4 10 Tf (Interpreter ) Tj /F1 10 Tf (objects:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 533.8236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 144 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 125.71 Tm /F4 10 Tf 12 TL (# test_ishelve_more.py) Tj T* (from __future__ import with_statement) Tj T* (import plac, ishelve) Tj T*  T* (def test\(\):) Tj T* (    with plac.Interpreter\(ishelve.main\) as i:) Tj T* (        i.check\('.clear', 'cleared the shelve'\)) Tj T* (        i.check\('a=1', 'setting a=1'\)) Tj T* (        i.check\('a', '1'\)) Tj T* (        i.check\('.delete=a', 'deleted a'\)) Tj T* (        i.check\('a', 'a: not found'\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 489.8236 cm
q
BT 1 0 0 1 0 28.82 Tm 6.299974 Tw 12 TL /F1 10 Tf 0 0 0 rg (The method ) Tj /F4 10 Tf (.check\(given_input, expected_output\) ) Tj /F1 10 Tf (works on strings and raises an) Tj T* 0 Tw .971318 Tw /F4 10 Tf (AssertionError ) Tj /F1 10 Tf (if the output produced by the interpreter is different from the expected output for the) Tj T* 0 Tw (given input.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 459.8236 cm
q
BT 1 0 0 1 0 16.82 Tm 2.179982 Tw 12 TL /F4 10 Tf 0 0 0 rg (AssertionError ) Tj /F1 10 Tf (is catched by tools like ) Tj /F4 10 Tf (py.test ) Tj /F1 10 Tf (and ) Tj /F4 10 Tf (nosetests ) Tj /F1 10 Tf (and actually ) Tj /F4 10 Tf (plac ) Tj /F1 10 Tf (tests are) Tj T* 0 Tw (intended to be run with such tools.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 405.8236 cm
q
BT 1 0 0 1 0 40.82 Tm .239984 Tw 12 TL /F1 10 Tf 0 0 0 rg (Interpreters offer a minor syntactic advantage with respect to calling ) Tj /F4 10 Tf (plac.call ) Tj /F1 10 Tf (directly, but they offer a) Tj T* 0 Tw .96748 Tw /F5 10 Tf (major ) Tj /F1 10 Tf (semantic advantage when things go wrong \(read exceptions\): an ) Tj /F4 10 Tf (Interpreter ) Tj /F1 10 Tf (object internally) Tj T* 0 Tw 1.181318 Tw (invokes something like ) Tj /F4 10 Tf (plac.call) Tj /F1 10 Tf (, but it wraps all exceptions, so that ) Tj /F4 10 Tf (i.check ) Tj /F1 10 Tf (is guaranteed not to) Tj T* 0 Tw (raise any exception except ) Tj /F4 10 Tf (AssertionError) Tj /F1 10 Tf (.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 387.8236 cm
q
BT 1 0 0 1 0 4.82 Tm 12 TL /F1 10 Tf 0 0 0 rg (Even the ) Tj /F4 10 Tf (SystemExit ) Tj /F1 10 Tf (exception is captured and you can write your test as) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 381.8236 cm
Q
q
1 0 0 1 62.69291 369.8236 cm
0 0 0 rg
BT /F3 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 5.71 Tm /F4 10 Tf 12 TL (i.check\('-cler', 'SystemExit: unrecognized arguments: -cler'\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 369.8236 cm
Q
q
1 0 0 1 62.69291 351.8236 cm
q
0 0 0 rg
BT 1 0 0 1 0 4.82 Tm /F1 10 Tf 12 TL (without risk of exiting from the Python interpreter.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 309.8236 cm
q
BT 1 0 0 1 0 28.82 Tm 1.422651 Tw 12 TL /F1 10 Tf 0 0 0 rg (There is a second advantage of interpreters: if the main function contains some initialization code and) Tj T* 0 Tw .454651 Tw (finalization code \() Tj /F4 10 Tf (__enter__ ) Tj /F1 10 Tf (and ) Tj /F4 10 Tf (__exit__ ) Tj /F1 10 Tf (functions\) they will be run only once at the beginning and) Tj T* 0 Tw (at the end of the interpreter loop. ) Tj /F4 10 Tf (plac.call ) Tj /F1 10 Tf (instead ignores the initialization/finalization code.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 276.8236 cm
q
BT 1 0 0 1 0 8.435 Tm 21 TL /F2 17.5 Tf 0 0 0 rg (Plac easy tests) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 234.8236 cm
q
BT 1 0 0 1 0 28.82 Tm 1.517126 Tw 12 TL /F1 10 Tf 0 0 0 rg (Writing your tests in terms of ) Tj /F4 10 Tf (Interpreter.check ) Tj /F1 10 Tf (is certainly an improvement over writing them in) Tj T* 0 Tw 1.807318 Tw (terms of ) Tj /F4 10 Tf (plac.call) Tj /F1 10 Tf (, but they are still too low-level for my taste. The ) Tj /F4 10 Tf (Interpreter ) Tj /F1 10 Tf (class provides) Tj T* 0 Tw (support for doctest-style tests, a.k.a. ) Tj /F5 10 Tf (plac easy tests) Tj /F1 10 Tf (.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 192.8236 cm
q
BT 1 0 0 1 0 28.82 Tm 2.142209 Tw 12 TL /F1 10 Tf 0 0 0 rg (By using plac easy tests you can cut and paste your interactive session and turn it into a runnable) Tj T* 0 Tw .519213 Tw (automatics test! Consider for instance the following file ) Tj /F4 10 Tf (ishelve.placet ) Tj /F1 10 Tf (\(the ) Tj /F4 10 Tf (.placet ) Tj /F1 10 Tf (extension is a) Tj T* 0 Tw (mnemonic for plac easy tests\):) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 99.62362 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 84 re B*
Q
q
BT 1 0 0 1 0 65.71 Tm 12 TL /F4 10 Tf 0 0 0 rg (#!ishelve.py) Tj T* (i) Tj (>) Tj ( .clear # start from a clean state) Tj T* (cleared the shelve) Tj T* (i) Tj (>) Tj ( a=1) Tj T* (setting a=1) Tj T* (i) Tj (>) Tj ( a) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
0 0 0 rg
BT 1 0 0 1 0 4.82 Tm /F1 10 Tf 12 TL 238.1649 0 Td (4) Tj T* -238.1649 0 Td ET
Q
Q
 
endstream

endobj
% 'R119': class PDFStream 
119 0 obj
% page stream
<< /Length 5874 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 667.8236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 96 re B*
Q
q
BT 1 0 0 1 0 77.71 Tm 12 TL /F4 10 Tf 0 0 0 rg (1) Tj T* (i) Tj (>) Tj ( .del a) Tj T* (deleted a) Tj T* (i) Tj (>) Tj ( a) Tj T* (a: not found) Tj T* (i) Tj (>) Tj ( .cler # spelling error) Tj T* (SystemExit: unrecognized arguments: .cler) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 611.8236 cm
q
BT 1 0 0 1 0 40.82 Tm .697132 Tw 12 TL /F1 10 Tf 0 0 0 rg (Notice the precence of the shebang line containing the name of the ) Tj 0 0 .501961 rg (plac ) Tj 0 0 0 rg (tool to test \(a ) Tj 0 0 .501961 rg (plac ) Tj 0 0 0 rg (tool is just a) Tj T* 0 Tw 1.511751 Tw (Python module with a function called ) Tj /F4 10 Tf (main) Tj /F1 10 Tf (\). The shebang is ignored by the interpreter \(it looks like a) Tj T* 0 Tw .487608 Tw (comment to it\) but it is there so that external tools \(say a test runner\) can infer the plac interpreter to use) Tj T* 0 Tw (to test the file.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 581.8236 cm
q
BT 1 0 0 1 0 16.82 Tm 2.419984 Tw 12 TL /F1 10 Tf 0 0 0 rg (You can test ) Tj /F4 10 Tf (ishelve.placet ) Tj /F1 10 Tf (file by calling the ) Tj /F4 10 Tf (.doctest ) Tj /F1 10 Tf (method of the interpreter, as in this) Tj T* 0 Tw (example:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 537.0393 cm
q
q
.988825 0 0 .988825 0 0 cm
q
1 0 0 1 6.6 6.674587 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 474 36 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 17.71 Tm /F4 10 Tf 12 TL ($ python -c"import plac, ishelve) Tj T* (plac.Interpreter\(ishelve.main\).doctest\(open\('ishelve.placet'\), verbose=True\)") Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 469.0393 cm
q
BT 1 0 0 1 0 52.82 Tm 4.007109 Tw 12 TL /F1 10 Tf 0 0 0 rg (Internally ) Tj /F4 10 Tf (Interpreter.doctests ) Tj /F1 10 Tf (invokes something like ) Tj /F4 10 Tf (Interpreter.check ) Tj /F1 10 Tf (multiple times) Tj T* 0 Tw .226654 Tw (inside the same context and compare the output with the expected output: if even a check fails, the whole) Tj T* 0 Tw 2.628221 Tw (test fail. The easy tests supported by ) Tj /F4 10 Tf (plac ) Tj /F1 10 Tf (are ) Tj /F5 10 Tf (not ) Tj /F1 10 Tf (unittests: they should be used to model user) Tj T* 0 Tw .491163 Tw (interaction when the order of the operations matters. Since the single subtests in a ) Tj /F4 10 Tf (.placet ) Tj /F1 10 Tf (file are not) Tj T* 0 Tw (independent, it makes sense to exit immediately at the first failure.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 403.0393 cm
q
BT 1 0 0 1 0 52.82 Tm .414431 Tw 12 TL /F1 10 Tf 0 0 0 rg (The support for doctests in ) Tj 0 0 .501961 rg (plac ) Tj 0 0 0 rg (comes nearly for free, thanks to the ) Tj 0 0 .501961 rg (shlex ) Tj 0 0 0 rg (module in the standard library,) Tj T* 0 Tw .352765 Tw (which is able to parse simple languages as the ones you can implement with ) Tj 0 0 .501961 rg (plac) Tj 0 0 0 rg (. In particular, thanks to) Tj T* 0 Tw .061318 Tw 0 0 .501961 rg (shlex) Tj 0 0 0 rg (, ) Tj 0 0 .501961 rg (plac ) Tj 0 0 0 rg (is able to recognize comments \(the default comment character is ) Tj /F4 10 Tf (#) Tj /F1 10 Tf (\), continuation lines, escape) Tj T* 0 Tw 1.54061 Tw (sequences and more. Look at the ) Tj 0 0 .501961 rg (shlex ) Tj 0 0 0 rg (documentation if you need to customize how the language is) Tj T* 0 Tw (interpreted.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 349.0393 cm
q
BT 1 0 0 1 0 40.82 Tm .136654 Tw 12 TL /F1 10 Tf 0 0 0 rg (In addition, I have implemented from scratch some support for line number recognition, so that if a test fail) Tj T* 0 Tw .042093 Tw (you get the line number of the failing command. This is especially useful if your tests are stored in external) Tj T* 0 Tw .86408 Tw (files \(plac easy tests does not need to be in a file: you can just pass to the ) Tj /F4 10 Tf (.doctest ) Tj /F1 10 Tf (method a list of) Tj T* 0 Tw (strings corresponding to the lines of the file\).) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 319.0393 cm
q
BT 1 0 0 1 0 16.82 Tm .12683 Tw 12 TL /F1 10 Tf 0 0 0 rg (At the present plac easy tests do not use any code from the doctest module, but the situation may change) Tj T* 0 Tw (in the future \(it would be nice if ) Tj 0 0 .501961 rg (plac ) Tj 0 0 0 rg (could reuse doctests directives like ELLIPSIS\).) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 289.0393 cm
q
BT 1 0 0 1 0 16.82 Tm 1.447318 Tw 12 TL /F1 10 Tf 0 0 0 rg (It is straighforward to integrate your ) Tj /F4 10 Tf (.placet ) Tj /F1 10 Tf (tests with standard testing tools. For instance, you can) Tj T* 0 Tw (integrate your doctests with ) Tj /F4 10 Tf (nose ) Tj /F1 10 Tf (or ) Tj /F4 10 Tf (py.test ) Tj /F1 10 Tf (as follow:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 101.8642 cm
q
q
.988825 0 0 .988825 0 0 cm
q
1 0 0 1 6.6 6.674587 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 474 180 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 161.71 Tm /F4 10 Tf 12 TL (import os, shlex, plac) Tj T*  T* (def test_doct\(\):) Tj T* (   """) Tj T* (   Find all the doctests in the current directory and run them with the) Tj T* (   corresponding plac interpreter \(the shebang rules!\)) Tj T* (   """) Tj T* (   placets = [f for f in os.listdir\('.'\) if f.endswith\('.placet'\)]) Tj T* (   for placet in placets:) Tj T* (       lines = list\(open\(placet\)\)) Tj T* (       assert lines[0].startswith\('#!'\), 'Missing or incorrect shebang line!') Tj T* (       firstline = lines[0][2:] # strip the shebang) Tj T* (       main = plac.import_main\(*shlex.split\(firstline\)\)) Tj T* (       yield plac.Interpreter\(main\).doctest, lines[1:]) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
0 0 0 rg
BT 1 0 0 1 0 4.82 Tm /F1 10 Tf 12 TL 238.1649 0 Td (5) Tj T* -238.1649 0 Td ET
Q
Q
 
endstream

endobj
% 'R120': class PDFStream 
120 0 obj
% page stream
<< /Length 4648 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 693.0236 cm
q
BT 1 0 0 1 0 64.82 Tm 1.44811 Tw 12 TL /F1 10 Tf 0 0 0 rg (Here you should notice that usage of ) Tj /F4 10 Tf (plac.import_main) Tj /F1 10 Tf (, an utility which is able to import the main) Tj T* 0 Tw 1.040465 Tw (function of the script specified in the shabng line. You can use both the full path name of the tool, or a) Tj T* 0 Tw .87686 Tw (relative path name. In this case the runner look at the environment variable ) Tj /F4 10 Tf (PLACPATH ) Tj /F1 10 Tf (and it searches) Tj T* 0 Tw 1.900651 Tw (the plac tool in the directories specified there \() Tj /F4 10 Tf (PLACPATH ) Tj /F1 10 Tf (is just a string containing directory names) Tj T* 0 Tw .56332 Tw (separated by colons\). If the variable ) Tj /F4 10 Tf (PLACPATH ) Tj /F1 10 Tf (is not defined, it just looks in the current directory. If the) Tj T* 0 Tw (plac tool is not found, an ) Tj /F4 10 Tf (ImportError ) Tj /F1 10 Tf (is raised.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 660.0236 cm
q
BT 1 0 0 1 0 8.435 Tm 21 TL /F2 17.5 Tf 0 0 0 rg (Plac batch scripts) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 618.0236 cm
q
BT 1 0 0 1 0 28.82 Tm .772093 Tw 12 TL /F1 10 Tf 0 0 0 rg (It is pretty easy to realize that an interactive interpreter can also be used to run batch scripts: instead of) Tj T* 0 Tw .504692 Tw (reading the commands from the console, it is enough to read the commands from a file. ) Tj 0 0 .501961 rg (plac ) Tj 0 0 0 rg (interpreters) Tj T* 0 Tw (provide an ) Tj /F4 10 Tf (.execute ) Tj /F1 10 Tf (method to perform just that.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 552.0236 cm
q
BT 1 0 0 1 0 52.82 Tm .098935 Tw 12 TL /F1 10 Tf 0 0 0 rg (There is just a subtle point to notice: whereas in an interactive loop one wants to manage all exceptions, a) Tj T* 0 Tw 3.866412 Tw (batch script should not in the background in case of unexpected errors. The implementation of) Tj T* 0 Tw .103059 Tw /F4 10 Tf (Interpreter.execute ) Tj /F1 10 Tf (makes sure that any error raised by ) Tj /F4 10 Tf (plac.call ) Tj /F1 10 Tf (internally is re-raised. In other) Tj T* 0 Tw .407045 Tw (words, ) Tj 0 0 .501961 rg (plac ) Tj 0 0 0 rg (interpreters ) Tj /F5 10 Tf (wrap the errors, but does not eat them) Tj /F1 10 Tf (: the errors are always accessible and can) Tj T* 0 Tw (be re-raised on demand.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 534.0236 cm
q
BT 1 0 0 1 0 4.82 Tm 12 TL /F1 10 Tf 0 0 0 rg (In particular consider the following batch file, which contains a syntax error \() Tj /F4 10 Tf (.dl ) Tj /F1 10 Tf (instead of ) Tj /F4 10 Tf (.del) Tj /F1 10 Tf (\):) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 428.8236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 96 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 77.71 Tm /F4 10 Tf 12 TL (#!ishelve.py) Tj T* (.clear ) Tj T* (a=1 b=2) Tj T* (.show) Tj T* (.del a) Tj T* (.dl b) Tj T* (.show) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 396.8236 cm
q
BT 1 0 0 1 0 16.82 Tm .26686 Tw 12 TL /F1 10 Tf 0 0 0 rg (If you execute the batch file, the interpreter will raise a ) Tj /F4 10 Tf (SystemExit ) Tj /F1 10 Tf (with an appropriated error message) Tj T* 0 Tw (at the ) Tj /F4 10 Tf (.dl ) Tj /F1 10 Tf (line and the last command will ) Tj /F5 10 Tf (not ) Tj /F1 10 Tf (be executed:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 207.6236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 180 re B*
Q
q
BT 1 0 0 1 0 161.71 Tm 12 TL /F4 10 Tf 0 0 0 rg ($ python -c "import plac, ishelve) Tj T* (plac.Interpreter\(ishelve.main\).execute\(open\('ishelve.plac'\), verbose=True\)") Tj T* (i) Tj (>) Tj ( .clear) Tj T* (cleared the shelve) Tj T* (i) Tj (>) Tj ( a=1 b=2) Tj T* (setting a=1) Tj T* (setting b=2) Tj T* (i) Tj (>) Tj ( .show) Tj T* (b=2) Tj T* (a=1) Tj T* (i) Tj (>) Tj ( .del a) Tj T* (deleted a) Tj T* (i) Tj (>) Tj ( .dl b) Tj T* (unrecognized arguments: .dl) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 163.6236 cm
q
BT 1 0 0 1 0 28.82 Tm .159988 Tw 12 TL /F1 10 Tf 0 0 0 rg (The ) Tj /F4 10 Tf (verbose ) Tj /F1 10 Tf (flag is there to show the lines which are being interpreted \(prefixed by ) Tj /F4 10 Tf (i) Tj (>) Tj /F1 10 Tf (\). This is done on) Tj T* 0 Tw 1.359988 Tw (purpose, so that you can cut and paste the output of the batch script and turn it into a ) Tj /F4 10 Tf (.placet ) Tj /F1 10 Tf (test) Tj T* 0 Tw (\(cool, isn't it?\).) Tj T* ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
0 0 0 rg
BT 1 0 0 1 0 4.82 Tm /F1 10 Tf 12 TL 238.1649 0 Td (6) Tj T* -238.1649 0 Td ET
Q
Q
 
endstream

endobj
% 'R121': class PDFStream 
121 0 obj
% page stream
<< /Length 3980 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 744.0236 cm
q
BT 1 0 0 1 0 8.435 Tm 21 TL /F2 17.5 Tf 0 0 0 rg (Containers of commands) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 702.0236 cm
q
BT 1 0 0 1 0 28.82 Tm 1.182485 Tw 12 TL /F1 10 Tf 0 0 0 rg (When I discussed the ) Tj /F4 10 Tf (ishelve ) Tj /F1 10 Tf (implementation in the ) Tj 0 0 .501961 rg (basic documentation) Tj 0 0 0 rg (, I said that it looked like a) Tj T* 0 Tw 1.483988 Tw (poor man implementation of an object system as a chain of elifs; I also said that ) Tj 0 0 .501961 rg (plac ) Tj 0 0 0 rg (was able to do) Tj T* 0 Tw (better. Here I will substantiate my claim.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 660.0236 cm
q
BT 1 0 0 1 0 28.82 Tm .89104 Tw 12 TL /F1 10 Tf 0 0 .501961 rg (plac ) Tj 0 0 0 rg (is actually able to infer a set of subparsers from a generic container of commands. This is useful if) Tj T* 0 Tw 3.125814 Tw (you want to implement ) Tj /F5 10 Tf (subcommands ) Tj /F1 10 Tf (\(a familiar example of a command-line application featuring) Tj T* 0 Tw (subcommands is subversion\).) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 618.0236 cm
q
BT 1 0 0 1 0 28.82 Tm .015868 Tw 12 TL /F1 10 Tf 0 0 0 rg (Technically a container of commands is any object with a ) Tj /F4 10 Tf (.commands ) Tj /F1 10 Tf (attribute listing a set of functions or) Tj T* 0 Tw 2.550888 Tw (methods which are valid commands. A command container may have initialization/finalization hooks) Tj T* 0 Tw (\() Tj /F4 10 Tf (__enter__/__exit__) Tj /F1 10 Tf (\) and dispatch hooks \() Tj /F4 10 Tf (__missing__) Tj /F1 10 Tf (, invoked for invalid command names\).) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 600.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 4.82 Tm /F1 10 Tf 12 TL (Using this feature the shelve interface can be rewritten in a more object-oriented way as follows:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 98.82362 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 492 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 473.71 Tm /F4 10 Tf 12 TL (# ishelve2.py) Tj T* (import shelve, os, sys, plac) Tj T*  T* (class ShelveInterface\(object\):) Tj T* (    "A minimal interface over a shelve object") Tj T* (    commands = 'set', 'show', 'showall', 'delete') Tj T* (    @plac.annotations\() Tj T* (        configfile=\('path name of the shelve', 'option'\)\)) Tj T* (    def __init__\(self, configfile='~/conf.shelve'\):) Tj T* (        self.fname = os.path.expanduser\(configfile\)) Tj T* (        self.intro = 'Operating on %s. Available commands:\\n%s' % \() Tj T* (            self.fname, '\\n'.join\(c for c in self.commands\)\)) Tj T* (    def __enter__\(self\):) Tj T* (        self.sh = shelve.open\(self.fname\)) Tj T* (        return self) Tj T* (    def set\(self, name, value\):) Tj T* (        "set name value") Tj T* (        yield 'setting %s=%s' % \(name, value\)) Tj T* (        self.sh[name] = value) Tj T* (    def show\(self, *names\):) Tj T* (        "show given parameters") Tj T* (        for name in names:) Tj T* (            yield '%s = %s' % \(name, self.sh[name]\) # no error checking) Tj T* (    def showall\(self\):) Tj T* (        "show all parameters") Tj T* (        for name in self.sh:) Tj T* (            yield '%s = %s' % \(name, self.sh[name]\)) Tj T* (    def delete\(self, name=None\):) Tj T* (        "delete given parameter \(or everything\)") Tj T* (        if name is None:) Tj T* (            yield 'deleting everything') Tj T* (            self.sh.clear\(\)) Tj T* (        else:) Tj T* (            yield 'deleting %s' % name) Tj T* (            del self.sh[name] # no error checking) Tj T* (    def __exit__\(self, etype, exc, tb\):) Tj T* (        self.sh.close\(\)) Tj T*  T* (main = ShelveInterface # the main 'function' can also be a class!) Tj T*  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
0 0 0 rg
BT 1 0 0 1 0 4.82 Tm /F1 10 Tf 12 TL 238.1649 0 Td (7) Tj T* -238.1649 0 Td ET
Q
Q
 
endstream

endobj
% 'R122': class PDFStream 
122 0 obj
% page stream
<< /Length 4384 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 715.8236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 48 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 29.71 Tm /F4 10 Tf 12 TL (if __name__ == '__main__':) Tj T* (    i = plac.Interpreter\(main\(\)\)) Tj T* (    i.interact\(\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 623.8236 cm
q
BT 1 0 0 1 0 76.82 Tm .885366 Tw 12 TL /F4 10 Tf 0 0 0 rg (plac.Interpreter ) Tj /F1 10 Tf (objects wrap context manager objects consistently. In other words, if you wrap an) Tj T* 0 Tw 2.323828 Tw (object with ) Tj /F4 10 Tf (__enter__ ) Tj /F1 10 Tf (and ) Tj /F4 10 Tf (__exit__ ) Tj /F1 10 Tf (methods, they are invoked in the right order \() Tj /F4 10 Tf (__enter__) Tj T* 0 Tw .23528 Tw /F1 10 Tf (before the interpreter loop starts and ) Tj /F4 10 Tf (__exit__ ) Tj /F1 10 Tf (after the interpreter loop ends, both in the regular and in) Tj T* 0 Tw 1.916412 Tw (the exceptional case\). In our example, the methods ) Tj /F4 10 Tf (__enter__ ) Tj /F1 10 Tf (and ) Tj /F4 10 Tf (__exit__ ) Tj /F1 10 Tf (make sure the the) Tj T* 0 Tw .339398 Tw (shelve is opened and closed correctly even in the case of exceptions. Notice that I have not implemented) Tj T* 0 Tw .814104 Tw (any error checking in the ) Tj /F4 10 Tf (show ) Tj /F1 10 Tf (and ) Tj /F4 10 Tf (delete ) Tj /F1 10 Tf (methods on purpose, to verify that ) Tj 0 0 .501961 rg (plac ) Tj 0 0 0 rg (works correctly in) Tj T* 0 Tw (the presence of exceptions.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 605.8236 cm
q
0 0 0 rg
BT 1 0 0 1 0 4.82 Tm /F1 10 Tf 12 TL (Here is a session of usage on an Unix-like operating system:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 284.6236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 312 re B*
Q
q
BT 1 0 0 1 0 293.71 Tm 12 TL /F4 10 Tf 0 0 0 rg ($ rlwrap python ishelve2.py) Tj T* (Operating on /home/micheles/conf.shelve. Available commands:) Tj T* (set) Tj T* (show) Tj T* (showall) Tj T* (delete) Tj T* (i) Tj (>) Tj ( delete) Tj T* (deleting everything) Tj T* (i) Tj (>) Tj ( set a pippo) Tj T* (setting a=pippo) Tj T* (i) Tj (>) Tj ( set b lippo) Tj T* (setting b=lippo) Tj T* (i) Tj (>) Tj ( showall) Tj T* (b = lippo) Tj T* (a = pippo) Tj T* (i) Tj (>) Tj ( show a b) Tj T* (a = pippo) Tj T* (b = lippo) Tj T* (i) Tj (>) Tj ( del a) Tj T* (deleting a) Tj T* (i) Tj (>) Tj ( showall) Tj T* (b = lippo) Tj T* (i) Tj (>) Tj ( delete a) Tj T* (DBNotFoundError: \(-30988, 'DB_NOTFOUND: No matching key/data pair found'\)) Tj T* (i) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 252.6236 cm
q
BT 1 0 0 1 0 16.82 Tm 2.571235 Tw 12 TL /F1 10 Tf 0 0 0 rg (Notice that in interactive mode the traceback is hidden, unless you pass the ) Tj /F4 10 Tf (verbose ) Tj /F1 10 Tf (flag to the) Tj T* 0 Tw /F4 10 Tf (Interpreter.interact ) Tj /F1 10 Tf (method.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 198.6236 cm
q
BT 1 0 0 1 0 40.82 Tm .532209 Tw 12 TL /F1 10 Tf 0 0 0 rg (The interactive mode of ) Tj /F4 10 Tf (plac ) Tj /F1 10 Tf (can be used as a replacement of the ) Tj /F4 10 Tf (cmd ) Tj /F1 10 Tf (module in the standard library.) Tj T* 0 Tw .66881 Tw (There are a few differences, however. For instance you miss tab completion, even if use ) Tj 0 0 .501961 rg (rlwrap ) Tj 0 0 0 rg (\(you get) Tj T* 0 Tw .092651 Tw (persistent command history for free, however\). This is not a big issue, since ) Tj /F4 10 Tf (plac ) Tj /F1 10 Tf (understands command) Tj T* 0 Tw (abbreviations.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 180.6236 cm
q
BT 1 0 0 1 0 4.82 Tm 12 TL /F1 10 Tf 0 0 0 rg (If an abbreviation is ambiguous, ) Tj 0 0 .501961 rg (plac ) Tj 0 0 0 rg (warns you:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 111.4236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 60 re B*
Q
q
BT 1 0 0 1 0 41.71 Tm 12 TL /F4 10 Tf 0 0 0 rg ($ rlwrap python ishelve2.py) Tj T* (usage: plac_runner.py ishelve2.py [-h] {delete,set,showall,show} ...) Tj T* (i) Tj (>) Tj ( sh) Tj T* (NameError: Ambiguous command 'sh': matching ['showall', 'show']) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
0 0 0 rg
BT 1 0 0 1 0 4.82 Tm /F1 10 Tf 12 TL 238.1649 0 Td (8) Tj T* -238.1649 0 Td ET
Q
Q
 
endstream

endobj
% 'R123': class PDFStream 
123 0 obj
% page stream
<< /Length 5097 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 744.0236 cm
q
BT 1 0 0 1 0 8.435 Tm 21 TL /F2 17.5 Tf 0 0 0 rg (For ) Tj /F6 17.5 Tf (cmd ) Tj /F2 17.5 Tf (lovers) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 642.0236 cm
q
BT 1 0 0 1 0 88.82 Tm .391567 Tw 12 TL /F1 10 Tf 0 0 0 rg (I have been using the ) Tj 0 0 .501961 rg (cmd ) Tj 0 0 0 rg (module of the standard library for years. I have also written a much enhanced) Tj T* 0 Tw .212619 Tw /F4 10 Tf (cmd2 ) Tj /F1 10 Tf (module which we are using internally at work and from which I have taken some ideas used in ) Tj 0 0 .501961 rg (plac) Tj 0 0 0 rg (.) Tj T* 0 Tw .13832 Tw (In many ways ) Tj 0 0 .501961 rg (plac ) Tj 0 0 0 rg (makes the ) Tj 0 0 .501961 rg (cmd ) Tj 0 0 0 rg (module obsolete, but I realize why many nostalgic souls would still use) Tj T* 0 Tw 1.053984 Tw 0 0 .501961 rg (cmd) Tj 0 0 0 rg (, especially until ) Tj 0 0 .501961 rg (plac ) Tj 0 0 0 rg (does not grow real auto-completion features, instead of relying on ) Tj 0 0 .501961 rg (rlwrap) Tj 0 0 0 rg (. But) Tj T* 0 Tw 1.12561 Tw (there must not be competition between ) Tj 0 0 .501961 rg (plac ) Tj 0 0 0 rg (and ) Tj 0 0 .501961 rg (cmd) Tj 0 0 0 rg (: actually the two can happily work togethere. For) Tj T* 0 Tw .338988 Tw (this reason I have put in the ) Tj /F4 10 Tf (plac_ext ) Tj /F1 10 Tf (module a few lines of code for gluing together ) Tj 0 0 .501961 rg (cmd ) Tj 0 0 0 rg (and ) Tj 0 0 .501961 rg (plac) Tj 0 0 0 rg (, the) Tj T* 0 Tw 1.229269 Tw /F4 10 Tf (cmd_interface) Tj /F1 10 Tf (. Using the ) Tj /F4 10 Tf (cmd_interface ) Tj /F1 10 Tf (is quite trivial: give to it a plac command container and) Tj T* 0 Tw (you will get in exchange a ) Tj /F4 10 Tf (cmd.Cmd ) Tj /F1 10 Tf (object:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 548.8236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 84 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 65.71 Tm /F4 10 Tf 12 TL (# cmd_ext.py) Tj T* (from plac_ext import cmd_interface) Tj T* (import ishelve2) Tj T*  T* (if __name__ == '__main__':) Tj T* (    cmd_interface\(ishelve2.main\(\)\).cmdloop\(\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 528.8236 cm
q
0 0 0 rg
BT 1 0 0 1 0 4.82 Tm /F1 10 Tf 12 TL (Here is an example of interactive session:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 267.6236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 252 re B*
Q
q
BT 1 0 0 1 0 233.71 Tm 12 TL /F4 10 Tf 0 0 0 rg ($ python cmd_ex.py) Tj T* (\(Cmd\) help) Tj T*  T* (Documented commands \(type help ) Tj (<) Tj (topic) Tj (>) Tj (\):) Tj T* (========================================) Tj T* (delete  set  show  showall) Tj T*  T* (Undocumented commands:) Tj T* (======================) Tj T* (EOF  help) Tj T*  T* (\(Cmd\) set a 1) Tj T* (setting a=1) Tj T* (\(Cmd\) show a) Tj T* (a = 1) Tj T* (\(Cmd\) showall) Tj T* (a = 1) Tj T* (\(Cmd\) delete b) Tj T* (KeyError: 'b') Tj T* (\(Cmd\) EOF [or CTRL-D]) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 235.6236 cm
q
BT 1 0 0 1 0 16.82 Tm .504983 Tw 12 TL /F1 10 Tf 0 0 0 rg (Internally the ) Tj /F4 10 Tf (cmd_interface ) Tj /F1 10 Tf (builds a ) Tj /F4 10 Tf (cmd.Cmd ) Tj /F1 10 Tf (class and adds to it the ) Tj /F4 10 Tf (do_ ) Tj /F1 10 Tf (methods corresponding) Tj T* 0 Tw (to the commands in the container, then it returns a ) Tj /F4 10 Tf (cmd.Cmd ) Tj /F1 10 Tf (instance.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 193.6236 cm
q
BT 1 0 0 1 0 28.82 Tm .089488 Tw 12 TL /F1 10 Tf 0 0 0 rg (The ) Tj /F4 10 Tf (cmd_interface ) Tj /F1 10 Tf (is just a proof of concept: it is there so that you can study the source code and see) Tj T* 0 Tw .93832 Tw (an example of integration of ) Tj 0 0 .501961 rg (plac ) Tj 0 0 0 rg (with a different framework. It may change and even go away in future) Tj T* 0 Tw (releases of ) Tj 0 0 .501961 rg (plac) Tj 0 0 0 rg (.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 160.6236 cm
q
BT 1 0 0 1 0 8.435 Tm 21 TL /F2 17.5 Tf 0 0 0 rg (The plac runner) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 94.62362 cm
q
BT 1 0 0 1 0 52.82 Tm 1.531318 Tw 12 TL /F1 10 Tf 0 0 0 rg (The distribution of ) Tj 0 0 .501961 rg (plac ) Tj 0 0 0 rg (includes a runner script named ) Tj /F4 10 Tf (plac_runner.py) Tj /F1 10 Tf (, which will be installed in a) Tj T* 0 Tw .44748 Tw (suitable directory in your system by ) Tj 0 0 .501961 rg (distutils ) Tj 0 0 0 rg (\(say in ) Tj /F4 10 Tf (\\usr\\local\\bin\\plac_runner.py ) Tj /F1 10 Tf (in a Unix-like) Tj T* 0 Tw .680651 Tw (operative system\). The runner provides many facilities to run ) Tj /F4 10 Tf (.plac ) Tj /F1 10 Tf (scripts and ) Tj /F4 10 Tf (.placet ) Tj /F1 10 Tf (files, as well) Tj T* 0 Tw 1.47311 Tw (as Python modules containg a ) Tj /F4 10 Tf (main ) Tj /F1 10 Tf (object, which can be a function, a command container object or) Tj T* 0 Tw (even a command container class.) Tj T* ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
0 0 0 rg
BT 1 0 0 1 0 4.82 Tm /F1 10 Tf 12 TL 238.1649 0 Td (9) Tj T* -238.1649 0 Td ET
Q
Q
 
endstream

endobj
% 'R124': class PDFStream 
124 0 obj
% page stream
<< /Length 4203 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 741.0236 cm
q
BT 1 0 0 1 0 16.82 Tm 1.994269 Tw 12 TL /F1 10 Tf 0 0 0 rg (For instance, suppose you want to execute a script containing commands defined in the ) Tj /F4 10 Tf (ishelve2) Tj T* 0 Tw /F1 10 Tf (module like the following one:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 671.8236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 60 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 41.71 Tm /F4 10 Tf 12 TL (#!ishelve2.py -c ~/conf.shelve) Tj T* (set a 1) Tj T* (del a) Tj T* (del a # intentional error) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 627.8236 cm
q
BT 1 0 0 1 0 28.82 Tm .575868 Tw 12 TL /F1 10 Tf 0 0 0 rg (The first line of the ) Tj /F4 10 Tf (.plac ) Tj /F1 10 Tf (script contains the name of the python module containing the plac interpreter) Tj T* 0 Tw 2.327209 Tw (and the arguments which must be passed to its main function in order to be able to instantiate an) Tj T* 0 Tw (interpreter object. The other lines contains commands. Then you can run the script as follows:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 538.6505 cm
q
q
.952737 0 0 .952737 0 0 cm
q
1 0 0 1 6.6 6.927412 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 492 84 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 65.71 Tm /F4 10 Tf 12 TL ($ plac_runner.py --batch ishelve2.plac) Tj T* (setting a=1) Tj T* (deleting a) Tj T* (Traceback \(most recent call last\):) Tj T* (  ...) Tj T* (_bsddb.DBNotFoundError: \(-30988, 'DB_NOTFOUND: No matching key/data pair found'\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 506.6505 cm
q
0 0 0 rg
BT 1 0 0 1 0 16.82 Tm /F1 10 Tf 12 TL 2.79186 Tw (The last command intentionally contained an error, to show that the plac runner does not eat the) Tj T* 0 Tw (traceback.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 476.6505 cm
q
0 0 0 rg
BT 1 0 0 1 0 16.82 Tm /F1 10 Tf 12 TL .437633 Tw (The runner can also be used to run Python modules in interactive mode and non-interactive mode. If you) Tj T* 0 Tw (put this alias in your bashrc) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 470.6505 cm
Q
q
1 0 0 1 62.69291 458.6505 cm
0 0 0 rg
BT /F3 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 5.71 Tm /F4 10 Tf 12 TL (alias plac="rlwrap plac_runner.py") Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 458.6505 cm
Q
q
1 0 0 1 62.69291 428.6505 cm
q
BT 1 0 0 1 0 16.82 Tm 2.955318 Tw 12 TL /F1 10 Tf 0 0 0 rg (\(or you define a suitable ) Tj /F4 10 Tf (plac.bat ) Tj /F1 10 Tf (script in Windows\) you can run the ) Tj /F4 10 Tf (ishelve2.py ) Tj /F1 10 Tf (script in) Tj T* 0 Tw (interactive mode as follows:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 239.4505 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 180 re B*
Q
q
BT 1 0 0 1 0 161.71 Tm 12 TL /F4 10 Tf 0 0 0 rg ($ plac -i ishelve2.py) Tj T* (Operating on /home/micheles/conf.shelve. Available commands:) Tj T* (set) Tj T* (show) Tj T* (showall) Tj T* (delete) Tj T* (i) Tj (>) Tj ( del) Tj T* (deleting everything) Tj T* (i) Tj (>) Tj ( set a 1) Tj T* (setting a=1) Tj T* (i) Tj (>) Tj ( set b 2) Tj T* (setting b=2) Tj T* (i) Tj (>) Tj ( show b) Tj T* (b = 2) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 219.4505 cm
q
BT 1 0 0 1 0 4.82 Tm 12 TL /F1 10 Tf 0 0 0 rg (Now you can cut and paste the interactive session an turns into into a ) Tj /F4 10 Tf (.placet ) Tj /F1 10 Tf (file like the following:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 90.25045 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 120 re B*
Q
q
BT 1 0 0 1 0 101.71 Tm 12 TL /F4 10 Tf 0 0 0 rg (#!ishelve2.py -configfile=~/test.shelve) Tj T* (i) Tj (>) Tj ( del) Tj T* (deleting everything) Tj T* (i) Tj (>) Tj ( set a 1) Tj T* (setting a=1) Tj T* (i) Tj (>) Tj ( set b 2) Tj T* (setting b=2) Tj T* (i) Tj (>) Tj ( show b) Tj T* (b = 2) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
0 0 0 rg
BT 1 0 0 1 0 4.82 Tm /F1 10 Tf 12 TL 235.3849 0 Td (10) Tj T* -235.3849 0 Td ET
Q
Q
 
endstream

endobj
% 'R125': class PDFStream 
125 0 obj
% page stream
<< /Length 5347 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 741.0236 cm
q
BT 1 0 0 1 0 16.82 Tm 2.145697 Tw 12 TL /F1 10 Tf 0 0 0 rg (Notice that the first line specifies a test database ) Tj /F4 10 Tf (~/test.shelve) Tj /F1 10 Tf (, to avoid clobbering your default) Tj T* 0 Tw (shelve. If you mispell the arguments in the first line plac will give you an ) Tj 0 0 .501961 rg (argparse ) Tj 0 0 0 rg (error message \(just try\).) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 723.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 4.82 Tm /F1 10 Tf 12 TL (You can run placets following the shebang convention directly with the plac runner:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 677.8236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 36 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 17.71 Tm /F4 10 Tf 12 TL ($ plac --test ishelve2.placet) Tj T* (run 1 plac test\(s\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 633.8236 cm
q
BT 1 0 0 1 0 28.82 Tm .32104 Tw 12 TL /F1 10 Tf 0 0 0 rg (If you want to see the output of the tests, pass the ) Tj /F4 10 Tf (-v/--verbose ) Tj /F1 10 Tf (flag. Notice that he runner ignore the) Tj T* 0 Tw .24856 Tw (extension, so you can actually use any extension your like, but ) Tj /F5 10 Tf (it relies on the first line of the file to invoke) Tj T* 0 Tw (the corresponding plac tool with the given arguments) Tj /F1 10 Tf (.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 603.8236 cm
q
BT 1 0 0 1 0 16.82 Tm .537209 Tw 12 TL /F1 10 Tf 0 0 0 rg (The plac runner does not provide any test discovery facility, but you can use standard Unix tools to help.) Tj T* 0 Tw (For instance, you can run all the ) Tj /F4 10 Tf (.placet ) Tj /F1 10 Tf (files into a directory and its subdirectories as follows:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 570.6236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 24 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 5.71 Tm /F4 10 Tf 12 TL ($ find . -name \\*.placet | xargs plac_runner.py -t) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 538.6236 cm
q
BT 1 0 0 1 0 16.82 Tm .760988 Tw 12 TL /F1 10 Tf 0 0 0 rg (The plac runner expects the main function of your script to return a plac tool, i.e. a function or an object) Tj T* 0 Tw (with a ) Tj /F4 10 Tf (.commands ) Tj /F1 10 Tf (attribute. It this is not the case the runner gracefully exits.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 520.6236 cm
q
0 0 0 rg
BT 1 0 0 1 0 4.82 Tm /F1 10 Tf 12 TL (It also works in non-interactive mode, if you call it as) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 514.6236 cm
Q
q
1 0 0 1 62.69291 502.6236 cm
0 0 0 rg
BT /F3 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 5.71 Tm /F4 10 Tf 12 TL ($ plac module.py args ...) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 502.6236 cm
Q
q
1 0 0 1 62.69291 484.6236 cm
q
0 0 0 rg
BT 1 0 0 1 0 4.82 Tm /F1 10 Tf 12 TL (Here is an example:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 415.4236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 60 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 41.71 Tm /F4 10 Tf 12 TL ($ plac ishelve.py a=1) Tj T* (setting a=1) Tj T* ($ plac ishelve.py .show) Tj T* (a=1) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 383.4236 cm
q
BT 1 0 0 1 0 16.82 Tm .18936 Tw 12 TL /F1 10 Tf 0 0 0 rg (Notice that it non-interactive mode the runner just invokes ) Tj /F4 10 Tf (plac.call ) Tj /F1 10 Tf (on the ) Tj /F4 10 Tf (main ) Tj /F1 10 Tf (object of the Python) Tj T* 0 Tw (module.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 350.4236 cm
q
BT 1 0 0 1 0 8.435 Tm 21 TL /F2 17.5 Tf 0 0 0 rg (A non class-based example) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 308.4236 cm
q
BT 1 0 0 1 0 28.82 Tm .907209 Tw 12 TL /F1 10 Tf 0 0 .501961 rg (plac ) Tj 0 0 0 rg (does not force you to use classes to define command containers. Even a simple function can be a) Tj T* 0 Tw 1.796651 Tw (valid command container, it is enough to add to it a ) Tj /F4 10 Tf (.commands ) Tj /F1 10 Tf (attribute and possibly ) Tj /F4 10 Tf (__enter__) Tj T* 0 Tw /F1 10 Tf (and/or ) Tj /F4 10 Tf (__exit__ ) Tj /F1 10 Tf (attributes.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 278.4236 cm
q
0 0 0 rg
BT 1 0 0 1 0 16.82 Tm /F1 10 Tf 12 TL .327485 Tw (In particular, a Python module is a perfect container of commands. As an example, consider the following) Tj T* 0 Tw (module implementing a fake Version Control System:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 89.22362 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 180 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 161.71 Tm /F4 10 Tf 12 TL ("A Fake Version Control System") Tj T*  T* (import plac) Tj T*  T* (commands = 'checkout', 'commit', 'status') Tj T*  T* (@plac.annotations\(url='url of the source code'\)) Tj T* (def checkout\(url\):) Tj T* (    "A fake checkout command") Tj T* (    return \('checkout ', url\)) Tj T*  T* (@plac.annotations\(message=\('commit message', 'option'\)\)) Tj T* (def commit\(message\):) Tj T* (    "A fake commit command") Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
0 0 0 rg
BT 1 0 0 1 0 4.82 Tm /F1 10 Tf 12 TL 235.3849 0 Td (11) Tj T* -235.3849 0 Td ET
Q
Q
 
endstream

endobj
% 'R126': class PDFStream 
126 0 obj
% page stream
<< /Length 3894 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 559.8236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 204 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 185.71 Tm /F4 10 Tf 12 TL (    return \('commit ', message\)) Tj T*  T* (@plac.annotations\(quiet=\('summary information', 'flag', 'q'\)\)) Tj T* (def status\(quiet\):) Tj T* (    "A fake status command") Tj T* (    return \('status ', quiet\)) Tj T*  T* (def __missing__\(name\):) Tj T* (    return 'Command %r does not exist' % name) Tj T*  T* (def __exit__\(etype, exc, tb\):) Tj T* (    "Will be called automatically at the end of the call/cmdloop") Tj T* (    if etype in \(None, GeneratorExit\): # success) Tj T* (        print\('ok'\)) Tj T*  T* (main = __import__\(__name__\) # the module imports itself!) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 515.8236 cm
q
BT 1 0 0 1 0 28.82 Tm .431318 Tw 12 TL /F1 10 Tf 0 0 0 rg (Notice that I have defined both an ) Tj /F4 10 Tf (__exit__ ) Tj /F1 10 Tf (hook and a ) Tj /F4 10 Tf (__missing__ ) Tj /F1 10 Tf (hook, invoked for non-existing) Tj T* 0 Tw .592651 Tw (commands. The real trick here is the line ) Tj /F4 10 Tf (main = __import__\(__name__\)) Tj /F1 10 Tf (, which define ) Tj /F4 10 Tf (main ) Tj /F1 10 Tf (to be) Tj T* 0 Tw (an alias for the current module.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 485.8236 cm
q
BT 1 0 0 1 0 16.82 Tm 1.259986 Tw 12 TL /F1 10 Tf 0 0 0 rg (The ) Tj /F4 10 Tf (vcs ) Tj /F1 10 Tf (module does not contain an ) Tj /F4 10 Tf (if __name__ == '__main__' ) Tj /F1 10 Tf (block, but you can still run it) Tj T* 0 Tw (through the plac runner \(try ) Tj /F4 10 Tf (plac vcs.py -h) Tj /F1 10 Tf (\):) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 344.6236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 132 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 113.71 Tm /F4 10 Tf 12 TL (usage: plac_runner.py vcs.py [-h] {status,commit,checkout} ...) Tj T*  T* (A Fake Version Control System) Tj T*  T* (optional arguments:) Tj T* (  -h, --help            show this help message and exit) Tj T*  T* (subcommands:) Tj T* (  {status,commit,checkout}) Tj T* (                        -h to get additional help) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 324.6236 cm
q
BT 1 0 0 1 0 4.82 Tm 12 TL /F1 10 Tf 0 0 0 rg (You can get help for the subcommands by postponing ) Tj /F4 10 Tf (-h ) Tj /F1 10 Tf (after the name of the command:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 207.4236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 108 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 89.71 Tm /F4 10 Tf 12 TL ($ plac vcs.py status -h) Tj T* (usage: vcs.py status [-h] [-q]) Tj T*  T* (A fake status command) Tj T*  T* (optional arguments:) Tj T* (  -h, --help   show this help message and exit) Tj T* (  -q, --quiet  summary information) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 175.4236 cm
q
BT 1 0 0 1 0 16.82 Tm 2.064985 Tw 12 TL /F1 10 Tf 0 0 0 rg (Notice how the docstring of the command is automatically shown in usage message, as well as the) Tj T* 0 Tw (documentation for the sub flag ) Tj /F4 10 Tf (-q) Tj /F1 10 Tf (.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 157.4236 cm
q
0 0 0 rg
BT 1 0 0 1 0 4.82 Tm /F1 10 Tf 12 TL (Here is an example of a non-interactive session:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 100.2236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 48 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 29.71 Tm /F4 10 Tf 12 TL ($ plac vcs.py check url) Tj T* (checkout) Tj T* (url) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
0 0 0 rg
BT 1 0 0 1 0 4.82 Tm /F1 10 Tf 12 TL 235.3849 0 Td (12) Tj T* -235.3849 0 Td ET
Q
Q
 
endstream

endobj
% 'R127': class PDFStream 
127 0 obj
% page stream
<< /Length 5650 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 679.8236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 84 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 65.71 Tm /F4 10 Tf 12 TL ($ plac vcs.py st -q) Tj T* (status) Tj T* (True) Tj T* ($ plac vcs.py co) Tj T* (commit) Tj T* (None) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 659.8236 cm
q
0 0 0 rg
BT 1 0 0 1 0 4.82 Tm /F1 10 Tf 12 TL (and here is an interactive session:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 458.6236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 192 re B*
Q
q
BT 1 0 0 1 0 173.71 Tm 12 TL /F4 10 Tf 0 0 0 rg ($ plac -i vcs.py) Tj T* (usage: plac_runner.py vcs.py [-h] {status,commit,checkout} ...) Tj T* (i) Tj (>) Tj ( check url) Tj T* (checkout) Tj T* (url) Tj T* (i) Tj (>) Tj ( st -q) Tj T* (status) Tj T* (True) Tj T* (i) Tj (>) Tj ( co) Tj T* (commit) Tj T* (None) Tj T* (i) Tj (>) Tj ( sto) Tj T* (Command 'sto' does not exist) Tj T* (i) Tj (>) Tj ( [CTRL-D]) Tj T* (ok) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 426.6236 cm
q
BT 1 0 0 1 0 16.82 Tm 2.986905 Tw 12 TL /F1 10 Tf 0 0 0 rg (Notice the invocation of the ) Tj /F4 10 Tf (__missing__ ) Tj /F1 10 Tf (hook for non-existing commands. Notice also that the) Tj T* 0 Tw /F4 10 Tf (__exit__ ) Tj /F1 10 Tf (hook gets called only in interactive mode.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 396.6236 cm
q
0 0 0 rg
BT 1 0 0 1 0 16.82 Tm /F1 10 Tf 12 TL 1.614104 Tw (If the commands are completely independent, a module is a good fit for a method container. In other) Tj T* 0 Tw (situations, it is best to use a custom class.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 363.6236 cm
q
BT 1 0 0 1 0 8.435 Tm 21 TL /F2 17.5 Tf 0 0 0 rg (Writing your own plac runner) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 309.6236 cm
q
BT 1 0 0 1 0 40.82 Tm .167209 Tw 12 TL /F1 10 Tf 0 0 0 rg (The runner included in the ) Tj 0 0 .501961 rg (plac ) Tj 0 0 0 rg (distribution is intentionally kept small \(around 50 lines of code\) so that you) Tj T* 0 Tw .081294 Tw (can study it and write your own runner if want to. If you need to go to such level of detail, you should know) Tj T* 0 Tw .42061 Tw (that the most important method of the ) Tj /F4 10 Tf (Interpreter ) Tj /F1 10 Tf (class is the ) Tj /F4 10 Tf (.send ) Tj /F1 10 Tf (method, which takes strings in) Tj T* 0 Tw (input and returns a four-tuple with attributes ) Tj /F4 10 Tf (.str) Tj /F1 10 Tf (, ) Tj /F4 10 Tf (.etype) Tj /F1 10 Tf (, ) Tj /F4 10 Tf (.exc ) Tj /F1 10 Tf (and ) Tj /F4 10 Tf (.tb) Tj /F1 10 Tf (:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 303.6236 cm
Q
q
1 0 0 1 62.69291 303.6236 cm
Q
q
1 0 0 1 62.69291 285.6236 cm
0 0 0 rg
BT /F3 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 4.82 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 3 cm
q
BT 1 0 0 1 0 4.82 Tm 12 TL /F4 10 Tf 0 0 0 rg (.str ) Tj /F1 10 Tf (is the output of the command, if successful \(a string\);) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 285.6236 cm
Q
q
1 0 0 1 62.69291 285.6236 cm
Q
q
1 0 0 1 62.69291 267.6236 cm
0 0 0 rg
BT /F3 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 4.82 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 3 cm
q
BT 1 0 0 1 0 4.82 Tm 12 TL /F4 10 Tf 0 0 0 rg (.etype ) Tj /F1 10 Tf (is the class of the exception, if the command fail;) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 267.6236 cm
Q
q
1 0 0 1 62.69291 267.6236 cm
Q
q
1 0 0 1 62.69291 249.6236 cm
0 0 0 rg
BT /F3 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 4.82 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 3 cm
q
BT 1 0 0 1 0 4.82 Tm 12 TL /F4 10 Tf 0 0 0 rg (.exc ) Tj /F1 10 Tf (is the exception instance;) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 249.6236 cm
Q
q
1 0 0 1 62.69291 249.6236 cm
Q
q
1 0 0 1 62.69291 231.6236 cm
0 0 0 rg
BT /F3 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 4.82 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 3 cm
q
BT 1 0 0 1 0 4.82 Tm 12 TL /F4 10 Tf 0 0 0 rg (.tb ) Tj /F1 10 Tf (is the traceback.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 231.6236 cm
Q
q
1 0 0 1 62.69291 231.6236 cm
Q
q
1 0 0 1 62.69291 189.6236 cm
q
BT 1 0 0 1 0 28.82 Tm .937485 Tw 12 TL /F1 10 Tf 0 0 0 rg (Moreover the ) Tj /F4 10 Tf (__str__ ) Tj /F1 10 Tf (representation of the output object is redefined to return the output string if the) Tj T* 0 Tw 2.686651 Tw (command was successful or the error message if the command failed \(actually it returns the error) Tj T* 0 Tw (message preceded by the name of the exception class\).) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 171.6236 cm
q
BT 1 0 0 1 0 4.82 Tm 12 TL /F1 10 Tf 0 0 0 rg (For instance, if you send a mispelled option to the interpreter a ) Tj /F4 10 Tf (SystemExit ) Tj /F1 10 Tf (will be trapped:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 90.42362 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 72 re B*
Q
q
BT 1 0 0 1 0 53.71 Tm 12 TL /F4 10 Tf 0 0 0 rg (>) Tj (>) Tj (>) Tj ( import plac) Tj T* (>) Tj (>) Tj (>) Tj ( from ishelve import ishelve) Tj T* (>) Tj (>) Tj (>) Tj ( with plac.Interpreter\(ishelve\) as i:) Tj T* (...     print\(i.send\('.cler'\)\)) Tj T* (...) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
0 0 0 rg
BT 1 0 0 1 0 4.82 Tm /F1 10 Tf 12 TL 235.3849 0 Td (13) Tj T* -235.3849 0 Td ET
Q
Q
 
endstream

endobj
% 'R128': class PDFStream 
128 0 obj
% page stream
<< /Length 6119 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 739.8236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 24 re B*
Q
q
BT 1 0 0 1 0 5.71 Tm 12 TL /F4 10 Tf 0 0 0 rg (SystemExit: unrecognized arguments: .cler) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 707.8236 cm
q
BT 1 0 0 1 0 16.82 Tm 2.90561 Tw 12 TL /F1 10 Tf 0 0 0 rg (It is important to invoke the ) Tj /F4 10 Tf (.send ) Tj /F1 10 Tf (method inside the context manager, otherwise you will get a) Tj T* 0 Tw /F4 10 Tf (RuntimeError) Tj /F1 10 Tf (.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 665.8236 cm
q
0 0 0 rg
BT 1 0 0 1 0 28.82 Tm /F1 10 Tf 12 TL .29311 Tw (For instance, suppose you want to implement a graphical runner for a plac-based interpreter with two text) Tj T* 0 Tw 1.548221 Tw (widgets: one to enter the commands and one to display the results. Suppose you want to display the) Tj T* 0 Tw (errors with tracebacks in red. You will need to code something like that \(pseudocode follows\):) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 428.6236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 228 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 209.71 Tm /F4 10 Tf 12 TL (input_widget = WidgetReadingInput\(\)) Tj T* (output_widget = WidgetDisplayingOutput\(\)) Tj T*  T* (def send\(interpreter, line\):) Tj T* (    out = interpreter.send\(line\)) Tj T* (    if out.tb: # there was an error) Tj T* (        output_widget.display\(out.tb, color='red'\)) Tj T* (    else:) Tj T* (        output_widget.display\(out.str\)) Tj T*  T* (main = plac.import_main\(tool_path\) # get the main object) Tj T*  T* (with plac.Interpreter\(main\) as i:) Tj T* (   def callback\(event\):) Tj T* (      if event.user_pressed_ENTER\(\):) Tj T* (           send\(i, input_widget.last_line\)) Tj T* (   input_widget.addcallback\(callback\)) Tj T* (   gui_mainloop.start\(\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 396.6236 cm
q
0 0 0 rg
BT 1 0 0 1 0 16.82 Tm /F1 10 Tf 12 TL .102765 Tw (You can adapt the pseudocode to your GUI toolkit of choice and you can also change the file associations) Tj T* 0 Tw (in such a way that clicking on a plac tool file the graphical user interface starts.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 342.6236 cm
q
BT 1 0 0 1 0 40.82 Tm 2.090651 Tw 12 TL /F1 10 Tf 0 0 0 rg (There is a final ) Tj /F5 10 Tf (caveat) Tj /F1 10 Tf (: since the plac interpreter loop is implemented via extended generators, plac) Tj T* 0 Tw .988651 Tw (interpreters are single threaded: you will get an error if you ) Tj /F4 10 Tf (.send ) Tj /F1 10 Tf (commands from separated threads.) Tj T* 0 Tw .947882 Tw (You can circumvent the problem by using a queue. If EXIT is a sentinel value to signal exiting from the) Tj T* 0 Tw (interpreter look, you can write code like this:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 285.4236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 48 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 29.71 Tm /F4 10 Tf 12 TL (with interpreter:) Tj T* (    for input_value in iter\(input_queue.get, EXIT\):) Tj T* (        output_queue.put\(interpreter.send\(input_value\)\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 253.4236 cm
q
BT 1 0 0 1 0 16.82 Tm .106098 Tw 12 TL /F1 10 Tf 0 0 0 rg (The same trick also work for processes; you could run the interpreter loop in a separate process and send) Tj T* 0 Tw (commands to it via the Queue class provided by the ) Tj 0 0 .501961 rg (multiprocessing ) Tj 0 0 0 rg (module.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 220.4236 cm
q
BT 1 0 0 1 0 8.435 Tm 21 TL /F2 17.5 Tf 0 0 0 rg (Summary) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 178.4236 cm
q
BT 1 0 0 1 0 28.82 Tm 2.203318 Tw 12 TL /F1 10 Tf 0 0 0 rg (Once ) Tj 0 0 .501961 rg (plac ) Tj 0 0 0 rg (claimed to be the easiest command-line arguments parser in the world. Having read this) Tj T* 0 Tw .673322 Tw (document you may think that it is not so easy after all. But it is a false impression. Actually the rules are) Tj T* 0 Tw (quite simple:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 172.4236 cm
Q
q
1 0 0 1 62.69291 172.4236 cm
Q
q
1 0 0 1 62.69291 154.4236 cm
0 0 0 rg
BT /F3 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 4.82 Tm /F1 10 Tf 12 TL 5.66 0 Td (1.) Tj T* -5.66 0 Td ET
Q
Q
q
1 0 0 1 23 3 cm
q
BT 1 0 0 1 0 4.82 Tm 12 TL /F1 10 Tf 0 0 0 rg (if you want to implement a command-line script, use ) Tj /F4 10 Tf (plac.call) Tj /F1 10 Tf (;) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 154.4236 cm
Q
q
1 0 0 1 62.69291 154.4236 cm
Q
q
1 0 0 1 62.69291 94.42362 cm
0 0 0 rg
BT /F3 10 Tf 12 TL ET
q
1 0 0 1 6 45 cm
q
0 0 0 rg
BT 1 0 0 1 0 4.82 Tm /F1 10 Tf 12 TL 5.66 0 Td (2.) Tj T* -5.66 0 Td ET
Q
Q
q
1 0 0 1 23 45 cm
q
BT 1 0 0 1 0 4.82 Tm 12 TL /F1 10 Tf 0 0 0 rg (if you want to implement a command interpreter, use ) Tj /F4 10 Tf (plac.Interpreter) Tj /F1 10 Tf (:) Tj T* ET
Q
Q
q
1 0 0 1 23 39 cm
Q
q
1 0 0 1 23 39 cm
Q
q
1 0 0 1 23 21 cm
0 0 0 rg
BT /F3 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 4.82 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 3 cm
q
BT 1 0 0 1 0 4.82 Tm 12 TL /F1 10 Tf 0 0 0 rg (for an interactive interpreter, call the ) Tj /F4 10 Tf (.interact ) Tj /F1 10 Tf (method;) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 23 21 cm
Q
q
1 0 0 1 23 21 cm
Q
q
1 0 0 1 23 3 cm
0 0 0 rg
BT /F3 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 4.82 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 3 cm
q
BT 1 0 0 1 0 4.82 Tm 12 TL /F1 10 Tf 0 0 0 rg (for an batch interpreter, call the ) Tj /F4 10 Tf (.execute ) Tj /F1 10 Tf (method;) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 23 3 cm
Q
q
1 0 0 1 23 3 cm
Q
q
Q
Q
q
1 0 0 1 62.69291 94.42362 cm
Q
q
1 0 0 1 62.69291 94.42362 cm
Q
q
1 0 0 1 56.69291 56.69291 cm
q
0 0 0 rg
BT 1 0 0 1 0 4.82 Tm /F1 10 Tf 12 TL 235.3849 0 Td (14) Tj T* -235.3849 0 Td ET
Q
Q
 
endstream

endobj
% 'R129': class PDFStream 
129 0 obj
% page stream
<< /Length 4712 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 735.0236 cm
0 0 0 rg
BT /F3 10 Tf 12 TL ET
q
1 0 0 1 6 15 cm
q
0 0 0 rg
BT 1 0 0 1 0 4.82 Tm /F1 10 Tf 12 TL 5.66 0 Td (3.) Tj T* -5.66 0 Td ET
Q
Q
q
1 0 0 1 23 3 cm
q
BT 1 0 0 1 0 16.82 Tm 5.126647 Tw 12 TL /F1 10 Tf 0 0 0 rg (for testing call the ) Tj /F4 10 Tf (Interpreter.check ) Tj /F1 10 Tf (method in the appropriate context or use the) Tj T* 0 Tw /F4 10 Tf (Interpreter.doctest ) Tj /F1 10 Tf (feature;) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 735.0236 cm
Q
q
1 0 0 1 62.69291 735.0236 cm
Q
q
1 0 0 1 62.69291 717.0236 cm
0 0 0 rg
BT /F3 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 4.82 Tm /F1 10 Tf 12 TL 5.66 0 Td (4.) Tj T* -5.66 0 Td ET
Q
Q
q
1 0 0 1 23 3 cm
q
BT 1 0 0 1 0 4.82 Tm 12 TL /F1 10 Tf 0 0 0 rg (if you need to go at a lower level, you may need to call the ) Tj /F4 10 Tf (Interpreter.send ) Tj /F1 10 Tf (method.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 717.0236 cm
Q
q
1 0 0 1 62.69291 717.0236 cm
Q
q
1 0 0 1 62.69291 699.0236 cm
q
BT 1 0 0 1 0 4.82 Tm 12 TL /F1 10 Tf 0 0 0 rg (Moreover, remember that ) Tj /F4 10 Tf (plac_runner.py ) Tj /F1 10 Tf (is your friend.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 666.0236 cm
q
BT 1 0 0 1 0 8.435 Tm 21 TL /F2 17.5 Tf 0 0 0 rg (Appendix: custom annotation objects) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 636.0236 cm
q
BT 1 0 0 1 0 16.82 Tm .578651 Tw 12 TL /F1 10 Tf 0 0 0 rg (Internally ) Tj 0 0 .501961 rg (plac ) Tj 0 0 0 rg (uses an ) Tj /F4 10 Tf (Annotation ) Tj /F1 10 Tf (class to convert the tuples in the function signature into annotation) Tj T* 0 Tw (objects, i.e. objects with six attributes ) Tj /F4 10 Tf (help, kind, short, type, choices, metavar) Tj /F1 10 Tf (.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 606.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 16.82 Tm /F1 10 Tf 12 TL .083735 Tw (Advanced users can implement their own annotation objects. For instance, here is an example of how you) Tj T* 0 Tw (could implement annotations for positional arguments:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 476.8236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 120 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 101.71 Tm /F4 10 Tf 12 TL (# annotations.py) Tj T* (class Positional\(object\):) Tj T* (    def __init__\(self, help='', type=None, choices=None, metavar=None\):) Tj T* (        self.help = help) Tj T* (        self.kind = 'positional') Tj T* (        self.abbrev = None) Tj T* (        self.type = type) Tj T* (        self.choices = choices) Tj T* (        self.metavar = metavar) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 456.8236 cm
q
0 0 0 rg
BT 1 0 0 1 0 4.82 Tm /F1 10 Tf 12 TL (You can use such annotations objects as follows:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 279.6236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 168 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 149.71 Tm /F4 10 Tf 12 TL (# example11.py) Tj T* (import plac) Tj T* (from annotations import Positional) Tj T*  T* (@plac.annotations\() Tj T* (    i=Positional\("This is an int", int\),) Tj T* (    n=Positional\("This is a float", float\),) Tj T* (    rest=Positional\("Other arguments"\)\)) Tj T* (def main\(i, n, *rest\):) Tj T* (    print\(i, n, rest\)) Tj T*  T* (if __name__ == '__main__':) Tj T* (    import plac; plac.call\(main\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 259.6236 cm
q
0 0 0 rg
BT 1 0 0 1 0 4.82 Tm /F1 10 Tf 12 TL (Here is the usage message you get:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 130.4236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 120 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 101.71 Tm /F4 10 Tf 12 TL (usage: example11.py [-h] i n [rest [rest ...]]) Tj T*  T* (positional arguments:) Tj T* (  i           This is an int) Tj T* (  n           This is a float) Tj T* (  rest        Other arguments) Tj T*  T* (optional arguments:) Tj T* (  -h, --help  show this help message and exit) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 98.42362 cm
q
BT 1 0 0 1 0 16.82 Tm .713516 Tw 12 TL /F1 10 Tf 0 0 0 rg (You can go on and define ) Tj /F4 10 Tf (Option ) Tj /F1 10 Tf (and ) Tj /F4 10 Tf (Flag ) Tj /F1 10 Tf (classes, if you like. Using custom annotation objects you ) Tj T* 0 Tw .17528 Tw (could do advanced things like extracting the annotations from a configuration file or from a database, but I) Tj T* 0 Tw ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
0 0 0 rg
BT 1 0 0 1 0 4.82 Tm /F1 10 Tf 12 TL 235.3849 0 Td (15) Tj T* -235.3849 0 Td ET
Q
Q
 
endstream

endobj
% 'R130': class PDFStream 
130 0 obj
% page stream
<< /Length 379 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 753.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 4.82 Tm /F1 10 Tf 12 TL (expect such use cases to be quite rare: the default mechanism should work pretty well for most users.) Tj T* ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
0 0 0 rg
BT 1 0 0 1 0 4.82 Tm /F1 10 Tf 12 TL 235.3849 0 Td (16) Tj T* -235.3849 0 Td ET
Q
Q
 
endstream

endobj
% 'R131': class PDFPageLabels 
131 0 obj
% Document Root
<< /Nums [ 0
 132 0 R
 1
 133 0 R
 2
 134 0 R
 3
 135 0 R
 4
 136 0 R
 5
 137 0 R
 6
 138 0 R
 7
 139 0 R
 8
 140 0 R
 9
 141 0 R
 10
 142 0 R
 11
 143 0 R
 12
 144 0 R
 13
 145 0 R
 14
 146 0 R
 15
 147 0 R ] >>
endobj
% 'R132': class PDFPageLabel 
132 0 obj
% None
<< /S /D
 /St 1 >>
endobj
% 'R133': class PDFPageLabel 
133 0 obj
% None
<< /S /D
 /St 2 >>
endobj
% 'R134': class PDFPageLabel 
134 0 obj
% None
<< /S /D
 /St 3 >>
endobj
% 'R135': class PDFPageLabel 
135 0 obj
% None
<< /S /D
 /St 4 >>
endobj
% 'R136': class PDFPageLabel 
136 0 obj
% None
<< /S /D
 /St 5 >>
endobj
% 'R137': class PDFPageLabel 
137 0 obj
% None
<< /S /D
 /St 6 >>
endobj
% 'R138': class PDFPageLabel 
138 0 obj
% None
<< /S /D
 /St 7 >>
endobj
% 'R139': class PDFPageLabel 
139 0 obj
% None
<< /S /D
 /St 8 >>
endobj
% 'R140': class PDFPageLabel 
140 0 obj
% None
<< /S /D
 /St 9 >>
endobj
% 'R141': class PDFPageLabel 
141 0 obj
% None
<< /S /D
 /St 10 >>
endobj
% 'R142': class PDFPageLabel 
142 0 obj
% None
<< /S /D
 /St 11 >>
endobj
% 'R143': class PDFPageLabel 
143 0 obj
% None
<< /S /D
 /St 12 >>
endobj
% 'R144': class PDFPageLabel 
144 0 obj
% None
<< /S /D
 /St 13 >>
endobj
% 'R145': class PDFPageLabel 
145 0 obj
% None
<< /S /D
 /St 14 >>
endobj
% 'R146': class PDFPageLabel 
146 0 obj
% None
<< /S /D
 /St 15 >>
endobj
% 'R147': class PDFPageLabel 
147 0 obj
% None
<< /S /D
 /St 16 >>
endobj
xref
0 148
0000000000 65535 f
0000000113 00000 n
0000000270 00000 n
0000000435 00000 n
0000000610 00000 n
0000000791 00000 n
0000001043 00000 n
0000001293 00000 n
0000001551 00000 n
0000001712 00000 n
0000001906 00000 n
0000002148 00000 n
0000002390 00000 n
0000002632 00000 n
0000002874 00000 n
0000003116 00000 n
0000003359 00000 n
0000003602 00000 n
0000003845 00000 n
0000004088 00000 n
0000004331 00000 n
0000004574 00000 n
0000004803 00000 n
0000004989 00000 n
0000005232 00000 n
0000005475 00000 n
0000005718 00000 n
0000005961 00000 n
0000006204 00000 n
0000006447 00000 n
0000006690 00000 n
0000006933 00000 n
0000007176 00000 n
0000007419 00000 n
0000007662 00000 n
0000007904 00000 n
0000008156 00000 n
0000008408 00000 n
0000008660 00000 n
0000008912 00000 n
0000009164 00000 n
0000009407 00000 n
0000009644 00000 n
0000010256 00000 n
0000010513 00000 n
0000010831 00000 n
0000011088 00000 n
0000011330 00000 n
0000011642 00000 n
0000011939 00000 n
0000012191 00000 n
0000012443 00000 n
0000012695 00000 n
0000012955 00000 n
0000013207 00000 n
0000013468 00000 n
0000013720 00000 n
0000013981 00000 n
0000014218 00000 n
0000014608 00000 n
0000014859 00000 n
0000015095 00000 n
0000015422 00000 n
0000015694 00000 n
0000015946 00000 n
0000016183 00000 n
0000016519 00000 n
0000016771 00000 n
0000017028 00000 n
0000017265 00000 n
0000017601 00000 n
0000017860 00000 n
0000018112 00000 n
0000018364 00000 n
0000018623 00000 n
0000018882 00000 n
0000019134 00000 n
0000019391 00000 n
0000019643 00000 n
0000019902 00000 n
0000020161 00000 n
0000020413 00000 n
0000020665 00000 n
0000020917 00000 n
0000021169 00000 n
0000021407 00000 n
0000021837 00000 n
0000022134 00000 n
0000022384 00000 n
0000022622 00000 n
0000022935 00000 n
0000023232 00000 n
0000023469 00000 n
0000023787 00000 n
0000024058 00000 n
0000024296 00000 n
0000024623 00000 n
0000024861 00000 n
0000025165 00000 n
0000025448 00000 n
0000025611 00000 n
0000025891 00000 n
0000026020 00000 n
0000026196 00000 n
0000026416 00000 n
0000026622 00000 n
0000026817 00000 n
0000027015 00000 n
0000027217 00000 n
0000027411 00000 n
0000027606 00000 n
0000027811 00000 n
0000028020 00000 n
0000028208 00000 n
0000028392 00000 n
0000028638 00000 n
0000037365 00000 n
0000041701 00000 n
0000045945 00000 n
0000052177 00000 n
0000058154 00000 n
0000062905 00000 n
0000066988 00000 n
0000071475 00000 n
0000076675 00000 n
0000080981 00000 n
0000086431 00000 n
0000090428 00000 n
0000096181 00000 n
0000102403 00000 n
0000107218 00000 n
0000107703 00000 n
0000108015 00000 n
0000108094 00000 n
0000108173 00000 n
0000108252 00000 n
0000108331 00000 n
0000108410 00000 n
0000108489 00000 n
0000108568 00000 n
0000108647 00000 n
0000108726 00000 n
0000108806 00000 n
0000108886 00000 n
0000108966 00000 n
0000109046 00000 n
0000109126 00000 n
0000109206 00000 n
trailer
<< /ID 
 % ReportLab generated PDF document -- digest (http://www.reportlab.com) 
 [(\275o9\206\006\260\252\254St*\243\362\376\031\013) (\275o9\206\006\260\252\254St*\243\362\376\031\013)] 

 /Info 100 0 R
 /Root 99 0 R
 /Size 148 >>
startxref
109255
%%EOF
