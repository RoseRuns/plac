%PDF-1.3
%“Œ‹ž ReportLab Generated PDF document http://www.reportlab.com
% 'BasicFonts': class PDFDictionary 
1 0 obj
% The standard fonts dictionary
<< /F1 2 0 R
 /F2 3 0 R
 /F3 4 0 R
 /F4 8 0 R
 /F5 50 0 R >>
endobj
% 'F1': class PDFType1Font 
2 0 obj
% Font Helvetica
<< /BaseFont /Helvetica
 /Encoding /WinAnsiEncoding
 /Name /F1
 /Subtype /Type1
 /Type /Font >>
endobj
% 'F2': class PDFType1Font 
3 0 obj
% Font Helvetica-Bold
<< /BaseFont /Helvetica-Bold
 /Encoding /WinAnsiEncoding
 /Name /F2
 /Subtype /Type1
 /Type /Font >>
endobj
% 'F3': class PDFType1Font 
4 0 obj
% Font Times-Roman
<< /BaseFont /Times-Roman
 /Encoding /WinAnsiEncoding
 /Name /F3
 /Subtype /Type1
 /Type /Font >>
endobj
% 'Annot.NUMBER1': class PDFDictionary 
5 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (mailto:michele.simionato@gmail.com) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 153.7323
 707.5936
 526.5827
 719.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER2': class PDFDictionary 
6 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://pypi.python.org/pypi/plac) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 153.7323
 677.5936
 526.5827
 689.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER3': class PDFDictionary 
7 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://micheles.googlecode.com/hg/plac/doc/plac.html) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 153.7323
 650.5936
 526.5827
 662.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'F4': class PDFType1Font 
8 0 obj
% Font Courier
<< /BaseFont /Courier
 /Encoding /WinAnsiEncoding
 /Name /F4
 /Subtype /Type1
 /Type /Font >>
endobj
% 'Annot.NUMBER4': class LinkAnnotation 
9 0 obj
<< /Border [ 0
 0
 0 ]
 /Contents ()
 /Dest [ 46 0 R
 /XYZ
 62.69291
 329.0236
 0 ]
 /Rect [ 62.69291
 563.5936
 215.5029
 575.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER5': class LinkAnnotation 
10 0 obj
<< /Border [ 0
 0
 0 ]
 /Contents ()
 /Dest [ 46 0 R
 /XYZ
 62.69291
 329.0236
 0 ]
 /Rect [ 527.0227
 563.5936
 532.5827
 575.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER6': class LinkAnnotation 
11 0 obj
<< /Border [ 0
 0
 0 ]
 /Contents ()
 /Dest [ 54 0 R
 /XYZ
 62.69291
 627.0236
 0 ]
 /Rect [ 62.69291
 545.5936
 216.0629
 557.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER7': class LinkAnnotation 
12 0 obj
<< /Border [ 0
 0
 0 ]
 /Contents ()
 /Dest [ 54 0 R
 /XYZ
 62.69291
 627.0236
 0 ]
 /Rect [ 527.0227
 545.5936
 532.5827
 557.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER8': class LinkAnnotation 
13 0 obj
<< /Border [ 0
 0
 0 ]
 /Contents ()
 /Dest [ 60 0 R
 /XYZ
 62.69291
 298.2236
 0 ]
 /Rect [ 62.69291
 527.5936
 208.8329
 539.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER9': class LinkAnnotation 
14 0 obj
<< /Border [ 0
 0
 0 ]
 /Contents ()
 /Dest [ 60 0 R
 /XYZ
 62.69291
 298.2236
 0 ]
 /Rect [ 527.0227
 527.5936
 532.5827
 539.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER10': class LinkAnnotation 
15 0 obj
<< /Border [ 0
 0
 0 ]
 /Contents ()
 /Dest [ 72 0 R
 /XYZ
 62.69291
 253.4236
 0 ]
 /Rect [ 62.69291
 509.5936
 254.3829
 521.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER11': class LinkAnnotation 
16 0 obj
<< /Border [ 0
 0
 0 ]
 /Contents ()
 /Dest [ 72 0 R
 /XYZ
 62.69291
 253.4236
 0 ]
 /Rect [ 527.0227
 509.5936
 532.5827
 521.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER12': class LinkAnnotation 
17 0 obj
<< /Border [ 0
 0
 0 ]
 /Contents ()
 /Dest [ 76 0 R
 /XYZ
 62.69291
 251.0236
 0 ]
 /Rect [ 62.69291
 491.5936
 145.4929
 503.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER13': class LinkAnnotation 
18 0 obj
<< /Border [ 0
 0
 0 ]
 /Contents ()
 /Dest [ 76 0 R
 /XYZ
 62.69291
 251.0236
 0 ]
 /Rect [ 527.0227
 491.5936
 532.5827
 503.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER14': class LinkAnnotation 
19 0 obj
<< /Border [ 0
 0
 0 ]
 /Contents ()
 /Dest [ 78 0 R
 /XYZ
 62.69291
 443.4236
 0 ]
 /Rect [ 62.69291
 473.5936
 182.7329
 485.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER15': class LinkAnnotation 
20 0 obj
<< /Border [ 0
 0
 0 ]
 /Contents ()
 /Dest [ 78 0 R
 /XYZ
 62.69291
 443.4236
 0 ]
 /Rect [ 527.0227
 473.5936
 532.5827
 485.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER16': class LinkAnnotation 
21 0 obj
<< /Border [ 0
 0
 0 ]
 /Contents ()
 /Dest [ 86 0 R
 /XYZ
 62.69291
 695.8236
 0 ]
 /Rect [ 62.69291
 455.5936
 128.2629
 467.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER17': class LinkAnnotation 
22 0 obj
<< /Border [ 0
 0
 0 ]
 /Contents ()
 /Dest [ 86 0 R
 /XYZ
 62.69291
 695.8236
 0 ]
 /Rect [ 527.0227
 455.5936
 532.5827
 467.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER18': class LinkAnnotation 
23 0 obj
<< /Border [ 0
 0
 0 ]
 /Contents ()
 /Dest [ 90 0 R
 /XYZ
 62.69291
 254.0849
 0 ]
 /Rect [ 62.69291
 437.5936
 153.2929
 449.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER19': class LinkAnnotation 
24 0 obj
<< /Border [ 0
 0
 0 ]
 /Contents ()
 /Dest [ 90 0 R
 /XYZ
 62.69291
 254.0849
 0 ]
 /Rect [ 521.4627
 437.5936
 532.5827
 449.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER20': class LinkAnnotation 
25 0 obj
<< /Border [ 0
 0
 0 ]
 /Contents ()
 /Dest [ 93 0 R
 /XYZ
 62.69291
 180.6236
 0 ]
 /Rect [ 62.69291
 419.5936
 158.8229
 431.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER21': class LinkAnnotation 
26 0 obj
<< /Border [ 0
 0
 0 ]
 /Contents ()
 /Dest [ 93 0 R
 /XYZ
 62.69291
 180.6236
 0 ]
 /Rect [ 521.4627
 419.5936
 532.5827
 431.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER22': class LinkAnnotation 
27 0 obj
<< /Border [ 0
 0
 0 ]
 /Contents ()
 /Dest [ 97 0 R
 /XYZ
 62.69291
 152.2236
 0 ]
 /Rect [ 62.69291
 401.5936
 141.6229
 413.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER23': class LinkAnnotation 
28 0 obj
<< /Border [ 0
 0
 0 ]
 /Contents ()
 /Dest [ 97 0 R
 /XYZ
 62.69291
 152.2236
 0 ]
 /Rect [ 521.4627
 401.5936
 532.5827
 413.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER24': class LinkAnnotation 
29 0 obj
<< /Border [ 0
 0
 0 ]
 /Contents ()
 /Dest [ 126 0 R
 /XYZ
 62.69291
 393.0236
 0 ]
 /Rect [ 62.69291
 383.5936
 194.9529
 395.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER25': class LinkAnnotation 
30 0 obj
<< /Border [ 0
 0
 0 ]
 /Contents ()
 /Dest [ 126 0 R
 /XYZ
 62.69291
 393.0236
 0 ]
 /Rect [ 521.4627
 383.5936
 532.5827
 395.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER26': class LinkAnnotation 
31 0 obj
<< /Border [ 0
 0
 0 ]
 /Contents ()
 /Dest [ 146 0 R
 /XYZ
 62.69291
 765.0236
 0 ]
 /Rect [ 62.69291
 365.5936
 111.5829
 377.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER27': class LinkAnnotation 
32 0 obj
<< /Border [ 0
 0
 0 ]
 /Contents ()
 /Dest [ 146 0 R
 /XYZ
 62.69291
 765.0236
 0 ]
 /Rect [ 521.4627
 365.5936
 532.5827
 377.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER28': class LinkAnnotation 
33 0 obj
<< /Border [ 0
 0
 0 ]
 /Contents ()
 /Dest [ 146 0 R
 /XYZ
 62.69291
 630.0236
 0 ]
 /Rect [ 62.69291
 347.5936
 219.9529
 359.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER29': class LinkAnnotation 
34 0 obj
<< /Border [ 0
 0
 0 ]
 /Contents ()
 /Dest [ 146 0 R
 /XYZ
 62.69291
 630.0236
 0 ]
 /Rect [ 521.4627
 347.5936
 532.5827
 359.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER30': class PDFDictionary 
35 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://docs.python.org/library/getopt.html) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 214.8914
 281.5936
 246.5585
 293.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER31': class PDFDictionary 
36 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://docs.python.org/library/optparse.html) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 346.507
 281.5936
 389.2842
 293.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER32': class PDFDictionary 
37 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://argparse.googlecode.com) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 493.1227
 281.5936
 531.4956
 293.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER33': class PDFDictionary 
38 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://argparse.googlecode.com) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 346.384
 269.5936
 388.8477
 281.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER34': class PDFDictionary 
39 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://www.welton.it/articles/scalable_systems) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 292.1608
 227.5936
 350.0128
 239.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER35': class PDFDictionary 
40 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://pypi.python.org/pypi/plac) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 208.2364
 179.5936
 229.8923
 191.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER36': class PDFDictionary 
41 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://argparse.googlecode.com) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 152.7329
 155.5936
 192.1929
 167.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER37': class PDFDictionary 
42 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://pypi.python.org/pypi/plac) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 116.9711
 137.5936
 139.5794
 149.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER38': class PDFDictionary 
43 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://argparse.googlecode.com) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 277.9887
 137.5936
 321.7169
 149.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER39': class PDFDictionary 
44 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://pypi.python.org/pypi/plac) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 504.0394
 125.5936
 525.3627
 137.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER40': class PDFDictionary 
45 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://argparse.googlecode.com) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 351.0408
 113.5936
 390.5008
 125.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Page1': class PDFPage 
46 0 obj
% Page dictionary
<< /Annots [ 5 0 R
 6 0 R
 7 0 R
 9 0 R
 10 0 R
 11 0 R
 12 0 R
 13 0 R
 14 0 R
 15 0 R
 16 0 R
 17 0 R
 18 0 R
 19 0 R
 20 0 R
 21 0 R
 22 0 R
 23 0 R
 24 0 R
 25 0 R
 26 0 R
 27 0 R
 28 0 R
 29 0 R
 30 0 R
 31 0 R
 32 0 R
 33 0 R
 34 0 R
 35 0 R
 36 0 R
 37 0 R
 38 0 R
 39 0 R
 40 0 R
 41 0 R
 42 0 R
 43 0 R
 44 0 R
 45 0 R ]
 /Contents 164 0 R
 /MediaBox [ 0
 0
 595.2756
 841.8898 ]
 /Parent 163 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Annot.NUMBER41': class PDFDictionary 
47 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://pypi.python.org/pypi/plac) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 247.8817
 756.5936
 266.2217
 768.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER42': class PDFDictionary 
48 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://pypi.python.org/pypi/plac) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 62.69291
 726.5936
 85.3538
 738.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER43': class PDFDictionary 
49 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://pypi.python.org/pypi/plac) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 124.2211
 654.5936
 146.9252
 666.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'F5': class PDFType1Font 
50 0 obj
% Font Helvetica-Oblique
<< /BaseFont /Helvetica-Oblique
 /Encoding /WinAnsiEncoding
 /Name /F5
 /Subtype /Type1
 /Type /Font >>
endobj
% 'Annot.NUMBER44': class PDFDictionary 
51 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://docs.python.org/library/getopt.html) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 325.341
 262.3936
 356.6198
 274.3936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER45': class PDFDictionary 
52 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://docs.python.org/library/optparse.html) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 376.7786
 262.3936
 419.1674
 274.3936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER46': class PDFDictionary 
53 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://argparse.googlecode.com) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 365.694
 250.3936
 408.8281
 262.3936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Page2': class PDFPage 
54 0 obj
% Page dictionary
<< /Annots [ 47 0 R
 48 0 R
 49 0 R
 51 0 R
 52 0 R
 53 0 R ]
 /Contents 165 0 R
 /MediaBox [ 0
 0
 595.2756
 841.8898 ]
 /Parent 163 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Annot.NUMBER47': class PDFDictionary 
55 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://pypi.python.org/pypi/plac) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 83.82606
 657.3936
 106.0692
 669.3936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER48': class PDFDictionary 
56 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://pypi.python.org/pypi/plac) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 243.8829
 645.3936
 265.0029
 657.3936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER49': class PDFDictionary 
57 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://pypi.python.org/pypi/plac) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 83.6329
 508.1936
 105.6829
 520.1936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER50': class PDFDictionary 
58 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://argparse.googlecode.com) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 421.9727
 508.1936
 465.1427
 520.1936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER51': class PDFDictionary 
59 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://pypi.python.org/pypi/plac) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 211.6529
 313.7936
 232.7729
 325.7936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Page3': class PDFPage 
60 0 obj
% Page dictionary
<< /Annots [ 55 0 R
 56 0 R
 57 0 R
 58 0 R
 59 0 R ]
 /Contents 166 0 R
 /MediaBox [ 0
 0
 595.2756
 841.8898 ]
 /Parent 163 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Annot.NUMBER52': class PDFDictionary 
61 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://argparse.googlecode.com) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 321.4303
 651.3936
 363.754
 663.3936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER53': class PDFDictionary 
62 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://pypi.python.org/pypi/plac) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 126.0429
 639.3936
 147.1629
 651.3936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER54': class PDFDictionary 
63 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://pypi.python.org/pypi/plac) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 62.69291
 400.9936
 84.20915
 412.9936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Page4': class PDFPage 
64 0 obj
% Page dictionary
<< /Annots [ 61 0 R
 62 0 R
 63 0 R ]
 /Contents 167 0 R
 /MediaBox [ 0
 0
 595.2756
 841.8898 ]
 /Parent 163 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Annot.NUMBER55': class PDFDictionary 
65 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://pypi.python.org/pypi/plac) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 446.1627
 699.3936
 464.5027
 711.3936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER56': class PDFDictionary 
66 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://pypi.python.org/pypi/plac) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 62.69291
 669.3936
 84.28901
 681.3936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER57': class PDFDictionary 
67 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://code.activestate.com/recipes/278844-parsing-the-command-line/) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 161.7834
 669.3936
 217.2895
 681.3936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER58': class PDFDictionary 
68 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://pypi.python.org/pypi/plac) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 62.69291
 268.9936
 83.81291
 280.9936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER59': class PDFDictionary 
69 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://code.activestate.com/recipes/278844-parsing-the-command-line/) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 357.8702
 169.9936
 416.0058
 181.9936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER60': class PDFDictionary 
70 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://code.activestate.com/recipes/278844-parsing-the-command-line/) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 182.0729
 157.9936
 234.3229
 169.9936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER61': class PDFDictionary 
71 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://pypi.python.org/pypi/plac) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 150.5229
 145.9936
 171.6429
 157.9936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Page5': class PDFPage 
72 0 obj
% Page dictionary
<< /Annots [ 65 0 R
 66 0 R
 67 0 R
 68 0 R
 69 0 R
 70 0 R
 71 0 R ]
 /Contents 168 0 R
 /MediaBox [ 0
 0
 595.2756
 841.8898 ]
 /Parent 163 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Annot.NUMBER62': class PDFDictionary 
73 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://pypi.python.org/pypi/plac) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 494.1558
 651.3936
 515.9027
 663.3936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Page6': class PDFPage 
74 0 obj
% Page dictionary
<< /Annots [ 73 0 R ]
 /Contents 169 0 R
 /MediaBox [ 0
 0
 595.2756
 841.8898 ]
 /Parent 163 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Annot.NUMBER63': class PDFDictionary 
75 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://pypi.python.org/pypi/plac) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 62.69291
 215.5936
 84.62846
 227.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Page7': class PDFPage 
76 0 obj
% Page dictionary
<< /Annots [ 75 0 R ]
 /Contents 170 0 R
 /MediaBox [ 0
 0
 595.2756
 841.8898 ]
 /Parent 163 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Annot.NUMBER64': class PDFDictionary 
77 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://pypi.python.org/pypi/plac) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 110.2829
 383.9936
 132.8629
 395.9936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Page8': class PDFPage 
78 0 obj
% Page dictionary
<< /Annots [ 77 0 R ]
 /Contents 171 0 R
 /MediaBox [ 0
 0
 595.2756
 841.8898 ]
 /Parent 163 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Annot.NUMBER65': class PDFDictionary 
79 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://pypi.python.org/pypi/plac) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 303.6429
 711.3936
 324.7629
 723.3936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER66': class PDFDictionary 
80 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://pypi.python.org/pypi/plac) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 157.3904
 660.3936
 179.9938
 672.3936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER67': class PDFDictionary 
81 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://argparse.googlecode.com) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 184.0634
 648.3936
 223.5234
 660.3936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER68': class PDFDictionary 
82 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://argparse.googlecode.com) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 62.69291
 636.3936
 102.1529
 648.3936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER69': class PDFDictionary 
83 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://argparse.googlecode.com) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 192.7997
 636.3936
 237.9391
 648.3936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER70': class PDFDictionary 
84 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://pypi.python.org/pypi/plac) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 324.4372
 636.3936
 342.7772
 648.3936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER71': class PDFDictionary 
85 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://argparse.googlecode.com) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 355.0429
 444.3936
 397.2829
 456.3936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Page9': class PDFPage 
86 0 obj
% Page dictionary
<< /Annots [ 79 0 R
 80 0 R
 81 0 R
 82 0 R
 83 0 R
 84 0 R
 85 0 R ]
 /Contents 172 0 R
 /MediaBox [ 0
 0
 595.2756
 841.8898 ]
 /Parent 163 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Annot.NUMBER72': class PDFDictionary 
87 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://pypi.python.org/pypi/plac) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 338.1568
 218.6549
 360.5113
 230.6549 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER73': class PDFDictionary 
88 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://www.sqlalchemy.org/) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 110.6843
 206.6549
 169.0343
 218.6549 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER74': class PDFDictionary 
89 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://www.sqlalchemy.org/docs/reference/ext/sqlsoup.html) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 168.3029
 194.6549
 208.8829
 206.6549 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Page10': class PDFPage 
90 0 obj
% Page dictionary
<< /Annots [ 87 0 R
 88 0 R
 89 0 R ]
 /Contents 173 0 R
 /MediaBox [ 0
 0
 595.2756
 841.8898 ]
 /Parent 163 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Annot.NUMBER75': class PDFDictionary 
91 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://pypi.python.org/pypi/plac) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 185.0709
 145.1936
 208.0228
 157.1936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER76': class PDFDictionary 
92 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://pypi.python.org/pypi/plac) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 220.5998
 133.1936
 243.819
 145.1936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Page11': class PDFPage 
93 0 obj
% Page dictionary
<< /Annots [ 91 0 R
 92 0 R ]
 /Contents 174 0 R
 /MediaBox [ 0
 0
 595.2756
 841.8898 ]
 /Parent 163 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Annot.NUMBER77': class PDFDictionary 
94 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://pypi.python.org/pypi/plac) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 62.69291
 116.7936
 84.8789
 128.7936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER78': class PDFDictionary 
95 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://argparse.googlecode.com) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 466.5307
 116.7936
 509.8367
 128.7936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER79': class PDFDictionary 
96 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://argparse.googlecode.com) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 124.3929
 92.79362
 163.8529
 104.7936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Page12': class PDFPage 
97 0 obj
% Page dictionary
<< /Annots [ 94 0 R
 95 0 R
 96 0 R ]
 /Contents 175 0 R
 /MediaBox [ 0
 0
 595.2756
 841.8898 ]
 /Parent 163 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Annot.NUMBER80': class PDFDictionary 
98 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://argparse.googlecode.com) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 85.69291
 687.5936
 127.9329
 699.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER81': class PDFDictionary 
99 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://pypi.python.org/pypi/plac) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 85.69291
 669.5936
 107.9337
 681.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER82': class PDFDictionary 
100 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://argparse.googlecode.com) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 308.5389
 669.5936
 351.8997
 681.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER83': class PDFDictionary 
101 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://pypi.python.org/pypi/plac) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 85.69291
 627.5936
 108.3529
 639.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER84': class PDFDictionary 
102 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://argparse.googlecode.com) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 277.2428
 627.5936
 321.0228
 639.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER85': class PDFDictionary 
103 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://pypi.python.org/pypi/plac) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 404.5839
 615.5936
 426.0657
 627.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER86': class PDFDictionary 
104 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://pypi.python.org/pypi/plac) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 85.69291
 561.5936
 108.61
 573.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER87': class PDFDictionary 
105 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://pypi.python.org/pypi/plac) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 459.2622
 549.5936
 481.289
 561.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER88': class PDFDictionary 
106 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://pypi.python.org/pypi/plac) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 85.69291
 519.5936
 108.9242
 531.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER89': class PDFDictionary 
107 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (file:///home/msimionato/Dropbox/md/gcodedev/plac/in-writing) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 340.9248
 519.5936
 470.1087
 531.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER90': class PDFDictionary 
108 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://pypi.python.org/pypi/plac) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 85.69291
 489.5936
 107.9247
 501.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER91': class PDFDictionary 
109 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://pypi.python.org/pypi/plac) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 85.69291
 477.5936
 104.0329
 489.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER92': class PDFDictionary 
110 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (file:///home/msimionato/Dropbox/md/gcodedev/plac/in-writing) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 489.2227
 477.5936
 532.176
 489.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER93': class PDFDictionary 
111 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (file:///home/msimionato/Dropbox/md/gcodedev/plac/in-writing) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 85.69291
 465.5936
 159.6229
 477.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER94': class PDFDictionary 
112 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://argparse.googlecode.com) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 330.9361
 444.5936
 376.9555
 456.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER95': class PDFDictionary 
113 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://pypi.python.org/pypi/plac) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 446.2044
 444.5936
 471.1038
 456.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER96': class PDFDictionary 
114 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://argparse.googlecode.com/svn/tags/r11/doc/ArgumentParser.html) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 321.0443
 432.5936
 399.3474
 444.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER97': class PDFDictionary 
115 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://argparse.googlecode.com) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 62.69291
 420.5936
 107.3744
 432.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER98': class PDFDictionary 
116 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://pypi.python.org/pypi/plac) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 109.0098
 357.5936
 131.9967
 369.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER99': class PDFDictionary 
117 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://pypi.python.org/pypi/plac) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 397.2929
 333.5936
 415.6329
 345.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER100': class PDFDictionary 
118 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://pypi.python.org/pypi/opterator) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 85.69291
 312.5936
 128.4929
 324.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER101': class PDFDictionary 
119 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://pypi.python.org/pypi/CLIArgs) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 85.69291
 294.5936
 124.5929
 306.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER102': class PDFDictionary 
120 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://argparse.googlecode.com) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 464.3898
 273.5936
 503.8498
 285.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER103': class PDFDictionary 
121 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://pypi.python.org/pypi/plac) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 305.0429
 261.5936
 323.3829
 273.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER104': class PDFDictionary 
122 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://pypi.python.org/pypi/Clap/0.7) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 455.0104
 243.5936
 479.9015
 255.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER105': class PDFDictionary 
123 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://pypi.python.org/pypi/plac) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 303.707
 231.5936
 322.047
 243.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER106': class PDFDictionary 
124 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://pypi.python.org/pypi/Clap/0.7) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 328.8186
 231.5936
 353.3701
 243.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER107': class PDFDictionary 
125 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://pypi.python.org/pypi/plac) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 62.69291
 219.5936
 81.03291
 231.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Page13': class PDFPage 
126 0 obj
% Page dictionary
<< /Annots [ 98 0 R
 99 0 R
 100 0 R
 101 0 R
 102 0 R
 103 0 R
 104 0 R
 105 0 R
 106 0 R
 107 0 R
 108 0 R
 109 0 R
 110 0 R
 111 0 R
 112 0 R
 113 0 R
 114 0 R
 115 0 R
 116 0 R
 117 0 R
 118 0 R
 119 0 R
 120 0 R
 121 0 R
 122 0 R
 123 0 R
 124 0 R
 125 0 R ]
 /Contents 176 0 R
 /MediaBox [ 0
 0
 595.2756
 841.8898 ]
 /Parent 163 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Annot.NUMBER108': class PDFDictionary 
127 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://pypi.python.org/pypi/plac) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 106.199
 729.5936
 127.4851
 741.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER109': class PDFDictionary 
128 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://argparse.googlecode.com) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 128.5202
 705.5936
 167.9802
 717.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER110': class PDFDictionary 
129 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://argparse.googlecode.com) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 459.5254
 705.5936
 504.114
 717.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER111': class PDFDictionary 
130 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://pypi.python.org/pypi/plac) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 514.2427
 705.5936
 530.234
 717.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER112': class PDFDictionary 
131 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://argparse.googlecode.com) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 139.0773
 669.5936
 178.5373
 681.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER113': class PDFDictionary 
132 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://pypi.python.org/pypi/plac) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 488.2705
 669.5936
 509.8666
 681.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER114': class PDFDictionary 
133 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (file:///home/msimionato/Dropbox/md/gcodedev/plac/in-writing) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 333.3598
 657.5936
 458.0115
 669.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER115': class PDFDictionary 
134 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://pypi.python.org/pypi/plac) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 194.4129
 645.5936
 215.5329
 657.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER116': class PDFDictionary 
135 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://pypi.python.org/pypi/plac) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 83.64556
 594.5936
 105.7082
 606.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER117': class PDFDictionary 
136 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://code.activestate.com/recipes/278844-parsing-the-command-line/) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 446.6
 594.5936
 502.5727
 606.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER118': class PDFDictionary 
137 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://pypi.python.org/pypi/plac) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 275.6828
 582.5936
 297.3688
 594.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER119': class PDFDictionary 
138 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://docs.python.org/library/optparse.html?highlight=optionparser#optparse.OptionParser) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 77.19665
 570.5936
 139.4904
 582.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER120': class PDFDictionary 
139 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://argparse.googlecode.com) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 96.54131
 558.5936
 139.0255
 570.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER121': class PDFDictionary 
140 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://argparse.googlecode.com) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 203.5016
 525.5936
 245.8453
 537.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER122': class PDFDictionary 
141 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://argparse.googlecode.com/svn/tags/r11/doc/ArgumentParser.html) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 62.69291
 450.5936
 138.7898
 462.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER123': class PDFDictionary 
142 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://argparse.googlecode.com) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 114.6649
 438.5936
 154.1249
 450.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER124': class PDFDictionary 
143 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://argparse.googlecode.com) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 191.6329
 426.5936
 233.8729
 438.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER125': class PDFDictionary 
144 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://pypi.python.org/pypi/Clap/0.7) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 263.3429
 396.5936
 286.6829
 408.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER126': class PDFDictionary 
145 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://pypi.python.org/pypi/plac) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 258.5629
 348.5936
 276.9029
 360.5936 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Page14': class PDFPage 
146 0 obj
% Page dictionary
<< /Annots [ 127 0 R
 128 0 R
 129 0 R
 130 0 R
 131 0 R
 132 0 R
 133 0 R
 134 0 R
 135 0 R
 136 0 R
 137 0 R
 138 0 R
 139 0 R
 140 0 R
 141 0 R
 142 0 R
 143 0 R
 144 0 R
 145 0 R ]
 /Contents 177 0 R
 /MediaBox [ 0
 0
 595.2756
 841.8898 ]
 /Parent 163 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'R147': class PDFCatalog 
147 0 obj
% Document Root
<< /Outlines 149 0 R
 /PageLabels 178 0 R
 /PageMode /UseNone
 /Pages 163 0 R
 /Type /Catalog >>
endobj
% 'R148': class PDFInfo 
148 0 obj
<< /Author (Michele Simionato)
 /CreationDate (D:20100611140636-01'00')
 /Keywords ()
 /Producer (ReportLab http://www.reportlab.com)
 /Subject (\(unspecified\))
 /Title (Plac: Parsing the Command Line the Easy Way) >>
endobj
% 'R149': class PDFOutlines 
149 0 obj
<< /Count 13
 /First 150 0 R
 /Last 162 0 R
 /Type /Outlines >>
endobj
% 'Outline.0': class OutlineEntryObject 
150 0 obj
<< /Dest [ 46 0 R
 /XYZ
 62.69291
 329.0236
 0 ]
 /Next 151 0 R
 /Parent 149 0 R
 /Title (The importance of scaling down) >>
endobj
% 'Outline.1': class OutlineEntryObject 
151 0 obj
<< /Dest [ 54 0 R
 /XYZ
 62.69291
 627.0236
 0 ]
 /Next 152 0 R
 /Parent 149 0 R
 /Prev 150 0 R
 /Title (Scripts with required arguments) >>
endobj
% 'Outline.2': class OutlineEntryObject 
152 0 obj
<< /Dest [ 60 0 R
 /XYZ
 62.69291
 298.2236
 0 ]
 /Next 153 0 R
 /Parent 149 0 R
 /Prev 151 0 R
 /Title (Scripts with default arguments) >>
endobj
% 'Outline.3': class OutlineEntryObject 
153 0 obj
<< /Dest [ 72 0 R
 /XYZ
 62.69291
 253.4236
 0 ]
 /Next 154 0 R
 /Parent 149 0 R
 /Prev 152 0 R
 /Title (Scripts with options \(and smart options\)) >>
endobj
% 'Outline.4': class OutlineEntryObject 
154 0 obj
<< /Dest [ 76 0 R
 /XYZ
 62.69291
 251.0236
 0 ]
 /Next 155 0 R
 /Parent 149 0 R
 /Prev 153 0 R
 /Title (Scripts with flags) >>
endobj
% 'Outline.5': class OutlineEntryObject 
155 0 obj
<< /Dest [ 78 0 R
 /XYZ
 62.69291
 443.4236
 0 ]
 /Next 156 0 R
 /Parent 149 0 R
 /Prev 154 0 R
 /Title (plac for Python 2.X users) >>
endobj
% 'Outline.6': class OutlineEntryObject 
156 0 obj
<< /Dest [ 86 0 R
 /XYZ
 62.69291
 695.8236
 0 ]
 /Next 157 0 R
 /Parent 149 0 R
 /Prev 155 0 R
 /Title (More features) >>
endobj
% 'Outline.7': class OutlineEntryObject 
157 0 obj
<< /Dest [ 90 0 R
 /XYZ
 62.69291
 254.0849
 0 ]
 /Next 158 0 R
 /Parent 149 0 R
 /Prev 156 0 R
 /Title (A realistic example) >>
endobj
% 'Outline.8': class OutlineEntryObject 
158 0 obj
<< /Dest [ 93 0 R
 /XYZ
 62.69291
 180.6236
 0 ]
 /Next 159 0 R
 /Parent 149 0 R
 /Prev 157 0 R
 /Title (Keyword arguments) >>
endobj
% 'Outline.9': class OutlineEntryObject 
159 0 obj
<< /Dest [ 97 0 R
 /XYZ
 62.69291
 152.2236
 0 ]
 /Next 160 0 R
 /Parent 149 0 R
 /Prev 158 0 R
 /Title (plac vs argparse) >>
endobj
% 'Outline.10': class OutlineEntryObject 
160 0 obj
<< /Dest [ 126 0 R
 /XYZ
 62.69291
 393.0236
 0 ]
 /Next 161 0 R
 /Parent 149 0 R
 /Prev 159 0 R
 /Title (plac vs the rest of the world) >>
endobj
% 'Outline.11': class OutlineEntryObject 
161 0 obj
<< /Dest [ 146 0 R
 /XYZ
 62.69291
 765.0236
 0 ]
 /Next 162 0 R
 /Parent 149 0 R
 /Prev 160 0 R
 /Title (The future) >>
endobj
% 'Outline.12': class OutlineEntryObject 
162 0 obj
<< /Dest [ 146 0 R
 /XYZ
 62.69291
 630.0236
 0 ]
 /Parent 149 0 R
 /Prev 161 0 R
 /Title (Trivia: the story behind the name) >>
endobj
% 'R163': class PDFPages 
163 0 obj
% page tree
<< /Count 14
 /Kids [ 46 0 R
 54 0 R
 60 0 R
 64 0 R
 72 0 R
 74 0 R
 76 0 R
 78 0 R
 86 0 R
 90 0 R
 93 0 R
 97 0 R
 126 0 R
 146 0 R ]
 /Type /Pages >>
endobj
% 'R164': class PDFStream 
164 0 obj
% page stream
<< /Length 8958 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 741.0236 cm
q
BT 1 0 0 1 0 9.64 Tm 11.54488 0 Td 24 TL /F2 20 Tf 0 0 0 rg (Plac: Parsing the Command Line the Easy Way) Tj T* -11.54488 0 Td ET
Q
Q
q
1 0 0 1 62.69291 716.0236 cm
0 0 0 rg
BT /F3 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 4.82 Tm /F2 10 Tf 12 TL 36.93937 0 Td (Author:) Tj T* -36.93937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 4.82 Tm /F1 10 Tf 12 TL (Michele Simionato) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 701.0236 cm
0 0 0 rg
BT /F3 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 4.82 Tm /F2 10 Tf 12 TL 39.69937 0 Td (E-mail:) Tj T* -39.69937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 4.82 Tm /F1 10 Tf 12 TL (michele.simionato@gmail.com) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 686.0236 cm
0 0 0 rg
BT /F3 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 4.82 Tm /F2 10 Tf 12 TL 26.91937 0 Td (Requires:) Tj T* -26.91937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 4.82 Tm /F1 10 Tf 12 TL (Python 2.3+) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 659.0236 cm
0 0 0 rg
BT /F3 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 16.82 Tm /F2 10 Tf 12 TL 25.25937 0 Td (Download) Tj T* 21.11 0 Td (page:) Tj T* -46.36937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 15 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 4.82 Tm /F1 10 Tf 12 TL (http://pypi.python.org/pypi/plac) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 644.0236 cm
0 0 0 rg
BT /F3 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 4.82 Tm /F2 10 Tf 12 TL 9.68937 0 Td (Project page:) Tj T* -9.68937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 4.82 Tm /F1 10 Tf 12 TL (http://micheles.googlecode.com/hg/plac/doc/plac.html) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 629.0236 cm
0 0 0 rg
BT /F3 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 4.82 Tm /F2 10 Tf 12 TL 16.91937 0 Td (Installation:) Tj T* -16.91937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 5.71 Tm /F4 10 Tf 12 TL (easy_install -U plac) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 614.0236 cm
0 0 0 rg
BT /F3 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 4.82 Tm /F2 10 Tf 12 TL 32.46937 0 Td (License:) Tj T* -32.46937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 4.82 Tm /F1 10 Tf 12 TL (BSD license) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 581.0236 cm
q
BT 1 0 0 1 0 8.435 Tm 21 TL /F2 17.5 Tf 0 0 0 rg (Contents) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 341.0236 cm
0 0 0 rg
BT /F3 10 Tf 12 TL ET
q
1 0 0 1 0 219 cm
q
BT 1 0 0 1 0 4.82 Tm 12 TL /F2 10 Tf 0 0 .501961 rg (The importance of scaling down) Tj T* ET
Q
Q
q
1 0 0 1 397.8898 219 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 4.82 Tm /F2 10 Tf 12 TL 66.44 0 Td (1) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 201 cm
q
BT 1 0 0 1 0 4.82 Tm 12 TL /F2 10 Tf 0 0 .501961 rg (Scripts with required arguments) Tj T* ET
Q
Q
q
1 0 0 1 397.8898 201 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 4.82 Tm /F2 10 Tf 12 TL 66.44 0 Td (2) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 183 cm
q
BT 1 0 0 1 0 4.82 Tm 12 TL /F2 10 Tf 0 0 .501961 rg (Scripts with default arguments) Tj T* ET
Q
Q
q
1 0 0 1 397.8898 183 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 4.82 Tm /F2 10 Tf 12 TL 66.44 0 Td (3) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 165 cm
q
BT 1 0 0 1 0 4.82 Tm 12 TL /F2 10 Tf 0 0 .501961 rg (Scripts with options \(and smart options\)) Tj T* ET
Q
Q
q
1 0 0 1 397.8898 165 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 4.82 Tm /F2 10 Tf 12 TL 66.44 0 Td (5) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 147 cm
q
BT 1 0 0 1 0 4.82 Tm 12 TL /F2 10 Tf 0 0 .501961 rg (Scripts with flags) Tj T* ET
Q
Q
q
1 0 0 1 397.8898 147 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 4.82 Tm /F2 10 Tf 12 TL 66.44 0 Td (7) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 129 cm
q
BT 1 0 0 1 0 4.82 Tm 12 TL /F2 10 Tf 0 0 .501961 rg (plac for Python 2.X users) Tj T* ET
Q
Q
q
1 0 0 1 397.8898 129 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 4.82 Tm /F2 10 Tf 12 TL 66.44 0 Td (8) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 111 cm
q
BT 1 0 0 1 0 4.82 Tm 12 TL /F2 10 Tf 0 0 .501961 rg (More features) Tj T* ET
Q
Q
q
1 0 0 1 397.8898 111 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 4.82 Tm /F2 10 Tf 12 TL 66.44 0 Td (9) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 93 cm
q
BT 1 0 0 1 0 4.82 Tm 12 TL /F2 10 Tf 0 0 .501961 rg (A realistic example) Tj T* ET
Q
Q
q
1 0 0 1 397.8898 93 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 4.82 Tm /F2 10 Tf 12 TL 60.88 0 Td (10) Tj T* -60.88 0 Td ET
Q
Q
q
1 0 0 1 0 75 cm
q
BT 1 0 0 1 0 4.82 Tm 12 TL /F2 10 Tf 0 0 .501961 rg (Keyword arguments) Tj T* ET
Q
Q
q
1 0 0 1 397.8898 75 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 4.82 Tm /F2 10 Tf 12 TL 60.88 0 Td (11) Tj T* -60.88 0 Td ET
Q
Q
q
1 0 0 1 0 57 cm
q
BT 1 0 0 1 0 4.82 Tm 12 TL /F2 10 Tf 0 0 .501961 rg (plac vs argparse) Tj T* ET
Q
Q
q
1 0 0 1 397.8898 57 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 4.82 Tm /F2 10 Tf 12 TL 60.88 0 Td (12) Tj T* -60.88 0 Td ET
Q
Q
q
1 0 0 1 0 39 cm
q
BT 1 0 0 1 0 4.82 Tm 12 TL /F2 10 Tf 0 0 .501961 rg (plac vs the rest of the world) Tj T* ET
Q
Q
q
1 0 0 1 397.8898 39 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 4.82 Tm /F2 10 Tf 12 TL 60.88 0 Td (13) Tj T* -60.88 0 Td ET
Q
Q
q
1 0 0 1 0 21 cm
q
BT 1 0 0 1 0 4.82 Tm 12 TL /F2 10 Tf 0 0 .501961 rg (The future) Tj T* ET
Q
Q
q
1 0 0 1 397.8898 21 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 4.82 Tm /F2 10 Tf 12 TL 60.88 0 Td (14) Tj T* -60.88 0 Td ET
Q
Q
q
1 0 0 1 0 3 cm
q
BT 1 0 0 1 0 4.82 Tm 12 TL /F2 10 Tf 0 0 .501961 rg (Trivia: the story behind the name) Tj T* ET
Q
Q
q
1 0 0 1 397.8898 3 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 4.82 Tm /F2 10 Tf 12 TL 60.88 0 Td (14) Tj T* -60.88 0 Td ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 308.0236 cm
q
BT 1 0 0 1 0 8.435 Tm 21 TL /F2 17.5 Tf 0 0 0 rg (The importance of scaling down) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 242.0236 cm
q
BT 1 0 0 1 0 52.82 Tm 1.50936 Tw 12 TL /F1 10 Tf 0 0 0 rg (There is no want of command line arguments parsers in the Python world. The standard library alone) Tj T* 0 Tw 1.087126 Tw (contains three different modules: ) Tj 0 0 .501961 rg (getopt ) Tj 0 0 0 rg (\(from the stone age\), ) Tj 0 0 .501961 rg (optparse ) Tj 0 0 0 rg (\(from Python 2.3\) and ) Tj 0 0 .501961 rg (argparse) Tj T* 0 Tw .223735 Tw 0 0 0 rg (\(from Python 2.7\). All of them are quite powerful and especially ) Tj 0 0 .501961 rg (argparse ) Tj 0 0 0 rg (is an industrial strength solution;) Tj T* 0 Tw 1.40311 Tw (unfortunately, all of them feature a non-zero learning curve and a certain verbosity. They do not scale) Tj T* 0 Tw (down well enough, at least in my opinion.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 152.0236 cm
q
BT 1 0 0 1 0 76.82 Tm .051984 Tw 12 TL /F1 10 Tf 0 0 0 rg (It should not be necessary to stress the importance ) Tj 0 0 .501961 rg (scaling down) Tj 0 0 0 rg (; nevertheless most people are obsessed) Tj T* 0 Tw 1.385868 Tw (with features and concerned with the possibility of scaling up, whereas I think that we should be even) Tj T* 0 Tw .996457 Tw (more concerned with the issue of scaling down. This is an old meme in the computing world: programs) Tj T* 0 Tw 2.499984 Tw (should address the common cases simply, simple things should be kept simple, while at the same) Tj T* 0 Tw .535868 Tw (keeping difficult things possible. ) Tj 0 0 .501961 rg (plac ) Tj 0 0 0 rg (adhere as much as possible to this philosophy and it is designed to) Tj T* 0 Tw 2.44686 Tw (handle well the simple cases, while retaining the ability to handle complex cases by relying on the) Tj T* 0 Tw (underlying power of ) Tj 0 0 .501961 rg (argparse) Tj 0 0 0 rg (.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 98.02362 cm
q
BT 1 0 0 1 0 40.82 Tm 1.488221 Tw 12 TL /F1 10 Tf 0 0 0 rg (Technically ) Tj 0 0 .501961 rg (plac ) Tj 0 0 0 rg (is just a simple wrapper over ) Tj 0 0 .501961 rg (argparse ) Tj 0 0 0 rg (which hides most of its complexity by using a ) Tj T* 0 Tw .203318 Tw (declarative interface: the argument parser is inferred rather than written down by imperatively. Still, ) Tj 0 0 .501961 rg (plac ) Tj 0 0 0 rg (is ) Tj T* 0 Tw .125984 Tw (surprisingly scalable upwards, even without using the underlying ) Tj 0 0 .501961 rg (argparse) Tj 0 0 0 rg (. I have been using Python for 8 ) Tj T* 0 Tw 1.618876 Tw (years and in my experience it is extremely unlikely that you will ever need to go beyond the features) Tj T* 0 Tw ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
0 0 0 rg
BT 1 0 0 1 0 4.82 Tm /F1 10 Tf 12 TL 238.1649 0 Td (1) Tj T* -238.1649 0 Td ET
Q
Q
 
endstream

endobj
% 'R165': class PDFStream 
165 0 obj
% page stream
<< /Length 4830 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 741.0236 cm
q
BT 1 0 0 1 0 16.82 Tm 1.776457 Tw 12 TL /F1 10 Tf 0 0 0 rg (provided by the declarative interface of ) Tj 0 0 .501961 rg (plac) Tj 0 0 0 rg (: they should be more than enough for 99.9% of the use) Tj T* 0 Tw (cases.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 639.0236 cm
q
BT 1 0 0 1 0 88.82 Tm 1.540888 Tw 12 TL /F1 10 Tf 0 0 .501961 rg (plac ) Tj 0 0 0 rg (is targetting especially unsophisticated users, programmers, sys-admins, scientists and in general) Tj T* 0 Tw .81284 Tw (people writing throw-away scripts for themselves, choosing the command line interface because it is the) Tj T* 0 Tw .471751 Tw (quick and simple. Such users are not interested in features, they are interested in a small learning curve:) Tj T* 0 Tw .984988 Tw (they just want to be able to write a simple command line tool from a simple specification, not to build a) Tj T* 0 Tw 1.091235 Tw (command line parser by hand. Unfortunately, the modules in the standard library forces them to go the) Tj T* 0 Tw .014104 Tw (hard way. They are designed to implement power user tools and they have a non-trivial learning curve. On) Tj T* 0 Tw 1.584104 Tw (the contrary, ) Tj 0 0 .501961 rg (plac ) Tj 0 0 0 rg (is designed to be simple to use and extremely concise, as the examples below will) Tj T* 0 Tw (show.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 606.0236 cm
q
BT 1 0 0 1 0 8.435 Tm 21 TL /F2 17.5 Tf 0 0 0 rg (Scripts with required arguments) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 540.0236 cm
q
BT 1 0 0 1 0 52.82 Tm .352209 Tw 12 TL /F1 10 Tf 0 0 0 rg (Let me start with the simplest possible thing: a script that takes a single argument and does something to) Tj T* 0 Tw 1.022485 Tw (it. It cannot get simpler than that, unless you consider a script without command line arguments, where) Tj T* 0 Tw .735488 Tw (there is nothing to parse. Still, it is a use case ) Tj /F5 10 Tf (extremely common) Tj /F1 10 Tf (: I need to write scripts like that nearly) Tj T* 0 Tw .486655 Tw (every day, I wrote hundreds of them in the last few years and I have never been happy. Here is a typical) Tj T* 0 Tw (example of code I have been writing by hand for years:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 338.8236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 192 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 173.71 Tm /F4 10 Tf 12 TL (# example1.py) Tj T* (def main\(dsn\):) Tj T* (    "Do something with the database") Tj T* (    print\(dsn\)) Tj T* (    # ...) Tj T*  T* (if __name__ == '__main__':) Tj T* (    import sys) Tj T* (    n = len\(sys.argv[1:]\)) Tj T* (    if n == 0:) Tj T* (        sys.exit\('usage: python %s dsn' % sys.argv[0]\)) Tj T* (    elif n == 1:) Tj T* (        main\(sys.argv[1]\)) Tj T* (    else:) Tj T* (        sys.exit\('Unrecognized arguments: %s' % ' '.join\(sys.argv[2:]\)\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 234.8236 cm
q
BT 1 0 0 1 0 88.82 Tm .880651 Tw 12 TL /F1 10 Tf 0 0 0 rg (As you see the whole ) Tj /F4 10 Tf (if __name__ == '__main__' ) Tj /F1 10 Tf (block \(nine lines\) is essentially boilerplate that) Tj T* 0 Tw 1.67881 Tw (should not exists. Actually I think the language should recognize the main function and pass to it the) Tj T* 0 Tw 3.096905 Tw (command line arguments automatically; unfortunaly this is unlikely to happen. I have been writing) Tj T* 0 Tw 1.767356 Tw (boilerplate like this in hundreds of scripts for years, and every time I ) Tj /F5 10 Tf (hate ) Tj /F1 10 Tf (it. The purpose of using a) Tj T* 0 Tw 1.47229 Tw (scripting language is convenience and trivial things should be trivial. Unfortunately the standard library) Tj T* 0 Tw .69881 Tw (does not help for this incredibly common use case. Using ) Tj 0 0 .501961 rg (getopt ) Tj 0 0 0 rg (and ) Tj 0 0 .501961 rg (optparse ) Tj 0 0 0 rg (does not help, since they) Tj T* 0 Tw .894104 Tw (are intended to manage options and not positional arguments; the ) Tj 0 0 .501961 rg (argparse ) Tj 0 0 0 rg (module helps a bit and it is) Tj T* 0 Tw (able to reduce the boilerplate from nine lines to six lines:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 93.62362 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 132 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 113.71 Tm /F4 10 Tf 12 TL (# example2.py) Tj T* (def main\(dsn\):) Tj T* (    "Do something on the database") Tj T* (    print\(dsn\)) Tj T* (    # ...) Tj T*  T* (if __name__ == '__main__':) Tj T* (    import argparse) Tj T* (    p = argparse.ArgumentParser\(\)) Tj T* (    p.add_argument\('dsn'\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
0 0 0 rg
BT 1 0 0 1 0 4.82 Tm /F1 10 Tf 12 TL 238.1649 0 Td (2) Tj T* -238.1649 0 Td ET
Q
Q
 
endstream

endobj
% 'R166': class PDFStream 
166 0 obj
% page stream
<< /Length 4076 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 727.8236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 36 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 17.71 Tm /F4 10 Tf 12 TL (    arg = p.parse_args\(\)) Tj T* (    main\(arg.dsn\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 671.8236 cm
q
0 0 0 rg
BT 1 0 0 1 0 40.82 Tm /F1 10 Tf 12 TL 1.644269 Tw (However saving three lines does not justify introducing the external dependency: most people will not) Tj T* 0 Tw 2.206303 Tw (switch to Python 2.7, which at the time of this writing is just about to be released, for many years.) Tj T* 0 Tw .678488 Tw (Moreover, it just feels too complex to instantiate a class and to define a parser by hand for such a trivial) Tj T* 0 Tw (task.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 641.8236 cm
q
BT 1 0 0 1 0 16.82 Tm 1.123145 Tw 12 TL /F1 10 Tf 0 0 0 rg (The ) Tj 0 0 .501961 rg (plac ) Tj 0 0 0 rg (module is designed to manage well such use cases, and it is able to reduce the original nine) Tj T* 0 Tw (lines of boiler plate to two lines. With the ) Tj 0 0 .501961 rg (plac ) Tj 0 0 0 rg (module all you need to write is) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 524.6236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 108 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 89.71 Tm /F4 10 Tf 12 TL (# example3.py) Tj T* (def main\(dsn\):) Tj T* (    "Do something with the database") Tj T* (    print\(dsn\)) Tj T* (    # ...) Tj T* ( ) Tj T* (if __name__ == '__main__':) Tj T* (    import plac; plac.call\(main\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 492.6236 cm
q
BT 1 0 0 1 0 16.82 Tm .929986 Tw 12 TL /F1 10 Tf 0 0 0 rg (The ) Tj 0 0 .501961 rg (plac ) Tj 0 0 0 rg (module provides for free \(actually the work is done by the underlying ) Tj 0 0 .501961 rg (argparse ) Tj 0 0 0 rg (module\) a nice) Tj T* 0 Tw (usage message:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 459.4236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 24 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 5.71 Tm /F4 10 Tf 12 TL ($ python example3.py -h) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 330.2236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 120 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 101.71 Tm /F4 10 Tf 12 TL (usage: example3.py [-h] dsn) Tj T*  T* (Do something with the database) Tj T*  T* (positional arguments:) Tj T* (  dsn) Tj T*  T* (optional arguments:) Tj T* (  -h, --help  show this help message and exit) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 310.2236 cm
q
BT 1 0 0 1 0 4.82 Tm 12 TL /F1 10 Tf 0 0 0 rg (This is only the tip of the iceberg: ) Tj 0 0 .501961 rg (plac ) Tj 0 0 0 rg (is able to do much more than that.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 277.2236 cm
q
BT 1 0 0 1 0 8.435 Tm 21 TL /F2 17.5 Tf 0 0 0 rg (Scripts with default arguments) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 247.2236 cm
q
0 0 0 rg
BT 1 0 0 1 0 16.82 Tm /F1 10 Tf 12 TL 1.33436 Tw (The need to have suitable defaults for command line arguments is quite common. For instance I have) Tj T* 0 Tw (encountered this use case at work hundreds of times:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 94.02362 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 144 re B*
Q
q
BT 1 0 0 1 0 125.71 Tm 12 TL /F4 10 Tf 0 0 0 rg (# example4.py) Tj T* (from datetime import datetime) Tj T*  T* (def main\(dsn, table='product', today=datetime.today\(\)\):) Tj T* (    "Do something on the database") Tj T* (    print\(dsn, table, today\)) Tj T*  T* (if __name__ == '__main__':) Tj T* (    import sys) Tj T* (    args = sys.argv[1:]) Tj T* (    if not args:) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
0 0 0 rg
BT 1 0 0 1 0 4.82 Tm /F1 10 Tf 12 TL 238.1649 0 Td (3) Tj T* -238.1649 0 Td ET
Q
Q
 
endstream

endobj
% 'R167': class PDFStream 
167 0 obj
% page stream
<< /Length 3963 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 703.8236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 60 re B*
Q
q
BT 1 0 0 1 0 41.71 Tm 12 TL /F4 10 Tf 0 0 0 rg (        sys.exit\('usage: python %s dsn' % sys.argv[0]\)) Tj T* (    elif len\(args\) ) Tj (>) Tj ( 2:) Tj T* (        sys.exit\('Unrecognized arguments: %s' % ' '.join\(argv[2:]\)\)) Tj T* (    main\(*args\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 635.8236 cm
q
BT 1 0 0 1 0 52.82 Tm 1.138935 Tw 12 TL /F1 10 Tf 0 0 0 rg (Here I want to perform a query on a database table, by extracting the today's data: it makes sense for) Tj T* 0 Tw .299988 Tw /F4 10 Tf (today ) Tj /F1 10 Tf (to be a default argument. If there is a most used table \(in this example a table called ) Tj /F4 10 Tf ('product') Tj /F1 10 Tf (\)) Tj T* 0 Tw 2.828735 Tw (it also makes sense to make it a default argument. Performing the parsing of the command lines) Tj T* 0 Tw .083735 Tw (arguments by hand takes 8 ugly lines of boilerplate \(using ) Tj 0 0 .501961 rg (argparse ) Tj 0 0 0 rg (would require about the same number) Tj T* 0 Tw (of lines\). With ) Tj 0 0 .501961 rg (plac ) Tj 0 0 0 rg (the entire ) Tj /F4 10 Tf (__main__ ) Tj /F1 10 Tf (block reduces to the usual two lines:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 590.6236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 36 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 17.71 Tm /F4 10 Tf 12 TL (if __name__ == '__main__':) Tj T* (    import plac; plac.call\(main\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 570.6236 cm
q
0 0 0 rg
BT 1 0 0 1 0 4.82 Tm /F1 10 Tf 12 TL (In other words, six lines of boilerplate have been removed, and we get the usage message for free:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 417.4236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 144 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 125.71 Tm /F4 10 Tf 12 TL (usage: example5.py [-h] dsn [table] [today]) Tj T*  T* (Do something on the database) Tj T*  T* (positional arguments:) Tj T* (  dsn) Tj T* (  table) Tj T* (  today) Tj T*  T* (optional arguments:) Tj T* (  -h, --help  show this help message and exit) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 385.4236 cm
q
BT 1 0 0 1 0 16.82 Tm .396235 Tw 12 TL /F1 10 Tf 0 0 .501961 rg (plac ) Tj 0 0 0 rg (manages transparently even the case when you want to pass a variable number of arguments. Here) Tj T* 0 Tw (is an example, a script running on a database a series of SQL scripts:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 232.2236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 144 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 125.71 Tm /F4 10 Tf 12 TL (# example7.py) Tj T* (from datetime import datetime) Tj T*  T* (def main\(dsn, *scripts\):) Tj T* (    "Run the given scripts on the database") Tj T* (    for script in scripts:) Tj T* (        print\('executing %s' % script\)) Tj T* (        # ...) Tj T*  T* (if __name__ == '__main__':) Tj T* (    import plac; plac.call\(main\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 212.2236 cm
q
0 0 0 rg
BT 1 0 0 1 0 4.82 Tm /F1 10 Tf 12 TL (Here is the usage message:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 95.02362 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 108 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 89.71 Tm /F4 10 Tf 12 TL (usage: example7.py [-h] dsn [scripts [scripts ...]]) Tj T*  T* (Run the given scripts on the database) Tj T*  T* (positional arguments:) Tj T* (  dsn) Tj T* (  scripts) Tj T*  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
0 0 0 rg
BT 1 0 0 1 0 4.82 Tm /F1 10 Tf 12 TL 238.1649 0 Td (4) Tj T* -238.1649 0 Td ET
Q
Q
 
endstream

endobj
% 'R168': class PDFStream 
168 0 obj
% page stream
<< /Length 4987 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 727.8236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 36 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 17.71 Tm /F4 10 Tf 12 TL (optional arguments:) Tj T* (  -h, --help  show this help message and exit) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 683.8236 cm
q
BT 1 0 0 1 0 28.82 Tm .92881 Tw 12 TL /F1 10 Tf 0 0 0 rg (The examples here should have made clear that ) Tj /F5 10 Tf (plac is able to figure out the command line arguments) Tj T* 0 Tw .899988 Tw (parser to use from the signature of the main function) Tj /F1 10 Tf (. This is the whole idea behind ) Tj 0 0 .501961 rg (plac) Tj 0 0 0 rg (: if the intent is) Tj T* 0 Tw (clear, let's the machine take care of the details.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 641.8236 cm
q
BT 1 0 0 1 0 28.82 Tm .476098 Tw 12 TL /F1 10 Tf 0 0 .501961 rg (plac ) Tj 0 0 0 rg (is inspired to the ) Tj 0 0 .501961 rg (optionparse ) Tj 0 0 0 rg (recipe, in the sense that it delivers the programmer from the burden of) Tj T* 0 Tw .011488 Tw (writing the parser, but is less of a hack: instead of extracting the parser from the docstring of the module, it) Tj T* 0 Tw (extracts it from the signature of the ) Tj /F4 10 Tf (main ) Tj /F1 10 Tf (function.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 611.8236 cm
q
BT 1 0 0 1 0 16.82 Tm .319987 Tw 12 TL /F1 10 Tf 0 0 0 rg (The idea comes from the ) Tj /F5 10 Tf (function annotations ) Tj /F1 10 Tf (concept, a new feature of Python 3. An example is worth a) Tj T* 0 Tw (thousand words, so here it is:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 458.6236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 144 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 125.71 Tm /F4 10 Tf 12 TL (# example7_.py) Tj T* (from datetime import datetime) Tj T*  T* (def main\(dsn: "Database dsn", *scripts: "SQL scripts"\):) Tj T* (    "Run the given scripts on the database") Tj T* (    for script in scripts:) Tj T* (        print\('executing %s' % script\)) Tj T* (        # ...) Tj T*  T* (if __name__ == '__main__':) Tj T* (    import plac; plac.call\(main\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 426.6236 cm
q
BT 1 0 0 1 0 16.82 Tm .17528 Tw 12 TL /F1 10 Tf 0 0 0 rg (Here the arguments of the ) Tj /F4 10 Tf (main ) Tj /F1 10 Tf (function have been annotated with strings which are intented to be used) Tj T* 0 Tw (in the help message:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 285.4236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 132 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 113.71 Tm /F4 10 Tf 12 TL (usage: example7_.py [-h] dsn [scripts [scripts ...]]) Tj T*  T* (Run the given scripts on the database) Tj T*  T* (positional arguments:) Tj T* (  dsn         Database dsn) Tj T* (  scripts     SQL scripts) Tj T*  T* (optional arguments:) Tj T* (  -h, --help  show this help message and exit) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 265.4236 cm
q
BT 1 0 0 1 0 4.82 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (plac ) Tj 0 0 0 rg (is able to recognize much more complex annotations, as I will show in the next paragraphs.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 232.4236 cm
q
BT 1 0 0 1 0 8.435 Tm 21 TL /F2 17.5 Tf 0 0 0 rg (Scripts with options \(and smart options\)) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 142.4236 cm
q
BT 1 0 0 1 0 76.82 Tm .046098 Tw 12 TL /F1 10 Tf 0 0 0 rg (It is surprising how few command line scripts with options I have written over the years \(probably less than) Tj T* 0 Tw 1.02311 Tw (a hundred\), compared to the number of scripts with positional arguments I wrote \(certainly more than a) Tj T* 0 Tw .177045 Tw (thousand of them\). Still, this use case cannot be neglected. The standard library modules \(all of them\) are) Tj T* 0 Tw 2.30686 Tw (quite verbose when it comes to specifying the options and frankly I have never used them directly.) Tj T* 0 Tw 3.10561 Tw (Instead, I have always relied on an old recipe of mine, the ) Tj 0 0 .501961 rg (optionparse ) Tj 0 0 0 rg (recipe, which provides a) Tj T* 0 Tw 2.369982 Tw (convenient wrapper over ) Tj 0 0 .501961 rg (optionparse) Tj 0 0 0 rg (. Alternatively, in the simplest cases, I have just performed the) Tj T* 0 Tw (parsing by hand. In ) Tj 0 0 .501961 rg (plac ) Tj 0 0 0 rg (the parser is inferred by the function annotations. Here is an example:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 97.22362 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 36 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 17.71 Tm /F4 10 Tf 12 TL (# example8.py) Tj T* (def main\(command: \("SQL query", 'option', 'c'\), dsn\):) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
0 0 0 rg
BT 1 0 0 1 0 4.82 Tm /F1 10 Tf 12 TL 238.1649 0 Td (5) Tj T* -238.1649 0 Td ET
Q
Q
 
endstream

endobj
% 'R169': class PDFStream 
169 0 obj
% page stream
<< /Length 4202 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 679.8236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 84 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 65.71 Tm /F4 10 Tf 12 TL (    if command:) Tj T* (        print\('executing %s on %s' % \(command, dsn\)\)) Tj T* (        # ...) Tj T*  T* (if __name__ == '__main__':) Tj T* (    import plac; plac.call\(main\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 623.8236 cm
q
BT 1 0 0 1 0 40.82 Tm .929213 Tw 12 TL /F1 10 Tf 0 0 0 rg (Here the argument ) Tj /F4 10 Tf (command ) Tj /F1 10 Tf (has been annotated with the tuple ) Tj /F4 10 Tf (\("SQL query", 'option', 'c'\)) Tj /F1 10 Tf (:) Tj T* 0 Tw .62683 Tw (the first string is the help string which will appear in the usage message, the second string tells ) Tj 0 0 .501961 rg (plac ) Tj 0 0 0 rg (that) Tj T* 0 Tw .931894 Tw /F4 10 Tf (command ) Tj /F1 10 Tf (is an option and the third string that there is also a short form of the option ) Tj /F4 10 Tf (-c) Tj /F1 10 Tf (, the long form) Tj T* 0 Tw (being ) Tj /F4 10 Tf (--command=) Tj /F1 10 Tf (. The usage message is the following:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 494.6236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 120 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 101.71 Tm /F4 10 Tf 12 TL (usage: example8.py [-h] [-c COMMAND] dsn) Tj T*  T* (positional arguments:) Tj T* (  dsn) Tj T*  T* (optional arguments:) Tj T* (  -h, --help            show this help message and exit) Tj T* (  -c COMMAND, --command COMMAND) Tj T* (                        SQL query) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 474.6236 cm
q
0 0 0 rg
BT 1 0 0 1 0 4.82 Tm /F1 10 Tf 12 TL (Here are two examples of usage:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 393.4236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 72 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 53.71 Tm /F4 10 Tf 12 TL ($ python3 example8.py -c"select * from table" dsn) Tj T* (executing select * from table on dsn) Tj T*  T* ($ python3 example8.py --command="select * from table" dsn) Tj T* (executing select * from table on dsn) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 337.4236 cm
q
BT 1 0 0 1 0 40.82 Tm .268935 Tw 12 TL /F1 10 Tf 0 0 0 rg (The third argument in the function annotation can be omitted: in such case it will be assumed to be ) Tj /F4 10 Tf (None) Tj /F1 10 Tf (.) Tj T* 0 Tw 2.839213 Tw (The consequence is that the usual dichotomy between long and short options \(GNU-style options\)) Tj T* 0 Tw .396235 Tw (disappears: we get ) Tj /F5 10 Tf (smart options) Tj /F1 10 Tf (, which have the single character prefix of short options and behave like) Tj T* 0 Tw (both long and short options, since they can be abbreviated. Here is an example featuring smart options:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 244.2236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 84 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 65.71 Tm /F4 10 Tf 12 TL (# example6.py) Tj T* (def main\(dsn, command: \("SQL query", 'option'\)\):) Tj T* (    print\('executing %r on %s' % \(command, dsn\)\)) Tj T*  T* (if __name__ == '__main__':) Tj T* (    import plac; plac.call\(main\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 127.0236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 108 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 89.71 Tm /F4 10 Tf 12 TL (usage: example6.py [-h] [-command COMMAND] dsn) Tj T*  T* (positional arguments:) Tj T* (  dsn) Tj T*  T* (optional arguments:) Tj T* (  -h, --help        show this help message and exit) Tj T* (  -command COMMAND  SQL query) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 107.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 4.82 Tm /F1 10 Tf 12 TL (The following are all valid invocations ot the script:) Tj T* ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
0 0 0 rg
BT 1 0 0 1 0 4.82 Tm /F1 10 Tf 12 TL 238.1649 0 Td (6) Tj T* -238.1649 0 Td ET
Q
Q
 
endstream

endobj
% 'R170': class PDFStream 
170 0 obj
% page stream
<< /Length 4357 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 679.8236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 84 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 65.71 Tm /F4 10 Tf 12 TL ($ python3 example6.py -c "select" dsn) Tj T* (executing 'select' on dsn) Tj T* ($ python3 example6.py -com "select" dsn) Tj T* (executing 'select' on dsn) Tj T* ($ python3 example6.py -command="select" dsn) Tj T* (executing 'select' on dsn) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 659.8236 cm
q
BT 1 0 0 1 0 4.82 Tm 12 TL /F1 10 Tf 0 0 0 rg (Notice that the form ) Tj /F4 10 Tf (-command=SQL ) Tj /F1 10 Tf (is recognized only for the full option, not for its abbreviations:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 602.6236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 48 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 29.71 Tm /F4 10 Tf 12 TL ($ python3 example6.py -com="select" dsn) Tj T* (usage: example6.py [-h] [-command COMMAND] dsn) Tj T* (example6.py: error: unrecognized arguments: -com=select) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 570.6236 cm
q
BT 1 0 0 1 0 16.82 Tm 1.724987 Tw 12 TL /F1 10 Tf 0 0 0 rg (If the option is not passed, the variable ) Tj /F4 10 Tf (command ) Tj /F1 10 Tf (will get the value ) Tj /F4 10 Tf (None) Tj /F1 10 Tf (. However, it is possible to) Tj T* 0 Tw (specify a non-trivial default. Here is an example:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 477.4236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 84 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 65.71 Tm /F4 10 Tf 12 TL (# example8_.py) Tj T* (def main\(dsn, command: \("SQL query", 'option'\)='select * from table'\):) Tj T* (    print\('executing %r on %s' % \(command, dsn\)\)) Tj T*  T* (if __name__ == '__main__':) Tj T* (    import plac; plac.call\(main\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 457.4236 cm
q
0 0 0 rg
BT 1 0 0 1 0 4.82 Tm /F1 10 Tf 12 TL (Notice that the default value appears in the help message:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 328.2236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 120 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 101.71 Tm /F4 10 Tf 12 TL (usage: example8_.py [-h] [-command select * from table] dsn) Tj T*  T* (positional arguments:) Tj T* (  dsn) Tj T*  T* (optional arguments:) Tj T* (  -h, --help            show this help message and exit) Tj T* (  -command select * from table) Tj T* (                        SQL query) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 308.2236 cm
q
BT 1 0 0 1 0 4.82 Tm 12 TL /F1 10 Tf 0 0 0 rg (When you run the script and you do not pass the ) Tj /F4 10 Tf (-command ) Tj /F1 10 Tf (option, the default query will be executed:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 263.0236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 36 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 17.71 Tm /F4 10 Tf 12 TL ($ python3 example8_.py dsn) Tj T* (executing 'select * from table' on dsn) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 230.0236 cm
q
BT 1 0 0 1 0 8.435 Tm 21 TL /F2 17.5 Tf 0 0 0 rg (Scripts with flags) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 200.0236 cm
q
BT 1 0 0 1 0 16.82 Tm .815542 Tw 12 TL /F1 10 Tf 0 0 .501961 rg (plac ) Tj 0 0 0 rg (is able to recognize flags, i.e. boolean options which are ) Tj /F4 10 Tf (True ) Tj /F1 10 Tf (if they are passed to the command) Tj T* 0 Tw (line and ) Tj /F4 10 Tf (False ) Tj /F1 10 Tf (if they are absent. Here is an example:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 98.27714 cm
q
q
.96447 0 0 .96447 0 0 cm
q
1 0 0 1 6.6 6.843137 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 486 96 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 77.71 Tm /F4 10 Tf 12 TL (# example9.py) Tj T*  T* (def main\(verbose: \('prints more info', 'flag', 'v'\), dsn: 'connection string'\):) Tj T* (    if verbose:) Tj T* (        print\('connecting to %s' % dsn\)) Tj T* (    # ...) Tj T*  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
0 0 0 rg
BT 1 0 0 1 0 4.82 Tm /F1 10 Tf 12 TL 238.1649 0 Td (7) Tj T* -238.1649 0 Td ET
Q
Q
 
endstream

endobj
% 'R171': class PDFStream 
171 0 obj
% page stream
<< /Length 4910 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 727.8236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 36 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 17.71 Tm /F4 10 Tf 12 TL (if __name__ == '__main__':) Tj T* (    import plac; plac.call\(main\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 610.6236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 108 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 89.71 Tm /F4 10 Tf 12 TL (usage: example9.py [-h] [-v] dsn) Tj T*  T* (positional arguments:) Tj T* (  dsn            connection string) Tj T*  T* (optional arguments:) Tj T* (  -h, --help     show this help message and exit) Tj T* (  -v, --verbose  prints more info) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 565.4236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 36 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 17.71 Tm /F4 10 Tf 12 TL ($ python3 example9.py -v dsn) Tj T* (connecting to dsn) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 521.4236 cm
q
BT 1 0 0 1 0 28.82 Tm .31408 Tw 12 TL /F1 10 Tf 0 0 0 rg (Notice that it is an error trying to specify a default for flags: the default value for a flag is always ) Tj /F4 10 Tf (False) Tj /F1 10 Tf (. If) Tj T* 0 Tw 2.652485 Tw (you feel the need to implement non-boolean flags, you should use an option with two choices, as) Tj T* 0 Tw (explained in the "more features" section.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 455.4236 cm
q
BT 1 0 0 1 0 52.82 Tm 5.832651 Tw 12 TL /F1 10 Tf 0 0 0 rg (For consistency with the way the usage message is printed, I suggest you to follow the) Tj T* 0 Tw 1.895433 Tw (Flag-Option-Required-Default \(FORD\) convention: in the ) Tj /F4 10 Tf (main ) Tj /F1 10 Tf (function write first the flag arguments,) Tj T* 0 Tw .881235 Tw (then the option arguments, then the required arguments and finally the default arguments. This is just a) Tj T* 0 Tw .110574 Tw (convention and you are not forced to use it, except for the default arguments \(including the varargs\) which) Tj T* 0 Tw (must stay at the end as it is required by the Python syntax.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 422.4236 cm
q
BT 1 0 0 1 0 8.435 Tm 21 TL /F2 17.5 Tf 0 0 0 rg (plac for Python 2.X users) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 356.4236 cm
q
BT 1 0 0 1 0 52.82 Tm .211807 Tw 12 TL /F1 10 Tf 0 0 0 rg (I do not use Python 3. At work we are just starting to think about migrating to Python 2.6. It will take years) Tj T* 0 Tw .304724 Tw (before we think to migrate to Python 3. I am pretty much sure most Pythonistas are in the same situation.) Tj T* 0 Tw 1.459984 Tw (Therefore ) Tj 0 0 .501961 rg (plac ) Tj 0 0 0 rg (provides a way to work with function annotations even in Python 2.X \(including Python) Tj T* 0 Tw .226098 Tw (2.3\). There is no magic involved; you just need to add the annotations by hand. For instance the annotate) Tj T* 0 Tw (function declaration) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 311.2236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 36 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 17.71 Tm /F4 10 Tf 12 TL (def main\(dsn: "Database dsn", *scripts: "SQL scripts"\):) Tj T* (    ...) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 291.2236 cm
q
0 0 0 rg
BT 1 0 0 1 0 4.82 Tm /F1 10 Tf 12 TL (is equivalent to the following code:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 210.0236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 72 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 53.71 Tm /F4 10 Tf 12 TL (def main\(dsn, *scripts\):) Tj T* (    ...) Tj T* (main.__annotations__ = dict\() Tj T* (    dsn="Database dsn",) Tj T* (    scripts="SQL scripts"\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 166.0236 cm
q
BT 1 0 0 1 0 28.82 Tm .536098 Tw 12 TL /F1 10 Tf 0 0 0 rg (One should be careful to match the keys of the annotation dictionary with the names of the arguments in) Tj T* 0 Tw 3.347485 Tw (the annotated function; for lazy people with Python 2.4 available the simplest way is to use the) Tj T* 0 Tw /F4 10 Tf (plac.annotations ) Tj /F1 10 Tf (decorator that performs the check for you:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 96.82362 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 60 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 41.71 Tm /F4 10 Tf 12 TL (@plac.annotations\() Tj T* (    dsn="Database dsn",) Tj T* (    scripts="SQL scripts"\)) Tj T* (def main\(dsn, *scripts\):) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
0 0 0 rg
BT 1 0 0 1 0 4.82 Tm /F1 10 Tf 12 TL 238.1649 0 Td (8) Tj T* -238.1649 0 Td ET
Q
Q
 
endstream

endobj
% 'R172': class PDFStream 
172 0 obj
% page stream
<< /Length 6179 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 739.8236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 24 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 5.71 Tm /F4 10 Tf 12 TL (    ...) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 707.8236 cm
q
BT 1 0 0 1 0 16.82 Tm 1.846077 Tw 12 TL /F1 10 Tf 0 0 0 rg (In the rest of this article I will assume that you are using Python 2.X with X >) Tj (= 4 and I will use the) Tj T* 0 Tw /F4 10 Tf (plac.annotations ) Tj /F1 10 Tf (decorator. Notice however that ) Tj 0 0 .501961 rg (plac ) Tj 0 0 0 rg (runs even on Python 2.3.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 674.8236 cm
q
BT 1 0 0 1 0 8.435 Tm 21 TL /F2 17.5 Tf 0 0 0 rg (More features) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 620.8236 cm
q
BT 1 0 0 1 0 40.82 Tm 1.483488 Tw 12 TL /F1 10 Tf 0 0 0 rg (One of the goals of ) Tj 0 0 .501961 rg (plac ) Tj 0 0 0 rg (is to have a learning curve of ) Tj /F5 10 Tf (minutes ) Tj /F1 10 Tf (for its core features, compared to the) Tj T* 0 Tw 1.152093 Tw (learning curve of ) Tj /F5 10 Tf (hours ) Tj /F1 10 Tf (of ) Tj 0 0 .501961 rg (argparse) Tj 0 0 0 rg (. In order to reach this goal, I have ) Tj /F5 10 Tf (not ) Tj /F1 10 Tf (sacrificed all the features of) Tj T* 0 Tw 2.89936 Tw 0 0 .501961 rg (argparse) Tj 0 0 0 rg (. Actually a lot of ) Tj 0 0 .501961 rg (argparse ) Tj 0 0 0 rg (power persists in ) Tj 0 0 .501961 rg (plac) Tj 0 0 0 rg (. Until now, I have only showed simple) Tj T* 0 Tw (annotations, but in general an annotation is a 6-tuple of the form) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 614.8236 cm
Q
q
1 0 0 1 62.69291 602.8236 cm
0 0 0 rg
BT /F3 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 5.71 Tm /F4 10 Tf 12 TL (\(help, kind, abbrev, type, choices, metavar\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 602.8236 cm
Q
q
1 0 0 1 62.69291 560.8236 cm
q
BT 1 0 0 1 0 28.82 Tm 1.068735 Tw 12 TL /F1 10 Tf 0 0 0 rg (where ) Tj /F4 10 Tf (help ) Tj /F1 10 Tf (is the help message, ) Tj /F4 10 Tf (kind ) Tj /F1 10 Tf (is a string in the set { ) Tj /F4 10 Tf ("flag") Tj /F1 10 Tf (, ) Tj /F4 10 Tf ("option") Tj /F1 10 Tf (, ) Tj /F4 10 Tf ("positional") Tj /F1 10 Tf (},) Tj T* 0 Tw 1.711163 Tw /F4 10 Tf (abbrev ) Tj /F1 10 Tf (is a one-character string, ) Tj /F4 10 Tf (type ) Tj /F1 10 Tf (is a callable taking a string in input, ) Tj /F4 10 Tf (choices ) Tj /F1 10 Tf (is a discrete) Tj T* 0 Tw (sequence of values and ) Tj /F4 10 Tf (metavar ) Tj /F1 10 Tf (is a string.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 530.8236 cm
q
BT 1 0 0 1 0 16.82 Tm 1.05061 Tw 12 TL /F4 10 Tf 0 0 0 rg (type ) Tj /F1 10 Tf (is used to automagically convert the command line arguments from the string type to any Python) Tj T* 0 Tw (type; by default there is no conversion and ) Tj /F4 10 Tf (type=None) Tj /F1 10 Tf (.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 500.8236 cm
q
BT 1 0 0 1 0 16.82 Tm 2.904692 Tw 12 TL /F4 10 Tf 0 0 0 rg (choices ) Tj /F1 10 Tf (is used to restrict the number of the valid options; by default there is no restriction i.e.) Tj T* 0 Tw /F4 10 Tf (choices=None) Tj /F1 10 Tf (.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 458.8236 cm
q
BT 1 0 0 1 0 28.82 Tm 1.071751 Tw 12 TL /F4 10 Tf 0 0 0 rg (metavar ) Tj /F1 10 Tf (is used to change the argument name in the usage message \(and only there\); by default the) Tj T* 0 Tw 1.056654 Tw (metavar is ) Tj /F4 10 Tf (None) Tj /F1 10 Tf (: this means that the name in the usage message is the same as the argument name,) Tj T* 0 Tw (unless the argument has a default and in such a case is equal to the stringified form of the default.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 440.8236 cm
q
BT 1 0 0 1 0 4.82 Tm 12 TL /F1 10 Tf 0 0 0 rg (Here is an example showing many of the features \(taken from the ) Tj 0 0 .501961 rg (argparse ) Tj 0 0 0 rg (documentation\):) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 232.4467 cm
q
q
.976496 0 0 .976496 0 0 cm
q
1 0 0 1 6.6 6.758862 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 480 204 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 185.71 Tm /F4 10 Tf 12 TL (# example10.py) Tj T* (import plac) Tj T*  T* (@plac.annotations\() Tj T* (operator=\("The name of an operator", 'positional', None, str, ['add', 'mul']\),) Tj T* (numbers=\("A number", 'positional', None, float, None, "n"\)\)) Tj T* (def main\(operator, *numbers\):) Tj T* (    "A script to add and multiply numbers") Tj T* (    op = getattr\(float, '__%s__' % operator\)) Tj T* (    result = dict\(add=0.0, mul=1.0\)[operator]) Tj T* (    for n in numbers:) Tj T* (        result = op\(result, n\)) Tj T* (    return result) Tj T*  T* (if __name__ == '__main__':) Tj T* (    print\(plac.call\(main\)[0]\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 200.4467 cm
q
BT 1 0 0 1 0 16.82 Tm 1.304987 Tw 12 TL /F1 10 Tf 0 0 0 rg (Usually the main function of a script works by side effects and returns ) Tj /F4 10 Tf (None) Tj /F1 10 Tf (; in this example instead I) Tj T* 0 Tw (choose to return the number and to print it in the ) Tj /F4 10 Tf (__main__ ) Tj /F1 10 Tf (block.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 170.4467 cm
q
BT 1 0 0 1 0 16.82 Tm .169431 Tw 12 TL /F1 10 Tf 0 0 0 rg (Notice that ) Tj /F5 10 Tf (plac.call returns a list of strings) Tj /F1 10 Tf (: in particular, it returns a single-element list if the main function) Tj T* 0 Tw (returns a single non-None element \(as in this example\) or an empty list if the main function returns ) Tj /F4 10 Tf (None) Tj /F1 10 Tf (.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 152.4467 cm
q
0 0 0 rg
BT 1 0 0 1 0 4.82 Tm /F1 10 Tf 12 TL (Here is the usage:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 95.24669 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 48 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 29.71 Tm /F4 10 Tf 12 TL (usage: example10.py [-h] {add,mul} [n [n ...]]) Tj T*  T* (A script to add and multiply numbers) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
0 0 0 rg
BT 1 0 0 1 0 4.82 Tm /F1 10 Tf 12 TL 238.1649 0 Td (9) Tj T* -238.1649 0 Td ET
Q
Q
 
endstream

endobj
% 'R173': class PDFStream 
173 0 obj
% page stream
<< /Length 4996 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 667.8236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 96 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 77.71 Tm /F4 10 Tf 12 TL  T* (positional arguments:) Tj T* (  {add,mul}   The name of an operator) Tj T* (  n           A number) Tj T*  T* (optional arguments:) Tj T* (  -h, --help  show this help message and exit) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 635.8236 cm
q
BT 1 0 0 1 0 16.82 Tm .15186 Tw 12 TL /F1 10 Tf 0 0 0 rg (Notice that the docstring of the ) Tj /F4 10 Tf (main ) Tj /F1 10 Tf (function has been automatically added to the usage message. Here) Tj T* 0 Tw (are a couple of examples of use:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 542.4849 cm
q
q
.87797 0 0 .87797 0 0 cm
q
1 0 0 1 6.6 7.517338 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 534 96 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 77.71 Tm /F4 10 Tf 12 TL ($ python example10.py add 1 2 3 4) Tj T* (10.0) Tj T* ($ python example10.py mul 1 2 3 4) Tj T* (24.0) Tj T* ($ python example10.py ad 1 2 3 4 # a mispelling error) Tj T* (usage: example10.py [-h] {add,mul} [n [n ...]]) Tj T* (example10.py: error: argument operator: invalid choice: 'ad' \(choose from 'add', 'mul'\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 486.4849 cm
q
BT 1 0 0 1 0 40.82 Tm 1.535984 Tw 12 TL /F1 10 Tf 0 0 0 rg (If the main function returns a generic number of elements, the elements returned by ) Tj /F4 10 Tf (plac.call ) Tj /F1 10 Tf (are) Tj T* 0 Tw .113735 Tw (stringified by invoking ) Tj /F4 10 Tf (str ) Tj /F1 10 Tf (on each of them. The reason is to simplify testing: a plac-based command-line) Tj T* 0 Tw 1.773876 Tw (interface can be tested by simply comparing lists of strings in input and lists of strings in output. For) Tj T* 0 Tw (instance a doctest may look like this:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 429.2849 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 48 re B*
Q
q
BT 1 0 0 1 0 29.71 Tm 12 TL /F4 10 Tf 0 0 0 rg (>) Tj (>) Tj (>) Tj ( import example10) Tj T* (>) Tj (>) Tj (>) Tj ( plac.call\(example10.main, ['add', '1', '2']\)) Tj T* (['3.0']) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 409.2849 cm
q
BT 1 0 0 1 0 4.82 Tm 12 TL /F4 10 Tf 0 0 0 rg (plac.call ) Tj /F1 10 Tf (works for generators too:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 328.0849 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 72 re B*
Q
q
BT 1 0 0 1 0 53.71 Tm 12 TL /F4 10 Tf 0 0 0 rg (>) Tj (>) Tj (>) Tj ( def main\(n\):) Tj T* (...     for i in range\(int\(n\)\):) Tj T* (...         yield i) Tj T* (>) Tj (>) Tj (>) Tj ( plac.call\(main, ['3']\)) Tj T* (['0', '1', '2']) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 296.0849 cm
q
BT 1 0 0 1 0 16.82 Tm .91811 Tw 12 TL /F1 10 Tf 0 0 0 rg (However, you should notice that ) Tj /F4 10 Tf (plac.call ) Tj /F1 10 Tf (is ) Tj /F5 10 Tf (eager) Tj /F1 10 Tf (, not lazy: the generator is exhausted by the call.) Tj T* 0 Tw (This behavior avoids mistakes like forgetting of applying ) Tj /F4 10 Tf (list\(result\) ) Tj /F1 10 Tf (to the result of a ) Tj /F4 10 Tf (plac.call) Tj /F1 10 Tf (.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 266.0849 cm
q
BT 1 0 0 1 0 16.82 Tm .414983 Tw 12 TL /F1 10 Tf 0 0 0 rg (This behavior makes testing easier and supports the ) Tj /F5 10 Tf (yield-is-print ) Tj /F1 10 Tf (pattern: just replace the occurrences of) Tj T* 0 Tw /F4 10 Tf (print ) Tj /F1 10 Tf (with ) Tj /F4 10 Tf (yield ) Tj /F1 10 Tf (in the main function and you will get an easy to test interface.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 233.0849 cm
q
BT 1 0 0 1 0 8.435 Tm 21 TL /F2 17.5 Tf 0 0 0 rg (A realistic example) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 191.0849 cm
q
BT 1 0 0 1 0 28.82 Tm 1.234488 Tw 12 TL /F1 10 Tf 0 0 0 rg (Here is a more realistic script using most of the features of ) Tj 0 0 .501961 rg (plac ) Tj 0 0 0 rg (to run SQL queries on a database by) Tj T* 0 Tw .930697 Tw (relying on ) Tj 0 0 .501961 rg (SQLAlchemy) Tj 0 0 0 rg (. Notice the usage of the ) Tj /F4 10 Tf (type ) Tj /F1 10 Tf (feature to automagically convert a SQLAlchemy) Tj T* 0 Tw (connection string into a ) Tj 0 0 .501961 rg (SqlSoup ) Tj 0 0 0 rg (object:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 97.8849 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 84 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 65.71 Tm /F4 10 Tf 12 TL (# dbcli.py) Tj T* (import plac) Tj T* (from sqlalchemy.ext.sqlsoup import SqlSoup) Tj T*  T* (@plac.annotations\() Tj T* (    db=\("Connection string", 'positional', None, SqlSoup\),) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
0 0 0 rg
BT 1 0 0 1 0 4.82 Tm /F1 10 Tf 12 TL 235.3849 0 Td (10) Tj T* -235.3849 0 Td ET
Q
Q
 
endstream

endobj
% 'R174': class PDFStream 
174 0 obj
% page stream
<< /Length 3892 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 475.8236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 288 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 269.71 Tm /F4 10 Tf 12 TL (    header=\("Header", 'flag', 'H'\),) Tj T* (    sqlcmd=\("SQL command", 'option', 'c', str, None, "SQL"\),) Tj T* (    delimiter=\("Column separator", 'option', 'd'\),) Tj T* (    scripts="SQL scripts",) Tj T* (    \)) Tj T* (def main\(db, header, sqlcmd, delimiter="|", *scripts\):) Tj T* (    "A script to run queries and SQL scripts on a database") Tj T* (    yield 'Working on %s' % db.bind.url) Tj T*  T* (    if sqlcmd:) Tj T* (        result = db.bind.execute\(sqlcmd\)) Tj T* (        if header: # print the header) Tj T* (            yield delimiter.join\(result.keys\(\)\)) Tj T* (        for row in result: # print the rows) Tj T* (            yield delimiter.join\(map\(str, row\)\)) Tj T*  T* (    for script in scripts:) Tj T* (        db.bind.execute\(file\(script\).read\(\)\)) Tj T* (        yield 'executed %s' % script) Tj T*  T* (if __name__ == '__main__':) Tj T* (    for output in plac.call\(main\):) Tj T* (        print\(output\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 407.8236 cm
q
BT 1 0 0 1 0 52.82 Tm .609398 Tw 12 TL /F1 10 Tf 0 0 0 rg (You can see the ) Tj /F5 10 Tf (yield-is-print ) Tj /F1 10 Tf (pattern here: instead of using ) Tj /F4 10 Tf (print ) Tj /F1 10 Tf (in the main function, we use ) Tj /F4 10 Tf (yield) Tj /F1 10 Tf (,) Tj T* 0 Tw .654431 Tw (and we perform the print in the ) Tj /F4 10 Tf (__main__ ) Tj /F1 10 Tf (block. The advantage of the pattern is that the test becomes) Tj T* 0 Tw 2.757984 Tw (trivial: had we performed the printing in the main function, tje test would have involved redirecting) Tj T* 0 Tw 3.359213 Tw /F4 10 Tf (sys.stdout ) Tj /F1 10 Tf (to a ) Tj /F4 10 Tf (StringIO ) Tj /F1 10 Tf (object and we know that redirecting ) Tj /F4 10 Tf (sys.stdout ) Tj /F1 10 Tf (is always ugly,) Tj T* 0 Tw (especially in multithreaded situations.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 389.8236 cm
q
0 0 0 rg
BT 1 0 0 1 0 4.82 Tm /F1 10 Tf 12 TL (Here is the usage message:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 212.6236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 168 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 149.71 Tm /F4 10 Tf 12 TL (usage: dbcli.py [-h] [-H] [-c SQL] [-d |] db [scripts [scripts ...]]) Tj T*  T* (A script to run queries and SQL scripts on a database) Tj T*  T* (positional arguments:) Tj T* (  db                    Connection string) Tj T* (  scripts               SQL scripts) Tj T*  T* (optional arguments:) Tj T* (  -h, --help            show this help message and exit) Tj T* (  -H, --header          Header) Tj T* (  -c SQL, --sqlcmd SQL  SQL command) Tj T* (  -d |, --delimiter |   Column separator) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 192.6236 cm
q
0 0 0 rg
BT 1 0 0 1 0 4.82 Tm /F1 10 Tf 12 TL (I leave as an exercise for the reader to write doctests for this example.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 159.6236 cm
q
BT 1 0 0 1 0 8.435 Tm 21 TL /F2 17.5 Tf 0 0 0 rg (Keyword arguments) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 117.6236 cm
q
BT 1 0 0 1 0 28.82 Tm 1.831984 Tw 12 TL /F1 10 Tf 0 0 0 rg (Starting from release 0.4, ) Tj 0 0 .501961 rg (plac ) Tj 0 0 0 rg (supports keyword arguments. In practice that means that if your main) Tj T* 0 Tw 2.099213 Tw (function has keyword arguments, ) Tj 0 0 .501961 rg (plac ) Tj 0 0 0 rg (treats specially arguments of the form ) Tj /F4 10 Tf ("name=value" ) Tj /F1 10 Tf (in the) Tj T* 0 Tw (command line. Here is an example:) Tj T* ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
0 0 0 rg
BT 1 0 0 1 0 4.82 Tm /F1 10 Tf 12 TL 235.3849 0 Td (11) Tj T* -235.3849 0 Td ET
Q
Q
 
endstream

endobj
% 'R175': class PDFStream 
175 0 obj
% page stream
<< /Length 3855 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 535.8236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 228 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 209.71 Tm /F4 10 Tf 12 TL (# example12.py) Tj T* (import plac) Tj T*  T* (@plac.annotations\() Tj T* (   opt=\('some option', 'option'\),) Tj T* (   args='default arguments',) Tj T* (   kw='keyword arguments'\)) Tj T* (def main\(opt, *args, **kw\):) Tj T* (   if opt:) Tj T* (      yield 'opt=%s' % opt) Tj T* (   if args:) Tj T* (      yield 'args=%s' % str\(args\)) Tj T* (   if kw:) Tj T* (      yield 'kw=%s' % kw) Tj T*  T* (if __name__ == '__main__':) Tj T* (    for output in plac.call\(main\):) Tj T* (       print\(output\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 515.8236 cm
q
0 0 0 rg
BT 1 0 0 1 0 4.82 Tm /F1 10 Tf 12 TL (Here is the generated usage message:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 386.6236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 120 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 101.71 Tm /F4 10 Tf 12 TL (usage: example12.py [-h] [-opt OPT] [args [args ...]] [kw [kw ...]]) Tj T*  T* (positional arguments:) Tj T* (  args        default arguments) Tj T* (  kw          keyword arguments) Tj T*  T* (optional arguments:) Tj T* (  -h, --help  show this help message and exit) Tj T* (  -opt OPT    some option) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 366.6236 cm
q
0 0 0 rg
BT 1 0 0 1 0 4.82 Tm /F1 10 Tf 12 TL (Here is how you call the script:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 297.4236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 60 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 41.71 Tm /F4 10 Tf 12 TL ($ python example12.py -o X a1 a2 name=value) Tj T* (opt=X) Tj T* (args=\('a1', 'a2'\)) Tj T* (kw={'name': 'value'}) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 265.4236 cm
q
BT 1 0 0 1 0 16.82 Tm 2.133735 Tw 12 TL /F1 10 Tf 0 0 0 rg (When using keyword arguments, one must be careful to use names which are not alreay taken; for) Tj T* 0 Tw (instance in this examples the name ) Tj /F4 10 Tf (opt ) Tj /F1 10 Tf (is taken:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 208.2236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 48 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 29.71 Tm /F4 10 Tf 12 TL ($ python example12.py 1 2 kw1=1 kw2=2 opt=0) Tj T* (usage: example12.py [-h] [-o OPT] [args [args ...]] [kw [kw ...]]) Tj T* (example12.py: error: colliding keyword arguments: opt) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 164.2236 cm
q
0 0 0 rg
BT 1 0 0 1 0 28.82 Tm /F1 10 Tf 12 TL 1.024104 Tw (The names taken are the names of the flags, of the options, and of the positional arguments, excepted) Tj T* 0 Tw .60561 Tw (varargs and keywords. This limitation is a consequence of the way the argument names are managed in) Tj T* 0 Tw (function calls by the Python language.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 131.2236 cm
q
BT 1 0 0 1 0 8.435 Tm 21 TL /F2 17.5 Tf 0 0 0 rg (plac vs argparse) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 89.22362 cm
q
BT 1 0 0 1 0 28.82 Tm 1.065988 Tw 12 TL /F1 10 Tf 0 0 .501961 rg (plac ) Tj 0 0 0 rg (is opinionated and by design it does not try to make available all of the features of ) Tj 0 0 .501961 rg (argparse ) Tj 0 0 0 rg (in an) Tj T* 0 Tw .177126 Tw (easy way. In particular you should be aware of the following limitations/differences \(the following assumes) Tj T* 0 Tw (knowledge of ) Tj 0 0 .501961 rg (argparse) Tj 0 0 0 rg (\):) Tj T* ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
0 0 0 rg
BT 1 0 0 1 0 4.82 Tm /F1 10 Tf 12 TL 235.3849 0 Td (12) Tj T* -235.3849 0 Td ET
Q
Q
 
endstream

endobj
% 'R176': class PDFStream 
176 0 obj
% page stream
<< /Length 8408 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 759.0236 cm
Q
q
1 0 0 1 62.69291 759.0236 cm
Q
q
1 0 0 1 62.69291 681.0236 cm
0 0 0 rg
BT /F3 10 Tf 12 TL ET
q
1 0 0 1 6 63 cm
q
0 0 0 rg
BT 1 0 0 1 0 4.82 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 3 cm
q
BT 1 0 0 1 0 64.82 Tm 2.69784 Tw 12 TL /F1 10 Tf 0 0 0 rg (plac does not support the destination concept: the destination coincides with the name of the) Tj T* 0 Tw .359983 Tw (argument, always. This restriction has some drawbacks. For instance, suppose you want to define a) Tj T* 0 Tw 2.758651 Tw (long option called ) Tj /F4 10 Tf (--yield) Tj /F1 10 Tf (. In this case the destination would be ) Tj /F4 10 Tf (yield) Tj /F1 10 Tf (, which is a Python) Tj T* 0 Tw 1.181235 Tw (keyword, and since you cannot introduce an argument with that name in a function definition, it is) Tj T* 0 Tw 2.12528 Tw (impossible to implement it. Your choices are to change the name of the long option, or to use) Tj T* 0 Tw 0 0 .501961 rg (argparse ) Tj 0 0 0 rg (with a suitable destination.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 681.0236 cm
Q
q
1 0 0 1 62.69291 681.0236 cm
Q
q
1 0 0 1 62.69291 639.0236 cm
0 0 0 rg
BT /F3 10 Tf 12 TL ET
q
1 0 0 1 6 27 cm
q
0 0 0 rg
BT 1 0 0 1 0 4.82 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 3 cm
q
BT 1 0 0 1 0 28.82 Tm 1.120751 Tw 12 TL /F1 10 Tf 0 0 .501961 rg (plac ) Tj 0 0 0 rg (does not support "required options". As the ) Tj 0 0 .501961 rg (argparse ) Tj 0 0 0 rg (documentation puts it: ) Tj /F5 10 Tf (Required options) Tj T* 0 Tw 1.075318 Tw (are generally considered bad form - normal users expect options to be optional. You should avoid) Tj T* 0 Tw (the use of required options whenever possible.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 639.0236 cm
Q
q
1 0 0 1 62.69291 639.0236 cm
Q
q
1 0 0 1 62.69291 573.0236 cm
0 0 0 rg
BT /F3 10 Tf 12 TL ET
q
1 0 0 1 6 51 cm
q
0 0 0 rg
BT 1 0 0 1 0 4.82 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 3 cm
q
BT 1 0 0 1 0 52.82 Tm 1.539982 Tw 12 TL /F1 10 Tf 0 0 .501961 rg (plac ) Tj 0 0 0 rg (supports only regular boolean flags. ) Tj 0 0 .501961 rg (argparse ) Tj 0 0 0 rg (has the ability to define generalized two-value) Tj T* 0 Tw .361751 Tw (flags with values different from ) Tj /F4 10 Tf (True ) Tj /F1 10 Tf (and ) Tj /F4 10 Tf (False) Tj /F1 10 Tf (. An earlier version of ) Tj 0 0 .501961 rg (plac ) Tj 0 0 0 rg (had this feature too, but) Tj T* 0 Tw .814985 Tw (since you can use options with two choices instead, and in any case the conversion from ) Tj /F4 10 Tf ({True,) Tj T* 0 Tw .901984 Tw (False} ) Tj /F1 10 Tf (to any couple of values can be trivially implemented with a ternary operator \() Tj /F4 10 Tf (value1 if) Tj T* 0 Tw (flag else value2) Tj /F1 10 Tf (\), I have removed it \(KISS rules!\).) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 573.0236 cm
Q
q
1 0 0 1 62.69291 573.0236 cm
Q
q
1 0 0 1 62.69291 531.0236 cm
0 0 0 rg
BT /F3 10 Tf 12 TL ET
q
1 0 0 1 6 27 cm
q
0 0 0 rg
BT 1 0 0 1 0 4.82 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 3 cm
q
BT 1 0 0 1 0 28.82 Tm 1.797126 Tw 12 TL /F1 10 Tf 0 0 .501961 rg (plac ) Tj 0 0 0 rg (does not support ) Tj /F4 10 Tf (nargs ) Tj /F1 10 Tf (options directly \(it uses them internally, though, to implement flag) Tj T* 0 Tw .90683 Tw (recognition\). The reason it that all the use cases of interest to me are covered by ) Tj 0 0 .501961 rg (plac ) Tj 0 0 0 rg (and did not) Tj T* 0 Tw (feel the need to increase the learning curve by adding direct support for ) Tj /F4 10 Tf (nargs) Tj /F1 10 Tf (.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 531.0236 cm
Q
q
1 0 0 1 62.69291 531.0236 cm
Q
q
1 0 0 1 62.69291 501.0236 cm
0 0 0 rg
BT /F3 10 Tf 12 TL ET
q
1 0 0 1 6 15 cm
q
0 0 0 rg
BT 1 0 0 1 0 4.82 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 3 cm
q
BT 1 0 0 1 0 16.82 Tm 2.111318 Tw 12 TL /F1 10 Tf 0 0 .501961 rg (plac ) Tj 0 0 0 rg (does support subparsers, but you must read the ) Tj 0 0 .501961 rg (advanced usage document ) Tj 0 0 0 rg (to see how it) Tj T* 0 Tw (works.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 501.0236 cm
Q
q
1 0 0 1 62.69291 501.0236 cm
Q
q
1 0 0 1 62.69291 459.0236 cm
0 0 0 rg
BT /F3 10 Tf 12 TL ET
q
1 0 0 1 6 27 cm
q
0 0 0 rg
BT 1 0 0 1 0 4.82 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 3 cm
q
BT 1 0 0 1 0 28.82 Tm 1.111751 Tw 12 TL /F1 10 Tf 0 0 .501961 rg (plac ) Tj 0 0 0 rg (does not support actions directly. This also looks like a feature too advanced for the goals of) Tj T* 0 Tw .406651 Tw 0 0 .501961 rg (plac) Tj 0 0 0 rg (. Notice however that the ability to define your own annotation objects \(again, see the ) Tj 0 0 .501961 rg (advanced) Tj T* 0 Tw (usage document) Tj 0 0 0 rg (\) may mitigate the need for custom actions.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 459.0236 cm
Q
q
1 0 0 1 62.69291 459.0236 cm
Q
q
1 0 0 1 62.69291 405.0236 cm
q
BT 1 0 0 1 0 40.82 Tm 3.779431 Tw 12 TL /F1 10 Tf 0 0 0 rg (I should stress that if you want to access all of the ) Tj 0 0 .501961 rg (argparse ) Tj 0 0 0 rg (features from ) Tj 0 0 .501961 rg (plac ) Tj 0 0 0 rg (you can use) Tj T* 0 Tw 2.723059 Tw /F4 10 Tf (plac.parser_from ) Tj /F1 10 Tf (and you will get the underlying ) Tj 0 0 .501961 rg (ArgumentParser ) Tj 0 0 0 rg (object. The the full power of) Tj T* 0 Tw 2.44152 Tw 0 0 .501961 rg (argparse ) Tj 0 0 0 rg (is then available to you: you can use ) Tj /F4 10 Tf (add_argument) Tj /F1 10 Tf (, ) Tj /F4 10 Tf (add_subparsers\(\)) Tj /F1 10 Tf (, etc. In other) Tj T* 0 Tw (words, while some features are not supported directly, ) Tj /F5 10 Tf (all ) Tj /F1 10 Tf (features are supported indirectly.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 372.0236 cm
q
BT 1 0 0 1 0 8.435 Tm 21 TL /F2 17.5 Tf 0 0 0 rg (plac vs the rest of the world) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 330.0236 cm
q
BT 1 0 0 1 0 28.82 Tm 1.866905 Tw 12 TL /F1 10 Tf 0 0 0 rg (Originally ) Tj 0 0 .501961 rg (plac ) Tj 0 0 0 rg (boasted about being "the easiest command-line arguments parser in the world". Since) Tj T* 0 Tw .306457 Tw (then, people started pointing out to me various projects which are based on the same idea \(extracting the) Tj T* 0 Tw (parser from the main function signature\) and are arguably even easier than ) Tj 0 0 .501961 rg (plac) Tj 0 0 0 rg (:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 324.0236 cm
Q
q
1 0 0 1 62.69291 324.0236 cm
Q
q
1 0 0 1 62.69291 306.0236 cm
0 0 0 rg
BT /F3 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 4.82 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 3 cm
q
BT 1 0 0 1 0 4.82 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (opterator ) Tj 0 0 0 rg (by Dusty Phillips) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 306.0236 cm
Q
q
1 0 0 1 62.69291 306.0236 cm
Q
q
1 0 0 1 62.69291 288.0236 cm
0 0 0 rg
BT /F3 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 4.82 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 3 cm
q
BT 1 0 0 1 0 4.82 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (CLIArgs ) Tj 0 0 0 rg (by Pavel Panchekha) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 288.0236 cm
Q
q
1 0 0 1 62.69291 288.0236 cm
Q
q
1 0 0 1 62.69291 258.0236 cm
q
BT 1 0 0 1 0 16.82 Tm 2.136457 Tw 12 TL /F1 10 Tf 0 0 0 rg (Luckily for me none of such projects had the idea of using function annotations and ) Tj 0 0 .501961 rg (argparse) Tj 0 0 0 rg (; as a) Tj T* 0 Tw (consequence, they are no match for the capabilities of ) Tj 0 0 .501961 rg (plac) Tj 0 0 0 rg (.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 216.0236 cm
q
BT 1 0 0 1 0 28.82 Tm 1.551163 Tw 12 TL /F1 10 Tf 0 0 0 rg (Of course, there are tons of other libraries to parse the command line. For instance ) Tj 0 0 .501961 rg (Clap ) Tj 0 0 0 rg (by Matthew) Tj T* 0 Tw 1.211567 Tw (Frazier which appeared on PyPI just the day before ) Tj 0 0 .501961 rg (plac) Tj 0 0 0 rg (; ) Tj 0 0 .501961 rg (Clap ) Tj 0 0 0 rg (is fine but it is certainly not easier than) Tj T* 0 Tw 0 0 .501961 rg (plac) Tj 0 0 0 rg (.) Tj T* ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
0 0 0 rg
BT 1 0 0 1 0 4.82 Tm /F1 10 Tf 12 TL 235.3849 0 Td (13) Tj T* -235.3849 0 Td ET
Q
Q
 
endstream

endobj
% 'R177': class PDFStream 
177 0 obj
% page stream
<< /Length 5266 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 744.0236 cm
q
BT 1 0 0 1 0 8.435 Tm 21 TL /F2 17.5 Tf 0 0 0 rg (The future) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 642.0236 cm
q
BT 1 0 0 1 0 88.82 Tm .166098 Tw 12 TL /F1 10 Tf 0 0 0 rg (Currently ) Tj 0 0 .501961 rg (plac ) Tj 0 0 0 rg (is around 170 lines of code, not counting blanks, comments and docstrings. I do not plan to) Tj T* 0 Tw .388626 Tw (extend the core much in the future. The idea is to keep the module short: it is and it should remain a little) Tj T* 0 Tw 2.348651 Tw (wrapper over ) Tj 0 0 .501961 rg (argparse) Tj 0 0 0 rg (. Actually I have thought about contributing the core back to ) Tj 0 0 .501961 rg (argparse ) Tj 0 0 0 rg (if ) Tj 0 0 .501961 rg (plac) Tj T* 0 Tw .22311 Tw 0 0 0 rg (becomes successfull and gains a reasonable number of users. For the moment it should be considered in) Tj T* 0 Tw .127882 Tw (alpha status: after all I wrote the first version of it in three days, including the tests, the documentation and) Tj T* 0 Tw .476098 Tw (the time to learn ) Tj 0 0 .501961 rg (argparse) Tj 0 0 0 rg (. At the moment I have already written some powerful extensions for ) Tj 0 0 .501961 rg (plac ) Tj 0 0 0 rg (and I) Tj T* 0 Tw .600574 Tw (plan to release them in the 0.5 release, once I finish writing ) Tj 0 0 .501961 rg (advanced usage document ) Tj 0 0 0 rg (. The extensions) Tj T* 0 Tw (will be released together with ) Tj 0 0 .501961 rg (plac ) Tj 0 0 0 rg (but in a separated module.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 609.0236 cm
q
BT 1 0 0 1 0 8.435 Tm 21 TL /F2 17.5 Tf 0 0 0 rg (Trivia: the story behind the name) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 543.0236 cm
q
BT 1 0 0 1 0 52.82 Tm .942651 Tw 12 TL /F1 10 Tf 0 0 0 rg (The ) Tj 0 0 .501961 rg (plac ) Tj 0 0 0 rg (project started very humble: I just wanted to make easy_installable my old ) Tj 0 0 .501961 rg (optionparse ) Tj 0 0 0 rg (recipe,) Tj T* 0 Tw .565988 Tw (and to publish it on PyPI. The original name of ) Tj 0 0 .501961 rg (plac ) Tj 0 0 0 rg (was optionparser and the idea behind it was to build) Tj T* 0 Tw .603735 Tw (an ) Tj 0 0 .501961 rg (OptionParser ) Tj 0 0 0 rg (object from the docstring of the module. However, before doing that, I decided to check) Tj T* 0 Tw .244198 Tw (out the ) Tj 0 0 .501961 rg (argparse ) Tj 0 0 0 rg (module, since I knew it was going into Python 2.7 and Python 2.7 was coming out. Soon) Tj T* 0 Tw (enough I realized two things:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 537.0236 cm
Q
q
1 0 0 1 62.69291 537.0236 cm
Q
q
1 0 0 1 62.69291 507.0236 cm
0 0 0 rg
BT /F3 10 Tf 12 TL ET
q
1 0 0 1 6 15 cm
q
0 0 0 rg
BT 1 0 0 1 0 4.82 Tm /F1 10 Tf 12 TL 5.66 0 Td (1.) Tj T* -5.66 0 Td ET
Q
Q
q
1 0 0 1 23 3 cm
q
BT 1 0 0 1 0 16.82 Tm .103735 Tw 12 TL /F1 10 Tf 0 0 0 rg (the single greatest idea of ) Tj 0 0 .501961 rg (argparse ) Tj 0 0 0 rg (was unifying the positional arguments and the options in a single) Tj T* 0 Tw (namespace object;) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 507.0236 cm
Q
q
1 0 0 1 62.69291 507.0236 cm
Q
q
1 0 0 1 62.69291 477.0236 cm
0 0 0 rg
BT /F3 10 Tf 12 TL ET
q
1 0 0 1 6 15 cm
q
0 0 0 rg
BT 1 0 0 1 0 4.82 Tm /F1 10 Tf 12 TL 5.66 0 Td (2.) Tj T* -5.66 0 Td ET
Q
Q
q
1 0 0 1 23 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 16.82 Tm /F1 10 Tf 12 TL 1.66748 Tw (parsing the docstring was so old-fashioned, considering the existence of functions annotations in) Tj T* 0 Tw (Python 3.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 477.0236 cm
Q
q
1 0 0 1 62.69291 477.0236 cm
Q
q
1 0 0 1 62.69291 423.0236 cm
q
BT 1 0 0 1 0 40.82 Tm .600574 Tw 12 TL /F1 10 Tf 0 0 0 rg (Putting together these two observations with the original idea of inferring the parser I decided to build an) Tj T* 0 Tw .516905 Tw 0 0 .501961 rg (ArgumentParser ) Tj 0 0 0 rg (object from function annotations. The ) Tj /F4 10 Tf (optionparser ) Tj /F1 10 Tf (name was ruled out, since I was) Tj T* 0 Tw 2.085984 Tw (now using ) Tj 0 0 .501961 rg (argparse) Tj 0 0 0 rg (; a name like ) Tj /F4 10 Tf (argparse_plus ) Tj /F1 10 Tf (was also ruled out, since the typical usage was) Tj T* 0 Tw (completely different from the ) Tj 0 0 .501961 rg (argparse ) Tj 0 0 0 rg (usage.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 393.0236 cm
q
BT 1 0 0 1 0 16.82 Tm 1.093876 Tw 12 TL /F1 10 Tf 0 0 0 rg (I made a research on PyPI and the name ) Tj /F5 10 Tf (clap ) Tj /F1 10 Tf (\(Command Line Arguments Parser\) was not taken, so I) Tj T* 0 Tw (renamed everything to clap. After two days a ) Tj 0 0 .501961 rg (Clap ) Tj 0 0 0 rg (module appeared on PyPI <) Tj (expletives deleted) Tj (>) Tj (!) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 363.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 16.82 Tm /F1 10 Tf 12 TL .877209 Tw (Having little imagination, I decided to rename everything again to plac, an anagram of clap: since it is a) Tj T* 0 Tw (non-existing English name, I hope nobody will steal it from me!) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 345.0236 cm
q
BT 1 0 0 1 0 4.82 Tm 12 TL /F1 10 Tf 0 0 0 rg (That's all, I hope you will enjoy working with ) Tj 0 0 .501961 rg (plac) Tj 0 0 0 rg (!) Tj T* ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
0 0 0 rg
BT 1 0 0 1 0 4.82 Tm /F1 10 Tf 12 TL 235.3849 0 Td (14) Tj T* -235.3849 0 Td ET
Q
Q
 
endstream

endobj
% 'R178': class PDFPageLabels 
178 0 obj
% Document Root
<< /Nums [ 0
 179 0 R
 1
 180 0 R
 2
 181 0 R
 3
 182 0 R
 4
 183 0 R
 5
 184 0 R
 6
 185 0 R
 7
 186 0 R
 8
 187 0 R
 9
 188 0 R
 10
 189 0 R
 11
 190 0 R
 12
 191 0 R
 13
 192 0 R ] >>
endobj
% 'R179': class PDFPageLabel 
179 0 obj
% None
<< /S /D
 /St 1 >>
endobj
% 'R180': class PDFPageLabel 
180 0 obj
% None
<< /S /D
 /St 2 >>
endobj
% 'R181': class PDFPageLabel 
181 0 obj
% None
<< /S /D
 /St 3 >>
endobj
% 'R182': class PDFPageLabel 
182 0 obj
% None
<< /S /D
 /St 4 >>
endobj
% 'R183': class PDFPageLabel 
183 0 obj
% None
<< /S /D
 /St 5 >>
endobj
% 'R184': class PDFPageLabel 
184 0 obj
% None
<< /S /D
 /St 6 >>
endobj
% 'R185': class PDFPageLabel 
185 0 obj
% None
<< /S /D
 /St 7 >>
endobj
% 'R186': class PDFPageLabel 
186 0 obj
% None
<< /S /D
 /St 8 >>
endobj
% 'R187': class PDFPageLabel 
187 0 obj
% None
<< /S /D
 /St 9 >>
endobj
% 'R188': class PDFPageLabel 
188 0 obj
% None
<< /S /D
 /St 10 >>
endobj
% 'R189': class PDFPageLabel 
189 0 obj
% None
<< /S /D
 /St 11 >>
endobj
% 'R190': class PDFPageLabel 
190 0 obj
% None
<< /S /D
 /St 12 >>
endobj
% 'R191': class PDFPageLabel 
191 0 obj
% None
<< /S /D
 /St 13 >>
endobj
% 'R192': class PDFPageLabel 
192 0 obj
% None
<< /S /D
 /St 14 >>
endobj
xref
0 193
0000000000 65535 f
0000000113 00000 n
0000000258 00000 n
0000000423 00000 n
0000000598 00000 n
0000000779 00000 n
0000001031 00000 n
0000001281 00000 n
0000001539 00000 n
0000001713 00000 n
0000001954 00000 n
0000002196 00000 n
0000002438 00000 n
0000002680 00000 n
0000002922 00000 n
0000003165 00000 n
0000003408 00000 n
0000003651 00000 n
0000003894 00000 n
0000004137 00000 n
0000004380 00000 n
0000004623 00000 n
0000004866 00000 n
0000005109 00000 n
0000005352 00000 n
0000005595 00000 n
0000005838 00000 n
0000006081 00000 n
0000006324 00000 n
0000006567 00000 n
0000006811 00000 n
0000007055 00000 n
0000007299 00000 n
0000007543 00000 n
0000007787 00000 n
0000008030 00000 n
0000008292 00000 n
0000008555 00000 n
0000008805 00000 n
0000009054 00000 n
0000009320 00000 n
0000009572 00000 n
0000009822 00000 n
0000010074 00000 n
0000010324 00000 n
0000010576 00000 n
0000010811 00000 n
0000011476 00000 n
0000011728 00000 n
0000011979 00000 n
0000012218 00000 n
0000012413 00000 n
0000012674 00000 n
0000012938 00000 n
0000013172 00000 n
0000013535 00000 n
0000013787 00000 n
0000014039 00000 n
0000014290 00000 n
0000014540 00000 n
0000014777 00000 n
0000015131 00000 n
0000015380 00000 n
0000015632 00000 n
0000015869 00000 n
0000016205 00000 n
0000016457 00000 n
0000016709 00000 n
0000016997 00000 n
0000017249 00000 n
0000017537 00000 n
0000017825 00000 n
0000018062 00000 n
0000018434 00000 n
0000018671 00000 n
0000018989 00000 n
0000019226 00000 n
0000019544 00000 n
0000019781 00000 n
0000020099 00000 n
0000020351 00000 n
0000020603 00000 n
0000020853 00000 n
0000021103 00000 n
0000021353 00000 n
0000021605 00000 n
0000021840 00000 n
0000022212 00000 n
0000022464 00000 n
0000022710 00000 n
0000022973 00000 n
0000023309 00000 n
0000023561 00000 n
0000023798 00000 n
0000024125 00000 n
0000024376 00000 n
0000024626 00000 n
0000024862 00000 n
0000025198 00000 n
0000025448 00000 n
0000025700 00000 n
0000025951 00000 n
0000026204 00000 n
0000026455 00000 n
0000026708 00000 n
0000026959 00000 n
0000027211 00000 n
0000027464 00000 n
0000027744 00000 n
0000027997 00000 n
0000028250 00000 n
0000028529 00000 n
0000028809 00000 n
0000029060 00000 n
0000029313 00000 n
0000029601 00000 n
0000029852 00000 n
0000030105 00000 n
0000030359 00000 n
0000030618 00000 n
0000030875 00000 n
0000031127 00000 n
0000031381 00000 n
0000031639 00000 n
0000031891 00000 n
0000032149 00000 n
0000032388 00000 n
0000032977 00000 n
0000033230 00000 n
0000033482 00000 n
0000033733 00000 n
0000033986 00000 n
0000034238 00000 n
0000034492 00000 n
0000034773 00000 n
0000035027 00000 n
0000035281 00000 n
0000035568 00000 n
0000035822 00000 n
0000036133 00000 n
0000036385 00000 n
0000036637 00000 n
0000036926 00000 n
0000037178 00000 n
0000037430 00000 n
0000037688 00000 n
0000037927 00000 n
0000038414 00000 n
0000038578 00000 n
0000038852 00000 n
0000038981 00000 n
0000039175 00000 n
0000039386 00000 n
0000039596 00000 n
0000039818 00000 n
0000040016 00000 n
0000040221 00000 n
0000040414 00000 n
0000040613 00000 n
0000040810 00000 n
0000041007 00000 n
0000041218 00000 n
0000041410 00000 n
0000041593 00000 n
0000041823 00000 n
0000050884 00000 n
0000055817 00000 n
0000059996 00000 n
0000064062 00000 n
0000069152 00000 n
0000073457 00000 n
0000077917 00000 n
0000082930 00000 n
0000089212 00000 n
0000094311 00000 n
0000098306 00000 n
0000102264 00000 n
0000110775 00000 n
0000116148 00000 n
0000116430 00000 n
0000116509 00000 n
0000116588 00000 n
0000116667 00000 n
0000116746 00000 n
0000116825 00000 n
0000116904 00000 n
0000116983 00000 n
0000117062 00000 n
0000117141 00000 n
0000117221 00000 n
0000117301 00000 n
0000117381 00000 n
0000117461 00000 n
trailer
<< /ID 
 % ReportLab generated PDF document -- digest (http://www.reportlab.com) 
 [(\2315\367\261S5[w\201\312b\3121\246-\033) (\2315\367\261S5[w\201\312b\3121\246-\033)] 

 /Info 148 0 R
 /Root 147 0 R
 /Size 193 >>
startxref
117510
%%EOF
